# Run these steps to update this file:
sed -i 's/ *"\*\*\/Tests\/"//' composer.json
composer u -o
SYMFONY_PATCH_TYPE_DECLARATIONS='force=2&php=8.1' php .github/patch-types.php
head=$(sed '/^diff /Q' .github/expected-missing-return-types.diff)
git checkout src/Symfony/Contracts/Service/ResetInterface.php
(echo "$head" && echo && git diff -U2 src/ | grep '^index ' -v) > .github/expected-missing-return-types.diff
git checkout composer.json src/

diff --git a/src/Symfony/Bridge/Doctrine/DataCollector/DoctrineDataCollector.php b/src/Symfony/Bridge/Doctrine/DataCollector/DoctrineDataCollector.php
--- a/src/Symfony/Bridge/Doctrine/DataCollector/DoctrineDataCollector.php
+++ b/src/Symfony/Bridge/Doctrine/DataCollector/DoctrineDataCollector.php
@@ -57,5 +57,5 @@ class DoctrineDataCollector extends DataCollector
      * @deprecated since Symfony 6.4, use a DebugDataHolder instead.
      */
-    public function addLogger(string $name, DebugStack $logger)
+    public function addLogger(string $name, DebugStack $logger): void
     {
         trigger_deprecation('symfony/doctrine-bridge', '6.4', '"%s()" is deprecated. Pass an instance of "%s" to the constructor instead.', __METHOD__, DebugDataHolder::class);
@@ -67,5 +67,5 @@ class DoctrineDataCollector extends DataCollector
      * @return void
      */
-    public function collect(Request $request, Response $response, \Throwable $exception = null)
+    public function collect(Request $request, Response $response, \Throwable $exception = null): void
     {
         $this->data = [
@@ -98,5 +98,5 @@ class DoctrineDataCollector extends DataCollector
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->data = [];
@@ -117,5 +117,5 @@ class DoctrineDataCollector extends DataCollector
      * @return array
      */
-    public function getManagers()
+    public function getManagers(): array
     {
         return $this->data['managers'];
@@ -125,5 +125,5 @@ class DoctrineDataCollector extends DataCollector
      * @return array
      */
-    public function getConnections()
+    public function getConnections(): array
     {
         return $this->data['connections'];
@@ -133,5 +133,5 @@ class DoctrineDataCollector extends DataCollector
      * @return int
      */
-    public function getQueryCount()
+    public function getQueryCount(): int
     {
         return array_sum(array_map('count', $this->data['queries']));
@@ -141,5 +141,5 @@ class DoctrineDataCollector extends DataCollector
      * @return array
      */
-    public function getQueries()
+    public function getQueries(): array
     {
         return $this->data['queries'];
@@ -149,5 +149,5 @@ class DoctrineDataCollector extends DataCollector
      * @return int
      */
-    public function getTime()
+    public function getTime(): int
     {
         $time = 0;
diff --git a/src/Symfony/Bridge/Doctrine/DataFixtures/ContainerAwareLoader.php b/src/Symfony/Bridge/Doctrine/DataFixtures/ContainerAwareLoader.php
--- a/src/Symfony/Bridge/Doctrine/DataFixtures/ContainerAwareLoader.php
+++ b/src/Symfony/Bridge/Doctrine/DataFixtures/ContainerAwareLoader.php
@@ -40,5 +40,5 @@ class ContainerAwareLoader extends Loader
      * @return void
      */
-    public function addFixture(FixtureInterface $fixture)
+    public function addFixture(FixtureInterface $fixture): void
     {
         if ($fixture instanceof ContainerAwareInterface) {
diff --git a/src/Symfony/Bridge/Doctrine/DependencyInjection/AbstractDoctrineExtension.php b/src/Symfony/Bridge/Doctrine/DependencyInjection/AbstractDoctrineExtension.php
--- a/src/Symfony/Bridge/Doctrine/DependencyInjection/AbstractDoctrineExtension.php
+++ b/src/Symfony/Bridge/Doctrine/DependencyInjection/AbstractDoctrineExtension.php
@@ -43,5 +43,5 @@ abstract class AbstractDoctrineExtension extends Extension
      * @throws \InvalidArgumentException
      */
-    protected function loadMappingInformation(array $objectManager, ContainerBuilder $container)
+    protected function loadMappingInformation(array $objectManager, ContainerBuilder $container): void
     {
         if ($objectManager['auto_mapping']) {
@@ -111,5 +111,5 @@ abstract class AbstractDoctrineExtension extends Extension
      * @return void
      */
-    protected function setMappingDriverAlias(array $mappingConfig, string $mappingName)
+    protected function setMappingDriverAlias(array $mappingConfig, string $mappingName): void
     {
         if (isset($mappingConfig['alias'])) {
@@ -127,5 +127,5 @@ abstract class AbstractDoctrineExtension extends Extension
      * @throws \InvalidArgumentException
      */
-    protected function setMappingDriverConfig(array $mappingConfig, string $mappingName)
+    protected function setMappingDriverConfig(array $mappingConfig, string $mappingName): void
     {
         $mappingDirectory = $mappingConfig['dir'];
@@ -182,5 +182,5 @@ abstract class AbstractDoctrineExtension extends Extension
      * @return void
      */
-    protected function registerMappingDrivers(array $objectManager, ContainerBuilder $container)
+    protected function registerMappingDrivers(array $objectManager, ContainerBuilder $container): void
     {
         // configure metadata driver for each bundle based on the type of mapping files found
@@ -240,5 +240,5 @@ abstract class AbstractDoctrineExtension extends Extension
      * @throws \InvalidArgumentException
      */
-    protected function assertValidMappingConfiguration(array $mappingConfig, string $objectManagerName)
+    protected function assertValidMappingConfiguration(array $mappingConfig, string $objectManagerName): void
     {
         if (!$mappingConfig['type'] || !$mappingConfig['dir'] || !$mappingConfig['prefix']) {
@@ -330,5 +330,5 @@ abstract class AbstractDoctrineExtension extends Extension
      * @throws \InvalidArgumentException in case of unknown driver type
      */
-    protected function loadObjectManagerCacheDriver(array $objectManager, ContainerBuilder $container, string $cacheName)
+    protected function loadObjectManagerCacheDriver(array $objectManager, ContainerBuilder $container, string $cacheName): void
     {
         $this->loadCacheDriver($cacheName, $objectManager['name'], $objectManager[$cacheName.'_driver'], $container);
diff --git a/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/DoctrineValidationPass.php b/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/DoctrineValidationPass.php
--- a/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/DoctrineValidationPass.php
+++ b/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/DoctrineValidationPass.php
@@ -32,5 +32,5 @@ class DoctrineValidationPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         $this->updateValidatorMappingFiles($container, 'xml', 'xml');
diff --git a/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php b/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php
--- a/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php
+++ b/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterEventListenersAndSubscribersPass.php
@@ -57,5 +57,5 @@ class RegisterEventListenersAndSubscribersPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasParameter($this->connectionsParameter)) {
diff --git a/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterMappingsPass.php b/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterMappingsPass.php
--- a/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterMappingsPass.php
+++ b/src/Symfony/Bridge/Doctrine/DependencyInjection/CompilerPass/RegisterMappingsPass.php
@@ -134,5 +134,5 @@ abstract class RegisterMappingsPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$this->enabled($container)) {
diff --git a/src/Symfony/Bridge/Doctrine/DependencyInjection/Security/UserProvider/EntityFactory.php b/src/Symfony/Bridge/Doctrine/DependencyInjection/Security/UserProvider/EntityFactory.php
--- a/src/Symfony/Bridge/Doctrine/DependencyInjection/Security/UserProvider/EntityFactory.php
+++ b/src/Symfony/Bridge/Doctrine/DependencyInjection/Security/UserProvider/EntityFactory.php
@@ -37,5 +37,5 @@ class EntityFactory implements UserProviderFactoryInterface
      * @return void
      */
-    public function create(ContainerBuilder $container, string $id, array $config)
+    public function create(ContainerBuilder $container, string $id, array $config): void
     {
         $container
@@ -50,5 +50,5 @@ class EntityFactory implements UserProviderFactoryInterface
      * @return string
      */
-    public function getKey()
+    public function getKey(): string
     {
         return $this->key;
@@ -58,5 +58,5 @@ class EntityFactory implements UserProviderFactoryInterface
      * @return void
      */
-    public function addConfiguration(NodeDefinition $node)
+    public function addConfiguration(NodeDefinition $node): void
     {
         $node
diff --git a/src/Symfony/Bridge/Doctrine/Form/DoctrineOrmTypeGuesser.php b/src/Symfony/Bridge/Doctrine/Form/DoctrineOrmTypeGuesser.php
--- a/src/Symfony/Bridge/Doctrine/Form/DoctrineOrmTypeGuesser.php
+++ b/src/Symfony/Bridge/Doctrine/Form/DoctrineOrmTypeGuesser.php
@@ -160,5 +160,5 @@ class DoctrineOrmTypeGuesser implements FormTypeGuesserInterface
      * @return array{0:ClassMetadata<T>, 1:string}|null
      */
-    protected function getMetadata(string $class)
+    protected function getMetadata(string $class): ?array
     {
         // normalize class name
diff --git a/src/Symfony/Bridge/Doctrine/Form/EventListener/MergeDoctrineCollectionListener.php b/src/Symfony/Bridge/Doctrine/Form/EventListener/MergeDoctrineCollectionListener.php
--- a/src/Symfony/Bridge/Doctrine/Form/EventListener/MergeDoctrineCollectionListener.php
+++ b/src/Symfony/Bridge/Doctrine/Form/EventListener/MergeDoctrineCollectionListener.php
@@ -42,5 +42,5 @@ class MergeDoctrineCollectionListener implements EventSubscriberInterface
      * @return void
      */
-    public function onSubmit(FormEvent $event)
+    public function onSubmit(FormEvent $event): void
     {
         $collection = $event->getForm()->getData();
diff --git a/src/Symfony/Bridge/Doctrine/Form/Type/DoctrineType.php b/src/Symfony/Bridge/Doctrine/Form/Type/DoctrineType.php
--- a/src/Symfony/Bridge/Doctrine/Form/Type/DoctrineType.php
+++ b/src/Symfony/Bridge/Doctrine/Form/Type/DoctrineType.php
@@ -101,5 +101,5 @@ abstract class DoctrineType extends AbstractType implements ResetInterface
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if ($options['multiple'] && interface_exists(Collection::class)) {
@@ -114,5 +114,5 @@ abstract class DoctrineType extends AbstractType implements ResetInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $choiceLoader = function (Options $options) {
@@ -242,5 +242,5 @@ abstract class DoctrineType extends AbstractType implements ResetInterface
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->idReaders = [];
diff --git a/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php b/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php
--- a/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php
+++ b/src/Symfony/Bridge/Doctrine/Form/Type/EntityType.php
@@ -25,5 +25,5 @@ class EntityType extends DoctrineType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         parent::configureOptions($resolver);
diff --git a/src/Symfony/Bridge/Doctrine/Logger/DbalLogger.php b/src/Symfony/Bridge/Doctrine/Logger/DbalLogger.php
--- a/src/Symfony/Bridge/Doctrine/Logger/DbalLogger.php
+++ b/src/Symfony/Bridge/Doctrine/Logger/DbalLogger.php
@@ -56,5 +56,5 @@ class DbalLogger implements SQLLogger
      * @return void
      */
-    protected function log(string $message, array $params)
+    protected function log(string $message, array $params): void
     {
         $this->logger->debug($message, $params);
diff --git a/src/Symfony/Bridge/Doctrine/Messenger/DoctrineClearEntityManagerWorkerSubscriber.php b/src/Symfony/Bridge/Doctrine/Messenger/DoctrineClearEntityManagerWorkerSubscriber.php
--- a/src/Symfony/Bridge/Doctrine/Messenger/DoctrineClearEntityManagerWorkerSubscriber.php
+++ b/src/Symfony/Bridge/Doctrine/Messenger/DoctrineClearEntityManagerWorkerSubscriber.php
@@ -34,5 +34,5 @@ class DoctrineClearEntityManagerWorkerSubscriber implements EventSubscriberInter
      * @return void
      */
-    public function onWorkerMessageHandled()
+    public function onWorkerMessageHandled(): void
     {
         $this->clearEntityManagers();
@@ -42,5 +42,5 @@ class DoctrineClearEntityManagerWorkerSubscriber implements EventSubscriberInter
      * @return void
      */
-    public function onWorkerMessageFailed()
+    public function onWorkerMessageFailed(): void
     {
         $this->clearEntityManagers();
diff --git a/src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php b/src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php
--- a/src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php
+++ b/src/Symfony/Bridge/Doctrine/Security/RememberMe/DoctrineTokenProvider.php
@@ -72,5 +72,5 @@ class DoctrineTokenProvider implements TokenProviderInterface, TokenVerifierInte
      * @return void
      */
-    public function deleteTokenBySeries(string $series)
+    public function deleteTokenBySeries(string $series): void
     {
         $sql = 'DELETE FROM rememberme_token WHERE series=:series';
@@ -89,5 +89,5 @@ class DoctrineTokenProvider implements TokenProviderInterface, TokenVerifierInte
      * @return void
      */
-    public function updateToken(string $series, #[\SensitiveParameter] string $tokenValue, \DateTime $lastUsed)
+    public function updateToken(string $series, #[\SensitiveParameter] string $tokenValue, \DateTime $lastUsed): void
     {
         $sql = 'UPDATE rememberme_token SET value=:value, lastUsed=:lastUsed WHERE series=:series';
@@ -115,5 +115,5 @@ class DoctrineTokenProvider implements TokenProviderInterface, TokenVerifierInte
      * @return void
      */
-    public function createNewToken(PersistentTokenInterface $token)
+    public function createNewToken(PersistentTokenInterface $token): void
     {
         $sql = 'INSERT INTO rememberme_token (class, username, series, value, lastUsed) VALUES (:class, :username, :series, :value, :lastUsed)';
diff --git a/src/Symfony/Bridge/Doctrine/Validator/Constraints/UniqueEntityValidator.php b/src/Symfony/Bridge/Doctrine/Validator/Constraints/UniqueEntityValidator.php
--- a/src/Symfony/Bridge/Doctrine/Validator/Constraints/UniqueEntityValidator.php
+++ b/src/Symfony/Bridge/Doctrine/Validator/Constraints/UniqueEntityValidator.php
@@ -43,5 +43,5 @@ class UniqueEntityValidator extends ConstraintValidator
      * @throws ConstraintDefinitionException
      */
-    public function validate(mixed $entity, Constraint $constraint)
+    public function validate(mixed $entity, Constraint $constraint): void
     {
         if (!$constraint instanceof UniqueEntity) {
diff --git a/src/Symfony/Bridge/Doctrine/Validator/DoctrineInitializer.php b/src/Symfony/Bridge/Doctrine/Validator/DoctrineInitializer.php
--- a/src/Symfony/Bridge/Doctrine/Validator/DoctrineInitializer.php
+++ b/src/Symfony/Bridge/Doctrine/Validator/DoctrineInitializer.php
@@ -32,5 +32,5 @@ class DoctrineInitializer implements ObjectInitializerInterface
      * @return void
      */
-    public function initialize(object $object)
+    public function initialize(object $object): void
     {
         $this->registry->getManagerForClass($object::class)?->initializeObject($object);
diff --git a/src/Symfony/Bridge/Monolog/Command/ServerLogCommand.php b/src/Symfony/Bridge/Monolog/Command/ServerLogCommand.php
--- a/src/Symfony/Bridge/Monolog/Command/ServerLogCommand.php
+++ b/src/Symfony/Bridge/Monolog/Command/ServerLogCommand.php
@@ -54,5 +54,5 @@ class ServerLogCommand extends Command
      * @return void
      */
-    protected function configure()
+    protected function configure(): void
     {
         if (!class_exists(ConsoleFormatter::class)) {
diff --git a/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php b/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php
--- a/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php
+++ b/src/Symfony/Bridge/Monolog/Handler/ConsoleHandler.php
@@ -133,5 +133,5 @@ class ConsoleHandler extends AbstractProcessingHandler implements EventSubscribe
      * @return void
      */
-    public function setOutput(OutputInterface $output)
+    public function setOutput(OutputInterface $output): void
     {
         $this->output = $output;
@@ -154,5 +154,5 @@ class ConsoleHandler extends AbstractProcessingHandler implements EventSubscribe
      * @return void
      */
-    public function onCommand(ConsoleCommandEvent $event)
+    public function onCommand(ConsoleCommandEvent $event): void
     {
         $output = $event->getOutput();
@@ -169,5 +169,5 @@ class ConsoleHandler extends AbstractProcessingHandler implements EventSubscribe
      * @return void
      */
-    public function onTerminate(ConsoleTerminateEvent $event)
+    public function onTerminate(ConsoleTerminateEvent $event): void
     {
         $this->close();
diff --git a/src/Symfony/Bridge/Monolog/Handler/ElasticsearchLogstashHandler.php b/src/Symfony/Bridge/Monolog/Handler/ElasticsearchLogstashHandler.php
--- a/src/Symfony/Bridge/Monolog/Handler/ElasticsearchLogstashHandler.php
+++ b/src/Symfony/Bridge/Monolog/Handler/ElasticsearchLogstashHandler.php
@@ -158,5 +158,5 @@ class ElasticsearchLogstashHandler extends AbstractHandler
      * @return void
      */
-    public function __wakeup()
+    public function __wakeup(): void
     {
         throw new \BadMethodCallException('Cannot unserialize '.__CLASS__);
diff --git a/src/Symfony/Bridge/Monolog/Handler/MailerHandler.php b/src/Symfony/Bridge/Monolog/Handler/MailerHandler.php
--- a/src/Symfony/Bridge/Monolog/Handler/MailerHandler.php
+++ b/src/Symfony/Bridge/Monolog/Handler/MailerHandler.php
@@ -81,5 +81,5 @@ class MailerHandler extends AbstractProcessingHandler
      * @return void
      */
-    protected function send(string $content, array $records)
+    protected function send(string $content, array $records): void
     {
         $this->mailer->send($this->buildMessage($content, $records));
diff --git a/src/Symfony/Bridge/Monolog/Logger.php b/src/Symfony/Bridge/Monolog/Logger.php
--- a/src/Symfony/Bridge/Monolog/Logger.php
+++ b/src/Symfony/Bridge/Monolog/Logger.php
@@ -60,5 +60,5 @@ class Logger extends BaseLogger implements DebugLoggerInterface, ResetInterface
      * @return void
      */
-    public function removeDebugLogger()
+    public function removeDebugLogger(): void
     {
         foreach ($this->processors as $k => $processor) {
diff --git a/src/Symfony/Bridge/Monolog/Processor/ConsoleCommandProcessor.php b/src/Symfony/Bridge/Monolog/Processor/ConsoleCommandProcessor.php
--- a/src/Symfony/Bridge/Monolog/Processor/ConsoleCommandProcessor.php
+++ b/src/Symfony/Bridge/Monolog/Processor/ConsoleCommandProcessor.php
@@ -51,5 +51,5 @@ class ConsoleCommandProcessor implements EventSubscriberInterface, ResetInterfac
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         unset($this->commandData);
@@ -59,5 +59,5 @@ class ConsoleCommandProcessor implements EventSubscriberInterface, ResetInterfac
      * @return void
      */
-    public function addCommandData(ConsoleEvent $event)
+    public function addCommandData(ConsoleEvent $event): void
     {
         $this->commandData = [
diff --git a/src/Symfony/Bridge/Monolog/Processor/DebugProcessor.php b/src/Symfony/Bridge/Monolog/Processor/DebugProcessor.php
--- a/src/Symfony/Bridge/Monolog/Processor/DebugProcessor.php
+++ b/src/Symfony/Bridge/Monolog/Processor/DebugProcessor.php
@@ -100,5 +100,5 @@ class DebugProcessor implements DebugLoggerInterface, ResetInterface
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->clear();
diff --git a/src/Symfony/Bridge/Twig/AppVariable.php b/src/Symfony/Bridge/Twig/AppVariable.php
--- a/src/Symfony/Bridge/Twig/AppVariable.php
+++ b/src/Symfony/Bridge/Twig/AppVariable.php
@@ -36,5 +36,5 @@ class AppVariable
      * @return void
      */
-    public function setTokenStorage(TokenStorageInterface $tokenStorage)
+    public function setTokenStorage(TokenStorageInterface $tokenStorage): void
     {
         $this->tokenStorage = $tokenStorage;
@@ -44,5 +44,5 @@ class AppVariable
      * @return void
      */
-    public function setRequestStack(RequestStack $requestStack)
+    public function setRequestStack(RequestStack $requestStack): void
     {
         $this->requestStack = $requestStack;
@@ -52,5 +52,5 @@ class AppVariable
      * @return void
      */
-    public function setEnvironment(string $environment)
+    public function setEnvironment(string $environment): void
     {
         $this->environment = $environment;
@@ -60,5 +60,5 @@ class AppVariable
      * @return void
      */
-    public function setDebug(bool $debug)
+    public function setDebug(bool $debug): void
     {
         $this->debug = $debug;
diff --git a/src/Symfony/Bridge/Twig/Command/DebugCommand.php b/src/Symfony/Bridge/Twig/Command/DebugCommand.php
--- a/src/Symfony/Bridge/Twig/Command/DebugCommand.php
+++ b/src/Symfony/Bridge/Twig/Command/DebugCommand.php
@@ -63,5 +63,5 @@ class DebugCommand extends Command
      * @return void
      */
-    protected function configure()
+    protected function configure(): void
     {
         $this
diff --git a/src/Symfony/Bridge/Twig/Command/LintCommand.php b/src/Symfony/Bridge/Twig/Command/LintCommand.php
--- a/src/Symfony/Bridge/Twig/Command/LintCommand.php
+++ b/src/Symfony/Bridge/Twig/Command/LintCommand.php
@@ -52,5 +52,5 @@ class LintCommand extends Command
      * @return void
      */
-    protected function configure()
+    protected function configure(): void
     {
         $this
diff --git a/src/Symfony/Bridge/Twig/EventListener/TemplateAttributeListener.php b/src/Symfony/Bridge/Twig/EventListener/TemplateAttributeListener.php
--- a/src/Symfony/Bridge/Twig/EventListener/TemplateAttributeListener.php
+++ b/src/Symfony/Bridge/Twig/EventListener/TemplateAttributeListener.php
@@ -32,5 +32,5 @@ class TemplateAttributeListener implements EventSubscriberInterface
      * @return void
      */
-    public function onKernelView(ViewEvent $event)
+    public function onKernelView(ViewEvent $event): void
     {
         $parameters = $event->getControllerResult();
diff --git a/src/Symfony/Bridge/Twig/Form/TwigRendererEngine.php b/src/Symfony/Bridge/Twig/Form/TwigRendererEngine.php
--- a/src/Symfony/Bridge/Twig/Form/TwigRendererEngine.php
+++ b/src/Symfony/Bridge/Twig/Form/TwigRendererEngine.php
@@ -136,5 +136,5 @@ class TwigRendererEngine extends AbstractRendererEngine
      * @return void
      */
-    protected function loadResourcesFromTheme(string $cacheKey, mixed &$theme)
+    protected function loadResourcesFromTheme(string $cacheKey, mixed &$theme): void
     {
         if (!$theme instanceof Template) {
diff --git a/src/Symfony/Bridge/Twig/Translation/TwigExtractor.php b/src/Symfony/Bridge/Twig/Translation/TwigExtractor.php
--- a/src/Symfony/Bridge/Twig/Translation/TwigExtractor.php
+++ b/src/Symfony/Bridge/Twig/Translation/TwigExtractor.php
@@ -49,5 +49,5 @@ class TwigExtractor extends AbstractFileExtractor implements ExtractorInterface
      * @return void
      */
-    public function extract($resource, MessageCatalogue $catalogue)
+    public function extract($resource, MessageCatalogue $catalogue): void
     {
         foreach ($this->extractFiles($resource) as $file) {
@@ -63,5 +63,5 @@ class TwigExtractor extends AbstractFileExtractor implements ExtractorInterface
      * @return void
      */
-    public function setPrefix(string $prefix)
+    public function setPrefix(string $prefix): void
     {
         $this->prefix = $prefix;
@@ -71,5 +71,5 @@ class TwigExtractor extends AbstractFileExtractor implements ExtractorInterface
      * @return void
      */
-    protected function extractTemplate(string $template, MessageCatalogue $catalogue)
+    protected function extractTemplate(string $template, MessageCatalogue $catalogue): void
     {
         $visitor = $this->twig->getExtension(TranslationExtension::class)->getTranslationNodeVisitor();
diff --git a/src/Symfony/Bundle/DebugBundle/DebugBundle.php b/src/Symfony/Bundle/DebugBundle/DebugBundle.php
--- a/src/Symfony/Bundle/DebugBundle/DebugBundle.php
+++ b/src/Symfony/Bundle/DebugBundle/DebugBundle.php
@@ -26,5 +26,5 @@ class DebugBundle extends Bundle
      * @return void
      */
-    public function boot()
+    public function boot(): void
     {
         if ($this->container->getParameter('kernel.debug')) {
@@ -56,5 +56,5 @@ class DebugBundle extends Bundle
      * @return void
      */
-    public function build(ContainerBuilder $container)
+    public function build(ContainerBuilder $container): void
     {
         parent::build($container);
@@ -66,5 +66,5 @@ class DebugBundle extends Bundle
      * @return void
      */
-    public function registerCommands(Application $application)
+    public function registerCommands(Application $application): void
     {
         // noop
diff --git a/src/Symfony/Bundle/DebugBundle/DependencyInjection/Compiler/DumpDataCollectorPass.php b/src/Symfony/Bundle/DebugBundle/DependencyInjection/Compiler/DumpDataCollectorPass.php
--- a/src/Symfony/Bundle/DebugBundle/DependencyInjection/Compiler/DumpDataCollectorPass.php
+++ b/src/Symfony/Bundle/DebugBundle/DependencyInjection/Compiler/DumpDataCollectorPass.php
@@ -26,5 +26,5 @@ class DumpDataCollectorPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('data_collector.dump')) {
diff --git a/src/Symfony/Bundle/DebugBundle/DependencyInjection/DebugExtension.php b/src/Symfony/Bundle/DebugBundle/DependencyInjection/DebugExtension.php
--- a/src/Symfony/Bundle/DebugBundle/DependencyInjection/DebugExtension.php
+++ b/src/Symfony/Bundle/DebugBundle/DependencyInjection/DebugExtension.php
@@ -34,5 +34,5 @@ class DebugExtension extends Extension
      * @return void
      */
-    public function load(array $configs, ContainerBuilder $container)
+    public function load(array $configs, ContainerBuilder $container): void
     {
         $configuration = new Configuration();
diff --git a/src/Symfony/Bundle/FrameworkBundle/Command/AbstractConfigCommand.php b/src/Symfony/Bundle/FrameworkBundle/Command/AbstractConfigCommand.php
--- a/src/Symfony/Bundle/FrameworkBundle/Command/AbstractConfigCommand.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Command/AbstractConfigCommand.php
@@ -32,5 +32,5 @@ abstract class AbstractConfigCommand extends ContainerDebugCommand
      * @return void
      */
-    protected function listBundles(OutputInterface|StyleInterface $output)
+    protected function listBundles(OutputInterface|StyleInterface $output): void
     {
         $title = 'Available registered bundles with their extension alias if available';
@@ -163,5 +163,5 @@ abstract class AbstractConfigCommand extends ContainerDebugCommand
      * @return void
      */
-    public function validateConfiguration(ExtensionInterface $extension, mixed $configuration)
+    public function validateConfiguration(ExtensionInterface $extension, mixed $configuration): void
     {
         if (!$configuration) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/Console/Application.php b/src/Symfony/Bundle/FrameworkBundle/Console/Application.php
--- a/src/Symfony/Bundle/FrameworkBundle/Console/Application.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Console/Application.php
@@ -142,5 +142,5 @@ class Application extends BaseApplication
      * @return void
      */
-    protected function registerCommands()
+    protected function registerCommands(): void
     {
         if ($this->commandsRegistered) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddDebugLogProcessorPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddDebugLogProcessorPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddDebugLogProcessorPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddDebugLogProcessorPass.php
@@ -21,5 +21,5 @@ class AddDebugLogProcessorPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('profiler')) {
@@ -41,5 +41,5 @@ class AddDebugLogProcessorPass implements CompilerPassInterface
      * @return void
      */
-    public static function configureLogger(mixed $logger)
+    public static function configureLogger(mixed $logger): void
     {
         if (\is_object($logger) && method_exists($logger, 'removeDebugLogger') && \in_array(\PHP_SAPI, ['cli', 'phpdbg'], true)) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php
@@ -26,5 +26,5 @@ class AddExpressionLanguageProvidersPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         // routing
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AssetsContextPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AssetsContextPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AssetsContextPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/AssetsContextPass.php
@@ -22,5 +22,5 @@ class AssetsContextPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('assets.context')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ContainerBuilderDebugDumpPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ContainerBuilderDebugDumpPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ContainerBuilderDebugDumpPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ContainerBuilderDebugDumpPass.php
@@ -29,5 +29,5 @@ class ContainerBuilderDebugDumpPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->getParameter('debug.container.dump')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/DataCollectorTranslatorPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/DataCollectorTranslatorPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/DataCollectorTranslatorPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/DataCollectorTranslatorPass.php
@@ -24,5 +24,5 @@ class DataCollectorTranslatorPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->has('translator')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/LoggingTranslatorPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/LoggingTranslatorPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/LoggingTranslatorPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/LoggingTranslatorPass.php
@@ -26,5 +26,5 @@ class LoggingTranslatorPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasAlias('logger') || !$container->hasAlias('translator')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ProfilerPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ProfilerPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ProfilerPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/ProfilerPass.php
@@ -28,5 +28,5 @@ class ProfilerPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (false === $container->hasDefinition('profiler')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/RemoveUnusedSessionMarshallingHandlerPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/RemoveUnusedSessionMarshallingHandlerPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/RemoveUnusedSessionMarshallingHandlerPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/RemoveUnusedSessionMarshallingHandlerPass.php
@@ -23,5 +23,5 @@ class RemoveUnusedSessionMarshallingHandlerPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('session.marshalling_handler')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerRealRefPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerRealRefPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerRealRefPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerRealRefPass.php
@@ -25,5 +25,5 @@ class TestServiceContainerRealRefPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('test.private_services_locator')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerWeakRefPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerWeakRefPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerWeakRefPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/TestServiceContainerWeakRefPass.php
@@ -25,5 +25,5 @@ class TestServiceContainerWeakRefPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('test.private_services_locator')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/UnusedTagsPass.php
@@ -109,5 +109,5 @@ class UnusedTagsPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         $tags = array_unique(array_merge($container->findTags(), self::KNOWN_TAGS));
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/WorkflowGuardListenerPass.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/WorkflowGuardListenerPass.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/WorkflowGuardListenerPass.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/Compiler/WorkflowGuardListenerPass.php
@@ -25,5 +25,5 @@ class WorkflowGuardListenerPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasParameter('workflow.has_guard_listeners')) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/FrameworkExtension.php b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/FrameworkExtension.php
--- a/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/FrameworkExtension.php
+++ b/src/Symfony/Bundle/FrameworkBundle/DependencyInjection/FrameworkExtension.php
@@ -218,5 +218,5 @@ class FrameworkExtension extends Extension
      * @throws LogicException
      */
-    public function load(array $configs, ContainerBuilder $container)
+    public function load(array $configs, ContainerBuilder $container): void
     {
         $loader = new PhpFileLoader($container, new FileLocator(\dirname(__DIR__).'/Resources/config'));
@@ -2951,5 +2951,5 @@ class FrameworkExtension extends Extension
      * @return void
      */
-    public static function registerRateLimiter(ContainerBuilder $container, string $name, array $limiterConfig)
+    public static function registerRateLimiter(ContainerBuilder $container, string $name, array $limiterConfig): void
     {
         trigger_deprecation('symfony/framework-bundle', '6.2', 'The "%s()" method is deprecated.', __METHOD__);
diff --git a/src/Symfony/Bundle/FrameworkBundle/FrameworkBundle.php b/src/Symfony/Bundle/FrameworkBundle/FrameworkBundle.php
--- a/src/Symfony/Bundle/FrameworkBundle/FrameworkBundle.php
+++ b/src/Symfony/Bundle/FrameworkBundle/FrameworkBundle.php
@@ -94,5 +94,5 @@ class FrameworkBundle extends Bundle
      * @return void
      */
-    public function boot()
+    public function boot(): void
     {
         $_ENV['DOCTRINE_DEPRECATIONS'] = $_SERVER['DOCTRINE_DEPRECATIONS'] ??= 'trigger';
@@ -119,5 +119,5 @@ class FrameworkBundle extends Bundle
      * @return void
      */
-    public function build(ContainerBuilder $container)
+    public function build(ContainerBuilder $container): void
     {
         parent::build($container);
diff --git a/src/Symfony/Bundle/FrameworkBundle/Kernel/MicroKernelTrait.php b/src/Symfony/Bundle/FrameworkBundle/Kernel/MicroKernelTrait.php
--- a/src/Symfony/Bundle/FrameworkBundle/Kernel/MicroKernelTrait.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Kernel/MicroKernelTrait.php
@@ -133,5 +133,5 @@ trait MicroKernelTrait
      * @return void
      */
-    public function registerContainerConfiguration(LoaderInterface $loader)
+    public function registerContainerConfiguration(LoaderInterface $loader): void
     {
         $loader->load(function (ContainerBuilder $container) use ($loader) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/KernelBrowser.php b/src/Symfony/Bundle/FrameworkBundle/KernelBrowser.php
--- a/src/Symfony/Bundle/FrameworkBundle/KernelBrowser.php
+++ b/src/Symfony/Bundle/FrameworkBundle/KernelBrowser.php
@@ -77,5 +77,5 @@ class KernelBrowser extends HttpKernelBrowser
      * @return void
      */
-    public function enableProfiler()
+    public function enableProfiler(): void
     {
         if ($this->getContainer()->has('profiler')) {
@@ -92,5 +92,5 @@ class KernelBrowser extends HttpKernelBrowser
      * @return void
      */
-    public function disableReboot()
+    public function disableReboot(): void
     {
         $this->reboot = false;
@@ -102,5 +102,5 @@ class KernelBrowser extends HttpKernelBrowser
      * @return void
      */
-    public function enableReboot()
+    public function enableReboot(): void
     {
         $this->reboot = true;
diff --git a/src/Symfony/Bundle/FrameworkBundle/Routing/AnnotatedRouteControllerLoader.php b/src/Symfony/Bundle/FrameworkBundle/Routing/AnnotatedRouteControllerLoader.php
--- a/src/Symfony/Bundle/FrameworkBundle/Routing/AnnotatedRouteControllerLoader.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Routing/AnnotatedRouteControllerLoader.php
@@ -28,5 +28,5 @@ class AnnotatedRouteControllerLoader extends AnnotationClassLoader
      * @return void
      */
-    protected function configureRoute(Route $route, \ReflectionClass $class, \ReflectionMethod $method, object $annot)
+    protected function configureRoute(Route $route, \ReflectionClass $class, \ReflectionMethod $method, object $annot): void
     {
         if ('__invoke' === $method->getName()) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php b/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php
--- a/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Secrets/AbstractVault.php
@@ -44,5 +44,5 @@ abstract class AbstractVault
      * @return string
      */
-    protected function getPrettyPath(string $path)
+    protected function getPrettyPath(string $path): string
     {
         return str_replace(getcwd().\DIRECTORY_SEPARATOR, '', $path);
diff --git a/src/Symfony/Bundle/FrameworkBundle/Test/KernelTestCase.php b/src/Symfony/Bundle/FrameworkBundle/Test/KernelTestCase.php
--- a/src/Symfony/Bundle/FrameworkBundle/Test/KernelTestCase.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Test/KernelTestCase.php
@@ -88,5 +88,5 @@ abstract class KernelTestCase extends TestCase
      * @return Container
      */
-    protected static function getContainer(): ContainerInterface
+    protected static function getContainer(): Container
     {
         if (!static::$booted) {
diff --git a/src/Symfony/Bundle/FrameworkBundle/Translation/Translator.php b/src/Symfony/Bundle/FrameworkBundle/Translation/Translator.php
--- a/src/Symfony/Bundle/FrameworkBundle/Translation/Translator.php
+++ b/src/Symfony/Bundle/FrameworkBundle/Translation/Translator.php
@@ -149,5 +149,5 @@ class Translator extends BaseTranslator implements WarmableInterface
      * @return void
      */
-    protected function initialize()
+    protected function initialize(): void
     {
         if ($this->resourceFiles) {
diff --git a/src/Symfony/Bundle/SecurityBundle/Debug/TraceableFirewallListener.php b/src/Symfony/Bundle/SecurityBundle/Debug/TraceableFirewallListener.php
--- a/src/Symfony/Bundle/SecurityBundle/Debug/TraceableFirewallListener.php
+++ b/src/Symfony/Bundle/SecurityBundle/Debug/TraceableFirewallListener.php
@@ -32,5 +32,5 @@ final class TraceableFirewallListener extends FirewallListener
      * @return array
      */
-    public function getWrappedListeners()
+    public function getWrappedListeners(): array
     {
         return $this->wrappedListeners;
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddExpressionLanguageProvidersPass.php
@@ -26,5 +26,5 @@ class AddExpressionLanguageProvidersPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if ($container->has('security.expression_language')) {
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSecurityVotersPass.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSecurityVotersPass.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSecurityVotersPass.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSecurityVotersPass.php
@@ -33,5 +33,5 @@ class AddSecurityVotersPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('security.access.decision_manager')) {
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSessionDomainConstraintPass.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSessionDomainConstraintPass.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSessionDomainConstraintPass.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/AddSessionDomainConstraintPass.php
@@ -25,5 +25,5 @@ class AddSessionDomainConstraintPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasParameter('session.storage.options') || !$container->has('security.http_utils')) {
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/CleanRememberMeVerifierPass.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/CleanRememberMeVerifierPass.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/CleanRememberMeVerifierPass.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/CleanRememberMeVerifierPass.php
@@ -25,5 +25,5 @@ class CleanRememberMeVerifierPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('cache.system')) {
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/MakeFirewallsEventDispatcherTraceablePass.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/MakeFirewallsEventDispatcherTraceablePass.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/MakeFirewallsEventDispatcherTraceablePass.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/MakeFirewallsEventDispatcherTraceablePass.php
@@ -26,5 +26,5 @@ class MakeFirewallsEventDispatcherTraceablePass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->has('event_dispatcher') || !$container->hasParameter('security.firewalls')) {
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterEntryPointPass.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterEntryPointPass.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterEntryPointPass.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Compiler/RegisterEntryPointPass.php
@@ -27,5 +27,5 @@ class RegisterEntryPointPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasParameter('security.firewalls')) {
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AbstractFactory.php
@@ -56,5 +56,5 @@ abstract class AbstractFactory implements AuthenticatorFactoryInterface
      * @return void
      */
-    public function addConfiguration(NodeDefinition $node)
+    public function addConfiguration(NodeDefinition $node): void
     {
         $builder = $node->children();
@@ -79,5 +79,5 @@ abstract class AbstractFactory implements AuthenticatorFactoryInterface
      * @return string
      */
-    protected function createAuthenticationSuccessHandler(ContainerBuilder $container, string $id, array $config)
+    protected function createAuthenticationSuccessHandler(ContainerBuilder $container, string $id, array $config): string
     {
         $successHandlerId = $this->getSuccessHandlerId($id);
@@ -101,5 +101,5 @@ abstract class AbstractFactory implements AuthenticatorFactoryInterface
      * @return string
      */
-    protected function createAuthenticationFailureHandler(ContainerBuilder $container, string $id, array $config)
+    protected function createAuthenticationFailureHandler(ContainerBuilder $container, string $id, array $config): string
     {
         $id = $this->getFailureHandlerId($id);
@@ -121,5 +121,5 @@ abstract class AbstractFactory implements AuthenticatorFactoryInterface
      * @return string
      */
-    protected function getSuccessHandlerId(string $id)
+    protected function getSuccessHandlerId(string $id): string
     {
         return 'security.authentication.success_handler.'.$id.'.'.str_replace('-', '_', $this->getKey());
@@ -129,5 +129,5 @@ abstract class AbstractFactory implements AuthenticatorFactoryInterface
      * @return string
      */
-    protected function getFailureHandlerId(string $id)
+    protected function getFailureHandlerId(string $id): string
     {
         return 'security.authentication.failure_handler.'.$id.'.'.str_replace('-', '_', $this->getKey());
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AuthenticatorFactoryInterface.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AuthenticatorFactoryInterface.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AuthenticatorFactoryInterface.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/Factory/AuthenticatorFactoryInterface.php
@@ -34,5 +34,5 @@ interface AuthenticatorFactoryInterface
      * @return void
      */
-    public function addConfiguration(NodeDefinition $builder);
+    public function addConfiguration(NodeDefinition $builder): void;

     /**
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/InMemoryFactory.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/InMemoryFactory.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/InMemoryFactory.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/InMemoryFactory.php
@@ -28,5 +28,5 @@ class InMemoryFactory implements UserProviderFactoryInterface
      * @return void
      */
-    public function create(ContainerBuilder $container, string $id, array $config)
+    public function create(ContainerBuilder $container, string $id, array $config): void
     {
         $definition = $container->setDefinition($id, new ChildDefinition('security.user.provider.in_memory'));
@@ -44,5 +44,5 @@ class InMemoryFactory implements UserProviderFactoryInterface
      * @return string
      */
-    public function getKey()
+    public function getKey(): string
     {
         return 'memory';
@@ -52,5 +52,5 @@ class InMemoryFactory implements UserProviderFactoryInterface
      * @return void
      */
-    public function addConfiguration(NodeDefinition $node)
+    public function addConfiguration(NodeDefinition $node): void
     {
         $node
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/LdapFactory.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/LdapFactory.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/LdapFactory.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/LdapFactory.php
@@ -28,5 +28,5 @@ class LdapFactory implements UserProviderFactoryInterface
      * @return void
      */
-    public function create(ContainerBuilder $container, string $id, array $config)
+    public function create(ContainerBuilder $container, string $id, array $config): void
     {
         $container
@@ -47,5 +47,5 @@ class LdapFactory implements UserProviderFactoryInterface
      * @return string
      */
-    public function getKey()
+    public function getKey(): string
     {
         return 'ldap';
@@ -55,5 +55,5 @@ class LdapFactory implements UserProviderFactoryInterface
      * @return void
      */
-    public function addConfiguration(NodeDefinition $node)
+    public function addConfiguration(NodeDefinition $node): void
     {
         $node
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/UserProviderFactoryInterface.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/UserProviderFactoryInterface.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/UserProviderFactoryInterface.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/Security/UserProvider/UserProviderFactoryInterface.php
@@ -26,14 +26,14 @@ interface UserProviderFactoryInterface
      * @return void
      */
-    public function create(ContainerBuilder $container, string $id, array $config);
+    public function create(ContainerBuilder $container, string $id, array $config): void;

     /**
      * @return string
      */
-    public function getKey();
+    public function getKey(): string;

     /**
      * @return void
      */
-    public function addConfiguration(NodeDefinition $builder);
+    public function addConfiguration(NodeDefinition $builder): void;
 }
diff --git a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php
--- a/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php
+++ b/src/Symfony/Bundle/SecurityBundle/DependencyInjection/SecurityExtension.php
@@ -82,5 +82,5 @@ class SecurityExtension extends Extension implements PrependExtensionInterface
      * @return void
      */
-    public function prepend(ContainerBuilder $container)
+    public function prepend(ContainerBuilder $container): void
     {
         foreach ($this->getSortedFactories() as $factory) {
@@ -94,5 +94,5 @@ class SecurityExtension extends Extension implements PrependExtensionInterface
      * @return void
      */
-    public function load(array $configs, ContainerBuilder $container)
+    public function load(array $configs, ContainerBuilder $container): void
     {
         if (!array_filter($configs)) {
diff --git a/src/Symfony/Bundle/SecurityBundle/EventListener/FirewallListener.php b/src/Symfony/Bundle/SecurityBundle/EventListener/FirewallListener.php
--- a/src/Symfony/Bundle/SecurityBundle/EventListener/FirewallListener.php
+++ b/src/Symfony/Bundle/SecurityBundle/EventListener/FirewallListener.php
@@ -40,5 +40,5 @@ class FirewallListener extends Firewall
      * @return void
      */
-    public function configureLogoutUrlGenerator(RequestEvent $event)
+    public function configureLogoutUrlGenerator(RequestEvent $event): void
     {
         if (!$event->isMainRequest()) {
@@ -54,5 +54,5 @@ class FirewallListener extends Firewall
      * @return void
      */
-    public function onKernelFinishRequest(FinishRequestEvent $event)
+    public function onKernelFinishRequest(FinishRequestEvent $event): void
     {
         if ($event->isMainRequest()) {
diff --git a/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php b/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php
--- a/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php
+++ b/src/Symfony/Bundle/SecurityBundle/Security/FirewallContext.php
@@ -42,5 +42,5 @@ class FirewallContext
      * @return FirewallConfig|null
      */
-    public function getConfig()
+    public function getConfig(): ?FirewallConfig
     {
         return $this->config;
@@ -58,5 +58,5 @@ class FirewallContext
      * @return ExceptionListener|null
      */
-    public function getExceptionListener()
+    public function getExceptionListener(): ?ExceptionListener
     {
         return $this->exceptionListener;
@@ -66,5 +66,5 @@ class FirewallContext
      * @return LogoutListener|null
      */
-    public function getLogoutListener()
+    public function getLogoutListener(): ?LogoutListener
     {
         return $this->logoutListener;
diff --git a/src/Symfony/Bundle/SecurityBundle/SecurityBundle.php b/src/Symfony/Bundle/SecurityBundle/SecurityBundle.php
--- a/src/Symfony/Bundle/SecurityBundle/SecurityBundle.php
+++ b/src/Symfony/Bundle/SecurityBundle/SecurityBundle.php
@@ -60,5 +60,5 @@ class SecurityBundle extends Bundle
      * @return void
      */
-    public function build(ContainerBuilder $container)
+    public function build(ContainerBuilder $container): void
     {
         parent::build($container);
diff --git a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/ExtensionPass.php b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/ExtensionPass.php
--- a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/ExtensionPass.php
+++ b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/ExtensionPass.php
@@ -29,5 +29,5 @@ class ExtensionPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!class_exists(Packages::class)) {
diff --git a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/RuntimeLoaderPass.php b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/RuntimeLoaderPass.php
--- a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/RuntimeLoaderPass.php
+++ b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/RuntimeLoaderPass.php
@@ -25,5 +25,5 @@ class RuntimeLoaderPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('twig.runtime_loader')) {
diff --git a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigEnvironmentPass.php b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigEnvironmentPass.php
--- a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigEnvironmentPass.php
+++ b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigEnvironmentPass.php
@@ -28,5 +28,5 @@ class TwigEnvironmentPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (false === $container->hasDefinition('twig')) {
diff --git a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigLoaderPass.php b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigLoaderPass.php
--- a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigLoaderPass.php
+++ b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Compiler/TwigLoaderPass.php
@@ -27,5 +27,5 @@ class TwigLoaderPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (false === $container->hasDefinition('twig')) {
diff --git a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Configurator/EnvironmentConfigurator.php b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Configurator/EnvironmentConfigurator.php
--- a/src/Symfony/Bundle/TwigBundle/DependencyInjection/Configurator/EnvironmentConfigurator.php
+++ b/src/Symfony/Bundle/TwigBundle/DependencyInjection/Configurator/EnvironmentConfigurator.php
@@ -46,5 +46,5 @@ class EnvironmentConfigurator
      * @return void
      */
-    public function configure(Environment $environment)
+    public function configure(Environment $environment): void
     {
         $environment->getExtension(CoreExtension::class)->setDateFormat($this->dateFormat, $this->intervalFormat);
diff --git a/src/Symfony/Bundle/TwigBundle/DependencyInjection/TwigExtension.php b/src/Symfony/Bundle/TwigBundle/DependencyInjection/TwigExtension.php
--- a/src/Symfony/Bundle/TwigBundle/DependencyInjection/TwigExtension.php
+++ b/src/Symfony/Bundle/TwigBundle/DependencyInjection/TwigExtension.php
@@ -40,5 +40,5 @@ class TwigExtension extends Extension
      * @return void
      */
-    public function load(array $configs, ContainerBuilder $container)
+    public function load(array $configs, ContainerBuilder $container): void
     {
         $loader = new PhpFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
diff --git a/src/Symfony/Bundle/TwigBundle/TwigBundle.php b/src/Symfony/Bundle/TwigBundle/TwigBundle.php
--- a/src/Symfony/Bundle/TwigBundle/TwigBundle.php
+++ b/src/Symfony/Bundle/TwigBundle/TwigBundle.php
@@ -31,5 +31,5 @@ class TwigBundle extends Bundle
      * @return void
      */
-    public function build(ContainerBuilder $container)
+    public function build(ContainerBuilder $container): void
     {
         parent::build($container);
@@ -45,5 +45,5 @@ class TwigBundle extends Bundle
      * @return void
      */
-    public function registerCommands(Application $application)
+    public function registerCommands(Application $application): void
     {
         // noop
diff --git a/src/Symfony/Bundle/WebProfilerBundle/DependencyInjection/WebProfilerExtension.php b/src/Symfony/Bundle/WebProfilerBundle/DependencyInjection/WebProfilerExtension.php
--- a/src/Symfony/Bundle/WebProfilerBundle/DependencyInjection/WebProfilerExtension.php
+++ b/src/Symfony/Bundle/WebProfilerBundle/DependencyInjection/WebProfilerExtension.php
@@ -41,5 +41,5 @@ class WebProfilerExtension extends Extension
      * @return void
      */
-    public function load(array $configs, ContainerBuilder $container)
+    public function load(array $configs, ContainerBuilder $container): void
     {
         $configuration = $this->getConfiguration($configs, $container);
diff --git a/src/Symfony/Bundle/WebProfilerBundle/WebProfilerBundle.php b/src/Symfony/Bundle/WebProfilerBundle/WebProfilerBundle.php
--- a/src/Symfony/Bundle/WebProfilerBundle/WebProfilerBundle.php
+++ b/src/Symfony/Bundle/WebProfilerBundle/WebProfilerBundle.php
@@ -22,5 +22,5 @@ class WebProfilerBundle extends Bundle
      * @return void
      */
-    public function boot()
+    public function boot(): void
     {
         if ('prod' === $this->container->getParameter('kernel.environment')) {
diff --git a/src/Symfony/Component/Asset/Packages.php b/src/Symfony/Component/Asset/Packages.php
--- a/src/Symfony/Component/Asset/Packages.php
+++ b/src/Symfony/Component/Asset/Packages.php
@@ -41,5 +41,5 @@ class Packages
      * @return void
      */
-    public function setDefaultPackage(PackageInterface $defaultPackage)
+    public function setDefaultPackage(PackageInterface $defaultPackage): void
     {
         $this->defaultPackage = $defaultPackage;
@@ -49,5 +49,5 @@ class Packages
      * @return void
      */
-    public function addPackage(string $name, PackageInterface $package)
+    public function addPackage(string $name, PackageInterface $package): void
     {
         $this->packages[$name] = $package;
diff --git a/src/Symfony/Component/BrowserKit/AbstractBrowser.php b/src/Symfony/Component/BrowserKit/AbstractBrowser.php
--- a/src/Symfony/Component/BrowserKit/AbstractBrowser.php
+++ b/src/Symfony/Component/BrowserKit/AbstractBrowser.php
@@ -411,5 +411,5 @@ abstract class AbstractBrowser
      * @throws \RuntimeException When processing returns exit code
      */
-    protected function doRequestInProcess(object $request)
+    protected function doRequestInProcess(object $request): object
     {
         $deprecationsFile = tempnam(sys_get_temp_dir(), 'deprec');
@@ -444,5 +444,5 @@ abstract class AbstractBrowser
      * @return object
      */
-    abstract protected function doRequest(object $request);
+    abstract protected function doRequest(object $request): object;

     /**
@@ -455,5 +455,5 @@ abstract class AbstractBrowser
      * @throws LogicException When this abstract class is not implemented
      */
-    protected function getScript(object $request)
+    protected function getScript(object $request): string
     {
         throw new LogicException('To insulate requests, you need to override the getScript() method.');
@@ -465,5 +465,5 @@ abstract class AbstractBrowser
      * @return object
      */
-    protected function filterRequest(Request $request)
+    protected function filterRequest(Request $request): object
     {
         return $request;
@@ -475,5 +475,5 @@ abstract class AbstractBrowser
      * @return Response
      */
-    protected function filterResponse(object $response)
+    protected function filterResponse(object $response): Response
     {
         return $response;
diff --git a/src/Symfony/Component/Config/Definition/Builder/NodeDefinition.php b/src/Symfony/Component/Config/Definition/Builder/NodeDefinition.php
--- a/src/Symfony/Component/Config/Definition/Builder/NodeDefinition.php
+++ b/src/Symfony/Component/Config/Definition/Builder/NodeDefinition.php
@@ -94,5 +94,5 @@ abstract class NodeDefinition implements NodeParentInterface
      * @return NodeParentInterface|NodeBuilder|NodeDefinition|ArrayNodeDefinition|VariableNodeDefinition
      */
-    public function end(): NodeParentInterface
+    public function end(): NodeParentInterface|NodeBuilder|NodeDefinition|ArrayNodeDefinition|VariableNodeDefinition
     {
         return $this->parent;
diff --git a/src/Symfony/Component/Console/Command/Command.php b/src/Symfony/Component/Console/Command/Command.php
--- a/src/Symfony/Component/Console/Command/Command.php
+++ b/src/Symfony/Component/Console/Command/Command.php
@@ -163,5 +163,5 @@ class Command
      * @return void
      */
-    protected function configure()
+    protected function configure(): void
     {
     }
@@ -195,5 +195,5 @@ class Command
      * @return void
      */
-    protected function interact(InputInterface $input, OutputInterface $output)
+    protected function interact(InputInterface $input, OutputInterface $output): void
     {
     }
@@ -211,5 +211,5 @@ class Command
      * @return void
      */
-    protected function initialize(InputInterface $input, OutputInterface $output)
+    protected function initialize(InputInterface $input, OutputInterface $output): void
     {
     }
diff --git a/src/Symfony/Component/DependencyInjection/Compiler/AbstractRecursivePass.php b/src/Symfony/Component/DependencyInjection/Compiler/AbstractRecursivePass.php
--- a/src/Symfony/Component/DependencyInjection/Compiler/AbstractRecursivePass.php
+++ b/src/Symfony/Component/DependencyInjection/Compiler/AbstractRecursivePass.php
@@ -38,5 +38,5 @@ abstract class AbstractRecursivePass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         $this->container = $container;
@@ -69,5 +69,5 @@ abstract class AbstractRecursivePass implements CompilerPassInterface
      * @return mixed
      */
-    protected function processValue(mixed $value, bool $isRoot = false)
+    protected function processValue(mixed $value, bool $isRoot = false): mixed
     {
         if (\is_array($value)) {
diff --git a/src/Symfony/Component/DependencyInjection/Compiler/CompilerPassInterface.php b/src/Symfony/Component/DependencyInjection/Compiler/CompilerPassInterface.php
--- a/src/Symfony/Component/DependencyInjection/Compiler/CompilerPassInterface.php
+++ b/src/Symfony/Component/DependencyInjection/Compiler/CompilerPassInterface.php
@@ -26,4 +26,4 @@ interface CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container);
+    public function process(ContainerBuilder $container): void;
 }
diff --git a/src/Symfony/Component/DependencyInjection/Extension/ConfigurationExtensionInterface.php b/src/Symfony/Component/DependencyInjection/Extension/ConfigurationExtensionInterface.php
--- a/src/Symfony/Component/DependencyInjection/Extension/ConfigurationExtensionInterface.php
+++ b/src/Symfony/Component/DependencyInjection/Extension/ConfigurationExtensionInterface.php
@@ -27,4 +27,4 @@ interface ConfigurationExtensionInterface
      * @return ConfigurationInterface|null
      */
-    public function getConfiguration(array $config, ContainerBuilder $container);
+    public function getConfiguration(array $config, ContainerBuilder $container): ?ConfigurationInterface;
 }
diff --git a/src/Symfony/Component/DependencyInjection/Extension/Extension.php b/src/Symfony/Component/DependencyInjection/Extension/Extension.php
--- a/src/Symfony/Component/DependencyInjection/Extension/Extension.php
+++ b/src/Symfony/Component/DependencyInjection/Extension/Extension.php
@@ -32,5 +32,5 @@ abstract class Extension implements ExtensionInterface, ConfigurationExtensionIn
      * @return string|false
      */
-    public function getXsdValidationBasePath()
+    public function getXsdValidationBasePath(): string|false
     {
         return false;
@@ -40,5 +40,5 @@ abstract class Extension implements ExtensionInterface, ConfigurationExtensionIn
      * @return string
      */
-    public function getNamespace()
+    public function getNamespace(): string
     {
         return 'http://example.org/schema/dic/'.$this->getAlias();
@@ -77,5 +77,5 @@ abstract class Extension implements ExtensionInterface, ConfigurationExtensionIn
      * @return ConfigurationInterface|null
      */
-    public function getConfiguration(array $config, ContainerBuilder $container)
+    public function getConfiguration(array $config, ContainerBuilder $container): ?ConfigurationInterface
     {
         $class = static::class;
diff --git a/src/Symfony/Component/DependencyInjection/Extension/ExtensionInterface.php b/src/Symfony/Component/DependencyInjection/Extension/ExtensionInterface.php
--- a/src/Symfony/Component/DependencyInjection/Extension/ExtensionInterface.php
+++ b/src/Symfony/Component/DependencyInjection/Extension/ExtensionInterface.php
@@ -30,5 +30,5 @@ interface ExtensionInterface
      * @throws \InvalidArgumentException When provided tag is not defined in this extension
      */
-    public function load(array $configs, ContainerBuilder $container);
+    public function load(array $configs, ContainerBuilder $container): void;

     /**
@@ -37,5 +37,5 @@ interface ExtensionInterface
      * @return string
      */
-    public function getNamespace();
+    public function getNamespace(): string;

     /**
@@ -44,5 +44,5 @@ interface ExtensionInterface
      * @return string|false
      */
-    public function getXsdValidationBasePath();
+    public function getXsdValidationBasePath(): string|false;

     /**
@@ -53,4 +53,4 @@ interface ExtensionInterface
      * @return string
      */
-    public function getAlias();
+    public function getAlias(): string;
 }
diff --git a/src/Symfony/Component/DependencyInjection/Extension/PrependExtensionInterface.php b/src/Symfony/Component/DependencyInjection/Extension/PrependExtensionInterface.php
--- a/src/Symfony/Component/DependencyInjection/Extension/PrependExtensionInterface.php
+++ b/src/Symfony/Component/DependencyInjection/Extension/PrependExtensionInterface.php
@@ -21,4 +21,4 @@ interface PrependExtensionInterface
      * @return void
      */
-    public function prepend(ContainerBuilder $container);
+    public function prepend(ContainerBuilder $container): void;
 }
diff --git a/src/Symfony/Component/EventDispatcher/EventSubscriberInterface.php b/src/Symfony/Component/EventDispatcher/EventSubscriberInterface.php
--- a/src/Symfony/Component/EventDispatcher/EventSubscriberInterface.php
+++ b/src/Symfony/Component/EventDispatcher/EventSubscriberInterface.php
@@ -46,4 +46,4 @@ interface EventSubscriberInterface
      * @return array<string, string|array{0: string, 1: int}|list<array{0: string, 1?: int}>>
      */
-    public static function getSubscribedEvents();
+    public static function getSubscribedEvents(): array;
 }
diff --git a/src/Symfony/Component/ExpressionLanguage/ExpressionLanguage.php b/src/Symfony/Component/ExpressionLanguage/ExpressionLanguage.php
--- a/src/Symfony/Component/ExpressionLanguage/ExpressionLanguage.php
+++ b/src/Symfony/Component/ExpressionLanguage/ExpressionLanguage.php
@@ -139,5 +139,5 @@ class ExpressionLanguage
      * @return void
      */
-    protected function registerFunctions()
+    protected function registerFunctions(): void
     {
         $this->addFunction(ExpressionFunction::fromPhp('constant'));
diff --git a/src/Symfony/Component/Form/AbstractType.php b/src/Symfony/Component/Form/AbstractType.php
--- a/src/Symfony/Component/Form/AbstractType.php
+++ b/src/Symfony/Component/Form/AbstractType.php
@@ -24,5 +24,5 @@ abstract class AbstractType implements FormTypeInterface
      * @return string|null
      */
-    public function getParent()
+    public function getParent(): ?string
     {
         return FormType::class;
@@ -32,5 +32,5 @@ abstract class AbstractType implements FormTypeInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
     }
@@ -39,5 +39,5 @@ abstract class AbstractType implements FormTypeInterface
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
     }
@@ -46,5 +46,5 @@ abstract class AbstractType implements FormTypeInterface
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
     }
@@ -53,5 +53,5 @@ abstract class AbstractType implements FormTypeInterface
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
     }
@@ -60,5 +60,5 @@ abstract class AbstractType implements FormTypeInterface
      * @return string
      */
-    public function getBlockPrefix()
+    public function getBlockPrefix(): string
     {
         return StringUtil::fqcnToBlockPrefix(static::class) ?: '';
diff --git a/src/Symfony/Component/Form/AbstractTypeExtension.php b/src/Symfony/Component/Form/AbstractTypeExtension.php
--- a/src/Symfony/Component/Form/AbstractTypeExtension.php
+++ b/src/Symfony/Component/Form/AbstractTypeExtension.php
@@ -22,5 +22,5 @@ abstract class AbstractTypeExtension implements FormTypeExtensionInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
     }
@@ -29,5 +29,5 @@ abstract class AbstractTypeExtension implements FormTypeExtensionInterface
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
     }
@@ -36,5 +36,5 @@ abstract class AbstractTypeExtension implements FormTypeExtensionInterface
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
     }
@@ -43,5 +43,5 @@ abstract class AbstractTypeExtension implements FormTypeExtensionInterface
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
     }
diff --git a/src/Symfony/Component/Form/ButtonBuilder.php b/src/Symfony/Component/Form/ButtonBuilder.php
--- a/src/Symfony/Component/Form/ButtonBuilder.php
+++ b/src/Symfony/Component/Form/ButtonBuilder.php
@@ -57,5 +57,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function add(string|FormBuilderInterface $child, string $type = null, array $options = []): static
+    public function add(string|FormBuilderInterface $child, string $type = null, array $options = []): never
     {
         throw new BadMethodCallException('Buttons cannot have children.');
@@ -69,5 +69,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function create(string $name, string $type = null, array $options = []): FormBuilderInterface
+    public function create(string $name, string $type = null, array $options = []): never
     {
         throw new BadMethodCallException('Buttons cannot have children.');
@@ -81,5 +81,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function get(string $name): FormBuilderInterface
+    public function get(string $name): never
     {
         throw new BadMethodCallException('Buttons cannot have children.');
@@ -93,5 +93,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function remove(string $name): static
+    public function remove(string $name): never
     {
         throw new BadMethodCallException('Buttons cannot have children.');
@@ -129,5 +129,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function addEventListener(string $eventName, callable $listener, int $priority = 0): static
+    public function addEventListener(string $eventName, callable $listener, int $priority = 0): never
     {
         throw new BadMethodCallException('Buttons do not support event listeners.');
@@ -141,5 +141,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function addEventSubscriber(EventSubscriberInterface $subscriber): static
+    public function addEventSubscriber(EventSubscriberInterface $subscriber): never
     {
         throw new BadMethodCallException('Buttons do not support event subscribers.');
@@ -153,5 +153,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function addViewTransformer(DataTransformerInterface $viewTransformer, bool $forcePrepend = false): static
+    public function addViewTransformer(DataTransformerInterface $viewTransformer, bool $forcePrepend = false): never
     {
         throw new BadMethodCallException('Buttons do not support data transformers.');
@@ -165,5 +165,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function resetViewTransformers(): static
+    public function resetViewTransformers(): never
     {
         throw new BadMethodCallException('Buttons do not support data transformers.');
@@ -177,5 +177,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function addModelTransformer(DataTransformerInterface $modelTransformer, bool $forceAppend = false): static
+    public function addModelTransformer(DataTransformerInterface $modelTransformer, bool $forceAppend = false): never
     {
         throw new BadMethodCallException('Buttons do not support data transformers.');
@@ -189,5 +189,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function resetModelTransformers(): static
+    public function resetModelTransformers(): never
     {
         throw new BadMethodCallException('Buttons do not support data transformers.');
@@ -221,5 +221,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setDataMapper(DataMapperInterface $dataMapper = null): static
+    public function setDataMapper(DataMapperInterface $dataMapper = null): never
     {
         if (1 > \func_num_args()) {
@@ -249,5 +249,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setEmptyData(mixed $emptyData): static
+    public function setEmptyData(mixed $emptyData): never
     {
         throw new BadMethodCallException('Buttons do not support empty data.');
@@ -261,5 +261,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setErrorBubbling(bool $errorBubbling): static
+    public function setErrorBubbling(bool $errorBubbling): never
     {
         throw new BadMethodCallException('Buttons do not support error bubbling.');
@@ -273,5 +273,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setRequired(bool $required): static
+    public function setRequired(bool $required): never
     {
         throw new BadMethodCallException('Buttons cannot be required.');
@@ -285,5 +285,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setPropertyPath(string|PropertyPathInterface|null $propertyPath): static
+    public function setPropertyPath(string|PropertyPathInterface|null $propertyPath): never
     {
         throw new BadMethodCallException('Buttons do not support property paths.');
@@ -297,5 +297,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setMapped(bool $mapped): static
+    public function setMapped(bool $mapped): never
     {
         throw new BadMethodCallException('Buttons do not support data mapping.');
@@ -309,5 +309,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setByReference(bool $byReference): static
+    public function setByReference(bool $byReference): never
     {
         throw new BadMethodCallException('Buttons do not support data mapping.');
@@ -321,5 +321,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setCompound(bool $compound): static
+    public function setCompound(bool $compound): never
     {
         throw new BadMethodCallException('Buttons cannot be compound.');
@@ -345,5 +345,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setData(mixed $data): static
+    public function setData(mixed $data): never
     {
         throw new BadMethodCallException('Buttons do not support data.');
@@ -357,5 +357,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setDataLocked(bool $locked): static
+    public function setDataLocked(bool $locked): never
     {
         throw new BadMethodCallException('Buttons do not support data locking.');
@@ -369,5 +369,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setFormFactory(FormFactoryInterface $formFactory)
+    public function setFormFactory(FormFactoryInterface $formFactory): never
     {
         throw new BadMethodCallException('Buttons do not support form factories.');
@@ -381,5 +381,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setAction(string $action): static
+    public function setAction(string $action): never
     {
         throw new BadMethodCallException('Buttons do not support actions.');
@@ -393,5 +393,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setMethod(string $method): static
+    public function setMethod(string $method): never
     {
         throw new BadMethodCallException('Buttons do not support methods.');
@@ -405,5 +405,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setRequestHandler(RequestHandlerInterface $requestHandler): static
+    public function setRequestHandler(RequestHandlerInterface $requestHandler): never
     {
         throw new BadMethodCallException('Buttons do not support request handlers.');
@@ -433,5 +433,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setInheritData(bool $inheritData): static
+    public function setInheritData(bool $inheritData): never
     {
         throw new BadMethodCallException('Buttons do not support data inheritance.');
@@ -457,5 +457,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function setIsEmptyCallback(?callable $isEmptyCallback): static
+    public function setIsEmptyCallback(?callable $isEmptyCallback): never
     {
         throw new BadMethodCallException('Buttons do not support "is empty" callback.');
@@ -469,5 +469,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function getEventDispatcher(): EventDispatcherInterface
+    public function getEventDispatcher(): never
     {
         throw new BadMethodCallException('Buttons do not support event dispatching.');
@@ -628,5 +628,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @return never
      */
-    public function getFormFactory(): FormFactoryInterface
+    public function getFormFactory(): never
     {
         throw new BadMethodCallException('Buttons do not support adding children.');
@@ -640,5 +640,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function getAction(): string
+    public function getAction(): never
     {
         throw new BadMethodCallException('Buttons do not support actions.');
@@ -652,5 +652,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function getMethod(): string
+    public function getMethod(): never
     {
         throw new BadMethodCallException('Buttons do not support methods.');
@@ -664,5 +664,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function getRequestHandler(): RequestHandlerInterface
+    public function getRequestHandler(): never
     {
         throw new BadMethodCallException('Buttons do not support request handlers.');
@@ -716,5 +716,5 @@ class ButtonBuilder implements \IteratorAggregate, FormBuilderInterface
      * @throws BadMethodCallException
      */
-    public function getIsEmptyCallback(): ?callable
+    public function getIsEmptyCallback(): never
     {
         throw new BadMethodCallException('Buttons do not support "is empty" callback.');
diff --git a/src/Symfony/Component/Form/ChoiceList/Factory/CachingFactoryDecorator.php b/src/Symfony/Component/Form/ChoiceList/Factory/CachingFactoryDecorator.php
--- a/src/Symfony/Component/Form/ChoiceList/Factory/CachingFactoryDecorator.php
+++ b/src/Symfony/Component/Form/ChoiceList/Factory/CachingFactoryDecorator.php
@@ -218,5 +218,5 @@ class CachingFactoryDecorator implements ChoiceListFactoryInterface, ResetInterf
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->lists = [];
diff --git a/src/Symfony/Component/Form/Command/DebugCommand.php b/src/Symfony/Component/Form/Command/DebugCommand.php
--- a/src/Symfony/Component/Form/Command/DebugCommand.php
+++ b/src/Symfony/Component/Form/Command/DebugCommand.php
@@ -58,5 +58,5 @@ class DebugCommand extends Command
      * @return void
      */
-    protected function configure()
+    protected function configure(): void
     {
         $this
diff --git a/src/Symfony/Component/Form/DataMapperInterface.php b/src/Symfony/Component/Form/DataMapperInterface.php
--- a/src/Symfony/Component/Form/DataMapperInterface.php
+++ b/src/Symfony/Component/Form/DataMapperInterface.php
@@ -30,5 +30,5 @@ interface DataMapperInterface
      * @throws Exception\UnexpectedTypeException if the type of the data parameter is not supported
      */
-    public function mapDataToForms(mixed $viewData, \Traversable $forms);
+    public function mapDataToForms(mixed $viewData, \Traversable $forms): void;

     /**
@@ -63,4 +63,4 @@ interface DataMapperInterface
      * @throws Exception\UnexpectedTypeException if the type of the data parameter is not supported
      */
-    public function mapFormsToData(\Traversable $forms, mixed &$viewData);
+    public function mapFormsToData(\Traversable $forms, mixed &$viewData): void;
 }
diff --git a/src/Symfony/Component/Form/DataTransformerInterface.php b/src/Symfony/Component/Form/DataTransformerInterface.php
--- a/src/Symfony/Component/Form/DataTransformerInterface.php
+++ b/src/Symfony/Component/Form/DataTransformerInterface.php
@@ -65,5 +65,5 @@ interface DataTransformerInterface
      * @throws TransformationFailedException when the transformation fails
      */
-    public function transform(mixed $value);
+    public function transform(mixed $value): mixed;

     /**
@@ -96,4 +96,4 @@ interface DataTransformerInterface
      * @throws TransformationFailedException when the transformation fails
      */
-    public function reverseTransform(mixed $value);
+    public function reverseTransform(mixed $value): mixed;
 }
diff --git a/src/Symfony/Component/Form/DependencyInjection/FormPass.php b/src/Symfony/Component/Form/DependencyInjection/FormPass.php
--- a/src/Symfony/Component/Form/DependencyInjection/FormPass.php
+++ b/src/Symfony/Component/Form/DependencyInjection/FormPass.php
@@ -34,5 +34,5 @@ class FormPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('form.extension')) {
diff --git a/src/Symfony/Component/Form/Extension/Core/DataMapper/CheckboxListMapper.php b/src/Symfony/Component/Form/Extension/Core/DataMapper/CheckboxListMapper.php
--- a/src/Symfony/Component/Form/Extension/Core/DataMapper/CheckboxListMapper.php
+++ b/src/Symfony/Component/Form/Extension/Core/DataMapper/CheckboxListMapper.php
@@ -29,5 +29,5 @@ class CheckboxListMapper implements DataMapperInterface
      * @return void
      */
-    public function mapDataToForms(mixed $choices, \Traversable $checkboxes)
+    public function mapDataToForms(mixed $choices, \Traversable $checkboxes): void
     {
         if (!\is_array($choices ??= [])) {
@@ -44,5 +44,5 @@ class CheckboxListMapper implements DataMapperInterface
      * @return void
      */
-    public function mapFormsToData(\Traversable $checkboxes, mixed &$choices)
+    public function mapFormsToData(\Traversable $checkboxes, mixed &$choices): void
     {
         if (!\is_array($choices)) {
diff --git a/src/Symfony/Component/Form/Extension/Core/DataMapper/RadioListMapper.php b/src/Symfony/Component/Form/Extension/Core/DataMapper/RadioListMapper.php
--- a/src/Symfony/Component/Form/Extension/Core/DataMapper/RadioListMapper.php
+++ b/src/Symfony/Component/Form/Extension/Core/DataMapper/RadioListMapper.php
@@ -29,5 +29,5 @@ class RadioListMapper implements DataMapperInterface
      * @return void
      */
-    public function mapDataToForms(mixed $choice, \Traversable $radios)
+    public function mapDataToForms(mixed $choice, \Traversable $radios): void
     {
         if (!\is_string($choice)) {
@@ -44,5 +44,5 @@ class RadioListMapper implements DataMapperInterface
      * @return void
      */
-    public function mapFormsToData(\Traversable $radios, mixed &$choice)
+    public function mapFormsToData(\Traversable $radios, mixed &$choice): void
     {
         if (null !== $choice && !\is_string($choice)) {
diff --git a/src/Symfony/Component/Form/Extension/Core/EventListener/FixUrlProtocolListener.php b/src/Symfony/Component/Form/Extension/Core/EventListener/FixUrlProtocolListener.php
--- a/src/Symfony/Component/Form/Extension/Core/EventListener/FixUrlProtocolListener.php
+++ b/src/Symfony/Component/Form/Extension/Core/EventListener/FixUrlProtocolListener.php
@@ -36,5 +36,5 @@ class FixUrlProtocolListener implements EventSubscriberInterface
      * @return void
      */
-    public function onSubmit(FormEvent $event)
+    public function onSubmit(FormEvent $event): void
     {
         $data = $event->getData();
diff --git a/src/Symfony/Component/Form/Extension/Core/EventListener/MergeCollectionListener.php b/src/Symfony/Component/Form/Extension/Core/EventListener/MergeCollectionListener.php
--- a/src/Symfony/Component/Form/Extension/Core/EventListener/MergeCollectionListener.php
+++ b/src/Symfony/Component/Form/Extension/Core/EventListener/MergeCollectionListener.php
@@ -45,5 +45,5 @@ class MergeCollectionListener implements EventSubscriberInterface
      * @return void
      */
-    public function onSubmit(FormEvent $event)
+    public function onSubmit(FormEvent $event): void
     {
         $dataToMergeInto = $event->getForm()->getNormData();
diff --git a/src/Symfony/Component/Form/Extension/Core/EventListener/ResizeFormListener.php b/src/Symfony/Component/Form/Extension/Core/EventListener/ResizeFormListener.php
--- a/src/Symfony/Component/Form/Extension/Core/EventListener/ResizeFormListener.php
+++ b/src/Symfony/Component/Form/Extension/Core/EventListener/ResizeFormListener.php
@@ -56,5 +56,5 @@ class ResizeFormListener implements EventSubscriberInterface
      * @return void
      */
-    public function preSetData(FormEvent $event)
+    public function preSetData(FormEvent $event): void
     {
         $form = $event->getForm();
@@ -81,5 +81,5 @@ class ResizeFormListener implements EventSubscriberInterface
      * @return void
      */
-    public function preSubmit(FormEvent $event)
+    public function preSubmit(FormEvent $event): void
     {
         $form = $event->getForm();
@@ -114,5 +114,5 @@ class ResizeFormListener implements EventSubscriberInterface
      * @return void
      */
-    public function onSubmit(FormEvent $event)
+    public function onSubmit(FormEvent $event): void
     {
         $form = $event->getForm();
diff --git a/src/Symfony/Component/Form/Extension/Core/EventListener/TransformationFailureListener.php b/src/Symfony/Component/Form/Extension/Core/EventListener/TransformationFailureListener.php
--- a/src/Symfony/Component/Form/Extension/Core/EventListener/TransformationFailureListener.php
+++ b/src/Symfony/Component/Form/Extension/Core/EventListener/TransformationFailureListener.php
@@ -40,5 +40,5 @@ class TransformationFailureListener implements EventSubscriberInterface
      * @return void
      */
-    public function convertTransformationFailureToFormError(FormEvent $event)
+    public function convertTransformationFailureToFormError(FormEvent $event): void
     {
         $form = $event->getForm();
diff --git a/src/Symfony/Component/Form/Extension/Core/EventListener/TrimListener.php b/src/Symfony/Component/Form/Extension/Core/EventListener/TrimListener.php
--- a/src/Symfony/Component/Form/Extension/Core/EventListener/TrimListener.php
+++ b/src/Symfony/Component/Form/Extension/Core/EventListener/TrimListener.php
@@ -27,5 +27,5 @@ class TrimListener implements EventSubscriberInterface
      * @return void
      */
-    public function preSubmit(FormEvent $event)
+    public function preSubmit(FormEvent $event): void
     {
         $data = $event->getData();
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/BaseType.php b/src/Symfony/Component/Form/Extension/Core/Type/BaseType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/BaseType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/BaseType.php
@@ -33,5 +33,5 @@ abstract class BaseType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->setDisabled($options['disabled']);
@@ -42,5 +42,5 @@ abstract class BaseType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $name = $form->getName();
@@ -129,5 +129,5 @@ abstract class BaseType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/BirthdayType.php b/src/Symfony/Component/Form/Extension/Core/Type/BirthdayType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/BirthdayType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/BirthdayType.php
@@ -20,5 +20,5 @@ class BirthdayType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/ButtonType.php b/src/Symfony/Component/Form/Extension/Core/Type/ButtonType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/ButtonType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/ButtonType.php
@@ -35,5 +35,5 @@ class ButtonType extends BaseType implements ButtonTypeInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         parent::configureOptions($resolver);
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/CheckboxType.php b/src/Symfony/Component/Form/Extension/Core/Type/CheckboxType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/CheckboxType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/CheckboxType.php
@@ -24,5 +24,5 @@ class CheckboxType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         // Unlike in other types, where the data is NULL by default, it
@@ -39,5 +39,5 @@ class CheckboxType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars = array_replace($view->vars, [
@@ -50,5 +50,5 @@ class CheckboxType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $emptyData = static fn (FormInterface $form, $viewData) => $viewData;
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/ChoiceType.php b/src/Symfony/Component/Form/Extension/Core/Type/ChoiceType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/ChoiceType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/ChoiceType.php
@@ -66,5 +66,5 @@ class ChoiceType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $unknownValues = [];
@@ -221,5 +221,5 @@ class ChoiceType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $choiceTranslationDomain = $options['choice_translation_domain'];
@@ -278,5 +278,5 @@ class ChoiceType extends AbstractType
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['expanded']) {
@@ -298,5 +298,5 @@ class ChoiceType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $emptyData = static function (Options $options) {
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/CollectionType.php b/src/Symfony/Component/Form/Extension/Core/Type/CollectionType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/CollectionType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/CollectionType.php
@@ -25,5 +25,5 @@ class CollectionType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $resizePrototypeOptions = null;
@@ -58,5 +58,5 @@ class CollectionType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars = array_replace($view->vars, [
@@ -74,5 +74,5 @@ class CollectionType extends AbstractType
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         $prefixOffset = -2;
@@ -108,5 +108,5 @@ class CollectionType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $entryOptionsNormalizer = static function (Options $options, $value) {
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/ColorType.php b/src/Symfony/Component/Form/Extension/Core/Type/ColorType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/ColorType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/ColorType.php
@@ -37,5 +37,5 @@ class ColorType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if (!$options['html5']) {
@@ -67,5 +67,5 @@ class ColorType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/CountryType.php b/src/Symfony/Component/Form/Extension/Core/Type/CountryType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/CountryType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/CountryType.php
@@ -26,5 +26,5 @@ class CountryType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/CurrencyType.php b/src/Symfony/Component/Form/Extension/Core/Type/CurrencyType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/CurrencyType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/CurrencyType.php
@@ -26,5 +26,5 @@ class CurrencyType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/DateIntervalType.php b/src/Symfony/Component/Form/Extension/Core/Type/DateIntervalType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/DateIntervalType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/DateIntervalType.php
@@ -47,5 +47,5 @@ class DateIntervalType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if (!$options['with_years'] && !$options['with_months'] && !$options['with_weeks'] && !$options['with_days'] && !$options['with_hours'] && !$options['with_minutes'] && !$options['with_seconds']) {
@@ -152,5 +152,5 @@ class DateIntervalType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $vars = [
@@ -167,5 +167,5 @@ class DateIntervalType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $compound = static fn (Options $options) => 'single_text' !== $options['widget'];
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/DateTimeType.php b/src/Symfony/Component/Form/Extension/Core/Type/DateTimeType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/DateTimeType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/DateTimeType.php
@@ -53,5 +53,5 @@ class DateTimeType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $parts = ['year', 'month', 'day', 'hour'];
@@ -217,5 +217,5 @@ class DateTimeType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['widget'] = $options['widget'];
@@ -245,5 +245,5 @@ class DateTimeType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $compound = static fn (Options $options) => 'single_text' !== $options['widget'];
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/DateType.php b/src/Symfony/Component/Form/Extension/Core/Type/DateType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/DateType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/DateType.php
@@ -49,5 +49,5 @@ class DateType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $dateFormat = \is_int($options['format']) ? $options['format'] : self::DEFAULT_FORMAT;
@@ -201,5 +201,5 @@ class DateType extends AbstractType
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['widget'] = $options['widget'];
@@ -241,5 +241,5 @@ class DateType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $compound = static fn (Options $options) => 'single_text' !== $options['widget'];
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/EmailType.php b/src/Symfony/Component/Form/Extension/Core/Type/EmailType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/EmailType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/EmailType.php
@@ -20,5 +20,5 @@ class EmailType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/FileType.php b/src/Symfony/Component/Form/Extension/Core/Type/FileType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/FileType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/FileType.php
@@ -45,5 +45,5 @@ class FileType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         // Ensure that submitted data is always an uploaded file or an array of some
@@ -89,5 +89,5 @@ class FileType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['multiple']) {
@@ -105,5 +105,5 @@ class FileType extends AbstractType
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['multipart'] = true;
@@ -113,5 +113,5 @@ class FileType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $dataClass = null;
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/FormType.php b/src/Symfony/Component/Form/Extension/Core/Type/FormType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/FormType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/FormType.php
@@ -42,5 +42,5 @@ class FormType extends BaseType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         parent::buildForm($builder, $options);
@@ -73,5 +73,5 @@ class FormType extends BaseType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         parent::buildView($view, $form, $options);
@@ -115,5 +115,5 @@ class FormType extends BaseType
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         $multipart = false;
@@ -132,5 +132,5 @@ class FormType extends BaseType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         parent::configureOptions($resolver);
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/HiddenType.php b/src/Symfony/Component/Form/Extension/Core/Type/HiddenType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/HiddenType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/HiddenType.php
@@ -20,5 +20,5 @@ class HiddenType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/IntegerType.php b/src/Symfony/Component/Form/Extension/Core/Type/IntegerType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/IntegerType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/IntegerType.php
@@ -24,5 +24,5 @@ class IntegerType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->addViewTransformer(new IntegerToLocalizedStringTransformer($options['grouping'], $options['rounding_mode'], !$options['grouping'] ? 'en' : null));
@@ -32,5 +32,5 @@ class IntegerType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['grouping']) {
@@ -42,5 +42,5 @@ class IntegerType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/LanguageType.php b/src/Symfony/Component/Form/Extension/Core/Type/LanguageType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/LanguageType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/LanguageType.php
@@ -27,5 +27,5 @@ class LanguageType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/LocaleType.php b/src/Symfony/Component/Form/Extension/Core/Type/LocaleType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/LocaleType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/LocaleType.php
@@ -26,5 +26,5 @@ class LocaleType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/MoneyType.php b/src/Symfony/Component/Form/Extension/Core/Type/MoneyType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/MoneyType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/MoneyType.php
@@ -28,5 +28,5 @@ class MoneyType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         // Values used in HTML5 number inputs should be formatted as in "1234.5", ie. 'en' format without grouping,
@@ -46,5 +46,5 @@ class MoneyType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['money_pattern'] = self::getPattern($options['currency']);
@@ -58,5 +58,5 @@ class MoneyType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
@@ -107,5 +107,5 @@ class MoneyType extends AbstractType
      * @return string
      */
-    protected static function getPattern(?string $currency)
+    protected static function getPattern(?string $currency): string
     {
         if (!$currency) {
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/NumberType.php b/src/Symfony/Component/Form/Extension/Core/Type/NumberType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/NumberType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/NumberType.php
@@ -27,5 +27,5 @@ class NumberType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->addViewTransformer(new NumberToLocalizedStringTransformer(
@@ -44,5 +44,5 @@ class NumberType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['html5']) {
@@ -60,5 +60,5 @@ class NumberType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/PasswordType.php b/src/Symfony/Component/Form/Extension/Core/Type/PasswordType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/PasswordType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/PasswordType.php
@@ -22,5 +22,5 @@ class PasswordType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['always_empty'] || !$form->isSubmitted()) {
@@ -32,5 +32,5 @@ class PasswordType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/PercentType.php b/src/Symfony/Component/Form/Extension/Core/Type/PercentType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/PercentType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/PercentType.php
@@ -24,5 +24,5 @@ class PercentType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->addViewTransformer(new PercentToLocalizedStringTransformer(
@@ -37,5 +37,5 @@ class PercentType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['symbol'] = $options['symbol'];
@@ -49,5 +49,5 @@ class PercentType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/RadioType.php b/src/Symfony/Component/Form/Extension/Core/Type/RadioType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/RadioType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/RadioType.php
@@ -20,5 +20,5 @@ class RadioType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/RangeType.php b/src/Symfony/Component/Form/Extension/Core/Type/RangeType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/RangeType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/RangeType.php
@@ -20,5 +20,5 @@ class RangeType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/RepeatedType.php b/src/Symfony/Component/Form/Extension/Core/Type/RepeatedType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/RepeatedType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/RepeatedType.php
@@ -22,5 +22,5 @@ class RepeatedType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         // Overwrite required option for child fields
@@ -48,5 +48,5 @@ class RepeatedType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/SearchType.php b/src/Symfony/Component/Form/Extension/Core/Type/SearchType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/SearchType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/SearchType.php
@@ -20,5 +20,5 @@ class SearchType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/SubmitType.php b/src/Symfony/Component/Form/Extension/Core/Type/SubmitType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/SubmitType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/SubmitType.php
@@ -28,5 +28,5 @@ class SubmitType extends AbstractType implements SubmitButtonTypeInterface
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['clicked'] = $form->isClicked();
@@ -40,5 +40,5 @@ class SubmitType extends AbstractType implements SubmitButtonTypeInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefault('validate', true);
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/TelType.php b/src/Symfony/Component/Form/Extension/Core/Type/TelType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/TelType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/TelType.php
@@ -20,5 +20,5 @@ class TelType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/TextType.php b/src/Symfony/Component/Form/Extension/Core/Type/TextType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/TextType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/TextType.php
@@ -22,5 +22,5 @@ class TextType extends AbstractType implements DataTransformerInterface
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         // When empty_data is explicitly set to an empty string,
@@ -37,5 +37,5 @@ class TextType extends AbstractType implements DataTransformerInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/TextareaType.php b/src/Symfony/Component/Form/Extension/Core/Type/TextareaType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/TextareaType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/TextareaType.php
@@ -21,5 +21,5 @@ class TextareaType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['pattern'] = null;
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/TimeType.php b/src/Symfony/Component/Form/Extension/Core/Type/TimeType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/TimeType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/TimeType.php
@@ -38,5 +38,5 @@ class TimeType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $parts = ['hour'];
@@ -229,5 +229,5 @@ class TimeType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars = array_replace($view->vars, [
@@ -260,5 +260,5 @@ class TimeType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $compound = static fn (Options $options) => 'single_text' !== $options['widget'];
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/TimezoneType.php b/src/Symfony/Component/Form/Extension/Core/Type/TimezoneType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/TimezoneType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/TimezoneType.php
@@ -29,5 +29,5 @@ class TimezoneType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if ('datetimezone' === $options['input']) {
@@ -41,5 +41,5 @@ class TimezoneType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php b/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/TransformationFailureExtension.php
@@ -32,5 +32,5 @@ class TransformationFailureExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if (!isset($options['constraints'])) {
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/UlidType.php b/src/Symfony/Component/Form/Extension/Core/Type/UlidType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/UlidType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/UlidType.php
@@ -25,5 +25,5 @@ class UlidType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder
@@ -35,5 +35,5 @@ class UlidType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/UrlType.php b/src/Symfony/Component/Form/Extension/Core/Type/UrlType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/UrlType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/UrlType.php
@@ -24,5 +24,5 @@ class UrlType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if (null !== $options['default_protocol']) {
@@ -34,5 +34,5 @@ class UrlType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['default_protocol']) {
@@ -45,5 +45,5 @@ class UrlType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/UuidType.php b/src/Symfony/Component/Form/Extension/Core/Type/UuidType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/UuidType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/UuidType.php
@@ -25,5 +25,5 @@ class UuidType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder
@@ -35,5 +35,5 @@ class UuidType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Core/Type/WeekType.php b/src/Symfony/Component/Form/Extension/Core/Type/WeekType.php
--- a/src/Symfony/Component/Form/Extension/Core/Type/WeekType.php
+++ b/src/Symfony/Component/Form/Extension/Core/Type/WeekType.php
@@ -32,5 +32,5 @@ class WeekType extends AbstractType
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if ('string' === $options['input']) {
@@ -87,5 +87,5 @@ class WeekType extends AbstractType
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $view->vars['widget'] = $options['widget'];
@@ -99,5 +99,5 @@ class WeekType extends AbstractType
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $compound = static fn (Options $options) => 'single_text' !== $options['widget'];
diff --git a/src/Symfony/Component/Form/Extension/Csrf/EventListener/CsrfValidationListener.php b/src/Symfony/Component/Form/Extension/Csrf/EventListener/CsrfValidationListener.php
--- a/src/Symfony/Component/Form/Extension/Csrf/EventListener/CsrfValidationListener.php
+++ b/src/Symfony/Component/Form/Extension/Csrf/EventListener/CsrfValidationListener.php
@@ -55,5 +55,5 @@ class CsrfValidationListener implements EventSubscriberInterface
      * @return void
      */
-    public function preSubmit(FormEvent $event)
+    public function preSubmit(FormEvent $event): void
     {
         $form = $event->getForm();
diff --git a/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php b/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php
--- a/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php
+++ b/src/Symfony/Component/Form/Extension/Csrf/Type/FormTypeCsrfExtension.php
@@ -51,5 +51,5 @@ class FormTypeCsrfExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if (!$options['csrf_protection']) {
@@ -75,5 +75,5 @@ class FormTypeCsrfExtension extends AbstractTypeExtension
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         if ($options['csrf_protection'] && !$view->parent && $options['compound']) {
@@ -94,5 +94,5 @@ class FormTypeCsrfExtension extends AbstractTypeExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/DataCollector/EventListener/DataCollectorListener.php b/src/Symfony/Component/Form/Extension/DataCollector/EventListener/DataCollectorListener.php
--- a/src/Symfony/Component/Form/Extension/DataCollector/EventListener/DataCollectorListener.php
+++ b/src/Symfony/Component/Form/Extension/DataCollector/EventListener/DataCollectorListener.php
@@ -47,5 +47,5 @@ class DataCollectorListener implements EventSubscriberInterface
      * @return void
      */
-    public function postSetData(FormEvent $event)
+    public function postSetData(FormEvent $event): void
     {
         if ($event->getForm()->isRoot()) {
@@ -63,5 +63,5 @@ class DataCollectorListener implements EventSubscriberInterface
      * @return void
      */
-    public function postSubmit(FormEvent $event)
+    public function postSubmit(FormEvent $event): void
     {
         if ($event->getForm()->isRoot()) {
diff --git a/src/Symfony/Component/Form/Extension/DataCollector/FormDataCollectorInterface.php b/src/Symfony/Component/Form/Extension/DataCollector/FormDataCollectorInterface.php
--- a/src/Symfony/Component/Form/Extension/DataCollector/FormDataCollectorInterface.php
+++ b/src/Symfony/Component/Form/Extension/DataCollector/FormDataCollectorInterface.php
@@ -29,5 +29,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function collectConfiguration(FormInterface $form);
+    public function collectConfiguration(FormInterface $form): void;

     /**
@@ -36,5 +36,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function collectDefaultData(FormInterface $form);
+    public function collectDefaultData(FormInterface $form): void;

     /**
@@ -43,5 +43,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function collectSubmittedData(FormInterface $form);
+    public function collectSubmittedData(FormInterface $form): void;

     /**
@@ -50,5 +50,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function collectViewVariables(FormView $view);
+    public function collectViewVariables(FormView $view): void;

     /**
@@ -57,5 +57,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function associateFormWithView(FormInterface $form, FormView $view);
+    public function associateFormWithView(FormInterface $form, FormView $view): void;

     /**
@@ -67,5 +67,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function buildPreliminaryFormTree(FormInterface $form);
+    public function buildPreliminaryFormTree(FormInterface $form): void;

     /**
@@ -89,5 +89,5 @@ interface FormDataCollectorInterface extends DataCollectorInterface
      * @return void
      */
-    public function buildFinalFormTree(FormInterface $form, FormView $view);
+    public function buildFinalFormTree(FormInterface $form, FormView $view): void;

     /**
diff --git a/src/Symfony/Component/Form/Extension/DataCollector/Proxy/ResolvedTypeDataCollectorProxy.php b/src/Symfony/Component/Form/Extension/DataCollector/Proxy/ResolvedTypeDataCollectorProxy.php
--- a/src/Symfony/Component/Form/Extension/DataCollector/Proxy/ResolvedTypeDataCollectorProxy.php
+++ b/src/Symfony/Component/Form/Extension/DataCollector/Proxy/ResolvedTypeDataCollectorProxy.php
@@ -75,5 +75,5 @@ class ResolvedTypeDataCollectorProxy implements ResolvedFormTypeInterface
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $this->proxiedType->buildForm($builder, $options);
@@ -83,5 +83,5 @@ class ResolvedTypeDataCollectorProxy implements ResolvedFormTypeInterface
      * @return void
      */
-    public function buildView(FormView $view, FormInterface $form, array $options)
+    public function buildView(FormView $view, FormInterface $form, array $options): void
     {
         $this->proxiedType->buildView($view, $form, $options);
@@ -91,5 +91,5 @@ class ResolvedTypeDataCollectorProxy implements ResolvedFormTypeInterface
      * @return void
      */
-    public function finishView(FormView $view, FormInterface $form, array $options)
+    public function finishView(FormView $view, FormInterface $form, array $options): void
     {
         $this->proxiedType->finishView($view, $form, $options);
diff --git a/src/Symfony/Component/Form/Extension/DataCollector/Type/DataCollectorTypeExtension.php b/src/Symfony/Component/Form/Extension/DataCollector/Type/DataCollectorTypeExtension.php
--- a/src/Symfony/Component/Form/Extension/DataCollector/Type/DataCollectorTypeExtension.php
+++ b/src/Symfony/Component/Form/Extension/DataCollector/Type/DataCollectorTypeExtension.php
@@ -36,5 +36,5 @@ class DataCollectorTypeExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->addEventSubscriber($this->listener);
diff --git a/src/Symfony/Component/Form/Extension/HtmlSanitizer/Type/TextTypeHtmlSanitizerExtension.php b/src/Symfony/Component/Form/Extension/HtmlSanitizer/Type/TextTypeHtmlSanitizerExtension.php
--- a/src/Symfony/Component/Form/Extension/HtmlSanitizer/Type/TextTypeHtmlSanitizerExtension.php
+++ b/src/Symfony/Component/Form/Extension/HtmlSanitizer/Type/TextTypeHtmlSanitizerExtension.php
@@ -39,5 +39,5 @@ class TextTypeHtmlSanitizerExtension extends AbstractTypeExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver
@@ -51,5 +51,5 @@ class TextTypeHtmlSanitizerExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if (!$options['sanitize_html']) {
diff --git a/src/Symfony/Component/Form/Extension/HttpFoundation/HttpFoundationRequestHandler.php b/src/Symfony/Component/Form/Extension/HttpFoundation/HttpFoundationRequestHandler.php
--- a/src/Symfony/Component/Form/Extension/HttpFoundation/HttpFoundationRequestHandler.php
+++ b/src/Symfony/Component/Form/Extension/HttpFoundation/HttpFoundationRequestHandler.php
@@ -39,5 +39,5 @@ class HttpFoundationRequestHandler implements RequestHandlerInterface
      * @return void
      */
-    public function handleRequest(FormInterface $form, mixed $request = null)
+    public function handleRequest(FormInterface $form, mixed $request = null): void
     {
         if (!$request instanceof Request) {
diff --git a/src/Symfony/Component/Form/Extension/HttpFoundation/Type/FormTypeHttpFoundationExtension.php b/src/Symfony/Component/Form/Extension/HttpFoundation/Type/FormTypeHttpFoundationExtension.php
--- a/src/Symfony/Component/Form/Extension/HttpFoundation/Type/FormTypeHttpFoundationExtension.php
+++ b/src/Symfony/Component/Form/Extension/HttpFoundation/Type/FormTypeHttpFoundationExtension.php
@@ -33,5 +33,5 @@ class FormTypeHttpFoundationExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->setRequestHandler($this->requestHandler);
diff --git a/src/Symfony/Component/Form/Extension/PasswordHasher/EventListener/PasswordHasherListener.php b/src/Symfony/Component/Form/Extension/PasswordHasher/EventListener/PasswordHasherListener.php
--- a/src/Symfony/Component/Form/Extension/PasswordHasher/EventListener/PasswordHasherListener.php
+++ b/src/Symfony/Component/Form/Extension/PasswordHasher/EventListener/PasswordHasherListener.php
@@ -39,5 +39,5 @@ class PasswordHasherListener
      * @return void
      */
-    public function registerPassword(FormEvent $event)
+    public function registerPassword(FormEvent $event): void
     {
         if (null === $event->getData() || '' === $event->getData()) {
@@ -57,5 +57,5 @@ class PasswordHasherListener
      * @return void
      */
-    public function hashPasswords(FormEvent $event)
+    public function hashPasswords(FormEvent $event): void
     {
         $form = $event->getForm();
diff --git a/src/Symfony/Component/Form/Extension/PasswordHasher/Type/FormTypePasswordHasherExtension.php b/src/Symfony/Component/Form/Extension/PasswordHasher/Type/FormTypePasswordHasherExtension.php
--- a/src/Symfony/Component/Form/Extension/PasswordHasher/Type/FormTypePasswordHasherExtension.php
+++ b/src/Symfony/Component/Form/Extension/PasswordHasher/Type/FormTypePasswordHasherExtension.php
@@ -31,5 +31,5 @@ class FormTypePasswordHasherExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->addEventListener(FormEvents::POST_SUBMIT, [$this->passwordHasherListener, 'hashPasswords']);
diff --git a/src/Symfony/Component/Form/Extension/PasswordHasher/Type/PasswordTypePasswordHasherExtension.php b/src/Symfony/Component/Form/Extension/PasswordHasher/Type/PasswordTypePasswordHasherExtension.php
--- a/src/Symfony/Component/Form/Extension/PasswordHasher/Type/PasswordTypePasswordHasherExtension.php
+++ b/src/Symfony/Component/Form/Extension/PasswordHasher/Type/PasswordTypePasswordHasherExtension.php
@@ -33,5 +33,5 @@ class PasswordTypePasswordHasherExtension extends AbstractTypeExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         if ($options['hash_property_path']) {
@@ -43,5 +43,5 @@ class PasswordTypePasswordHasherExtension extends AbstractTypeExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $resolver->setDefaults([
diff --git a/src/Symfony/Component/Form/Extension/Validator/Constraints/FormValidator.php b/src/Symfony/Component/Form/Extension/Validator/Constraints/FormValidator.php
--- a/src/Symfony/Component/Form/Extension/Validator/Constraints/FormValidator.php
+++ b/src/Symfony/Component/Form/Extension/Validator/Constraints/FormValidator.php
@@ -33,5 +33,5 @@ class FormValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $form, Constraint $formConstraint)
+    public function validate(mixed $form, Constraint $formConstraint): void
     {
         if (!$formConstraint instanceof Form) {
diff --git a/src/Symfony/Component/Form/Extension/Validator/EventListener/ValidationListener.php b/src/Symfony/Component/Form/Extension/Validator/EventListener/ValidationListener.php
--- a/src/Symfony/Component/Form/Extension/Validator/EventListener/ValidationListener.php
+++ b/src/Symfony/Component/Form/Extension/Validator/EventListener/ValidationListener.php
@@ -41,5 +41,5 @@ class ValidationListener implements EventSubscriberInterface
      * @return void
      */
-    public function validateForm(FormEvent $event)
+    public function validateForm(FormEvent $event): void
     {
         $form = $event->getForm();
diff --git a/src/Symfony/Component/Form/Extension/Validator/Type/BaseValidatorExtension.php b/src/Symfony/Component/Form/Extension/Validator/Type/BaseValidatorExtension.php
--- a/src/Symfony/Component/Form/Extension/Validator/Type/BaseValidatorExtension.php
+++ b/src/Symfony/Component/Form/Extension/Validator/Type/BaseValidatorExtension.php
@@ -28,5 +28,5 @@ abstract class BaseValidatorExtension extends AbstractTypeExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         // Make sure that validation groups end up as null, closure or array
diff --git a/src/Symfony/Component/Form/Extension/Validator/Type/FormTypeValidatorExtension.php b/src/Symfony/Component/Form/Extension/Validator/Type/FormTypeValidatorExtension.php
--- a/src/Symfony/Component/Form/Extension/Validator/Type/FormTypeValidatorExtension.php
+++ b/src/Symfony/Component/Form/Extension/Validator/Type/FormTypeValidatorExtension.php
@@ -41,5 +41,5 @@ class FormTypeValidatorExtension extends BaseValidatorExtension
      * @return void
      */
-    public function buildForm(FormBuilderInterface $builder, array $options)
+    public function buildForm(FormBuilderInterface $builder, array $options): void
     {
         $builder->addEventSubscriber(new ValidationListener($this->validator, $this->violationMapper));
@@ -49,5 +49,5 @@ class FormTypeValidatorExtension extends BaseValidatorExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         parent::configureOptions($resolver);
diff --git a/src/Symfony/Component/Form/Extension/Validator/Type/RepeatedTypeValidatorExtension.php b/src/Symfony/Component/Form/Extension/Validator/Type/RepeatedTypeValidatorExtension.php
--- a/src/Symfony/Component/Form/Extension/Validator/Type/RepeatedTypeValidatorExtension.php
+++ b/src/Symfony/Component/Form/Extension/Validator/Type/RepeatedTypeValidatorExtension.php
@@ -25,5 +25,5 @@ class RepeatedTypeValidatorExtension extends AbstractTypeExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         // Map errors to the first field
diff --git a/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php b/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php
--- a/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php
+++ b/src/Symfony/Component/Form/Extension/Validator/Type/UploadValidatorExtension.php
@@ -36,5 +36,5 @@ class UploadValidatorExtension extends AbstractTypeExtension
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver)
+    public function configureOptions(OptionsResolver $resolver): void
     {
         $translator = $this->translator;
diff --git a/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapper.php b/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapper.php
--- a/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapper.php
+++ b/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapper.php
@@ -42,5 +42,5 @@ class ViolationMapper implements ViolationMapperInterface
      * @return void
      */
-    public function mapViolation(ConstraintViolation $violation, FormInterface $form, bool $allowNonSynchronized = false)
+    public function mapViolation(ConstraintViolation $violation, FormInterface $form, bool $allowNonSynchronized = false): void
     {
         $this->allowNonSynchronized = $allowNonSynchronized;
diff --git a/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapperInterface.php b/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapperInterface.php
--- a/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapperInterface.php
+++ b/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationMapperInterface.php
@@ -28,4 +28,4 @@ interface ViolationMapperInterface
      * @return void
      */
-    public function mapViolation(ConstraintViolation $violation, FormInterface $form, bool $allowNonSynchronized = false);
+    public function mapViolation(ConstraintViolation $violation, FormInterface $form, bool $allowNonSynchronized = false): void;
 }
diff --git a/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationPathIterator.php b/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationPathIterator.php
--- a/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationPathIterator.php
+++ b/src/Symfony/Component/Form/Extension/Validator/ViolationMapper/ViolationPathIterator.php
@@ -27,5 +27,5 @@ class ViolationPathIterator extends PropertyPathIterator
      * @return bool
      */
-    public function mapsForm()
+    public function mapsForm(): bool
     {
         return $this->path->mapsForm($this->key());
diff --git a/src/Symfony/Component/Form/FormConfigBuilder.php b/src/Symfony/Component/Form/FormConfigBuilder.php
--- a/src/Symfony/Component/Form/FormConfigBuilder.php
+++ b/src/Symfony/Component/Form/FormConfigBuilder.php
@@ -537,5 +537,5 @@ class FormConfigBuilder implements FormConfigBuilderInterface
      * @return $this
      */
-    public function setFormFactory(FormFactoryInterface $formFactory)
+    public function setFormFactory(FormFactoryInterface $formFactory): static
     {
         if ($this->locked) {
diff --git a/src/Symfony/Component/Form/FormConfigBuilderInterface.php b/src/Symfony/Component/Form/FormConfigBuilderInterface.php
--- a/src/Symfony/Component/Form/FormConfigBuilderInterface.php
+++ b/src/Symfony/Component/Form/FormConfigBuilderInterface.php
@@ -209,5 +209,5 @@ interface FormConfigBuilderInterface extends FormConfigInterface
      * @return $this
      */
-    public function setFormFactory(FormFactoryInterface $formFactory);
+    public function setFormFactory(FormFactoryInterface $formFactory): static;

     /**
diff --git a/src/Symfony/Component/Form/FormError.php b/src/Symfony/Component/Form/FormError.php
--- a/src/Symfony/Component/Form/FormError.php
+++ b/src/Symfony/Component/Form/FormError.php
@@ -104,5 +104,5 @@ class FormError
      * @throws BadMethodCallException If the method is called more than once
      */
-    public function setOrigin(FormInterface $origin)
+    public function setOrigin(FormInterface $origin): void
     {
         if (null !== $this->origin) {
diff --git a/src/Symfony/Component/Form/FormEvent.php b/src/Symfony/Component/Form/FormEvent.php
--- a/src/Symfony/Component/Form/FormEvent.php
+++ b/src/Symfony/Component/Form/FormEvent.php
@@ -49,5 +49,5 @@ class FormEvent extends Event
      * @return void
      */
-    public function setData(mixed $data)
+    public function setData(mixed $data): void
     {
         $this->data = $data;
diff --git a/src/Symfony/Component/Form/FormRenderer.php b/src/Symfony/Component/Form/FormRenderer.php
--- a/src/Symfony/Component/Form/FormRenderer.php
+++ b/src/Symfony/Component/Form/FormRenderer.php
@@ -46,5 +46,5 @@ class FormRenderer implements FormRendererInterface
      * @return void
      */
-    public function setTheme(FormView $view, mixed $themes, bool $useDefaultThemes = true)
+    public function setTheme(FormView $view, mixed $themes, bool $useDefaultThemes = true): void
     {
         $this->engine->setTheme($view, $themes, $useDefaultThemes);
diff --git a/src/Symfony/Component/Form/FormRendererEngineInterface.php b/src/Symfony/Component/Form/FormRendererEngineInterface.php
--- a/src/Symfony/Component/Form/FormRendererEngineInterface.php
+++ b/src/Symfony/Component/Form/FormRendererEngineInterface.php
@@ -28,5 +28,5 @@ interface FormRendererEngineInterface
      * @return void
      */
-    public function setTheme(FormView $view, mixed $themes, bool $useDefaultThemes = true);
+    public function setTheme(FormView $view, mixed $themes, bool $useDefaultThemes = true): void;

     /**
@@ -133,4 +133,4 @@ interface FormRendererEngineInterface
      * @return string
      */
-    public function renderBlock(FormView $view, mixed $resource, string $blockName, array $variables = []);
+    public function renderBlock(FormView $view, mixed $resource, string $blockName, array $variables = []): string;
 }
diff --git a/src/Symfony/Component/Form/FormRendererInterface.php b/src/Symfony/Component/Form/FormRendererInterface.php
--- a/src/Symfony/Component/Form/FormRendererInterface.php
+++ b/src/Symfony/Component/Form/FormRendererInterface.php
@@ -35,5 +35,5 @@ interface FormRendererInterface
      * @return void
      */
-    public function setTheme(FormView $view, mixed $themes, bool $useDefaultThemes = true);
+    public function setTheme(FormView $view, mixed $themes, bool $useDefaultThemes = true): void;

     /**
diff --git a/src/Symfony/Component/Form/FormTypeExtensionInterface.php b/src/Symfony/Component/Form/FormTypeExtensionInterface.php
--- a/src/Symfony/Component/Form/FormTypeExtensionInterface.php
+++ b/src/Symfony/Component/Form/FormTypeExtensionInterface.php
@@ -29,5 +29,5 @@ interface FormTypeExtensionInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver);
+    public function configureOptions(OptionsResolver $resolver): void;

     /**
@@ -43,5 +43,5 @@ interface FormTypeExtensionInterface
      * @see FormTypeInterface::buildForm()
      */
-    public function buildForm(FormBuilderInterface $builder, array $options);
+    public function buildForm(FormBuilderInterface $builder, array $options): void;

     /**
@@ -57,5 +57,5 @@ interface FormTypeExtensionInterface
      * @see FormTypeInterface::buildView()
      */
-    public function buildView(FormView $view, FormInterface $form, array $options);
+    public function buildView(FormView $view, FormInterface $form, array $options): void;

     /**
@@ -71,4 +71,4 @@ interface FormTypeExtensionInterface
      * @see FormTypeInterface::finishView()
      */
-    public function finishView(FormView $view, FormInterface $form, array $options);
+    public function finishView(FormView $view, FormInterface $form, array $options): void;
 }
diff --git a/src/Symfony/Component/Form/FormTypeGuesserInterface.php b/src/Symfony/Component/Form/FormTypeGuesserInterface.php
--- a/src/Symfony/Component/Form/FormTypeGuesserInterface.php
+++ b/src/Symfony/Component/Form/FormTypeGuesserInterface.php
@@ -22,5 +22,5 @@ interface FormTypeGuesserInterface
      * @return Guess\TypeGuess|null
      */
-    public function guessType(string $class, string $property);
+    public function guessType(string $class, string $property): ?Guess\TypeGuess;

     /**
@@ -29,5 +29,5 @@ interface FormTypeGuesserInterface
      * @return Guess\ValueGuess|null
      */
-    public function guessRequired(string $class, string $property);
+    public function guessRequired(string $class, string $property): ?Guess\ValueGuess;

     /**
@@ -36,5 +36,5 @@ interface FormTypeGuesserInterface
      * @return Guess\ValueGuess|null
      */
-    public function guessMaxLength(string $class, string $property);
+    public function guessMaxLength(string $class, string $property): ?Guess\ValueGuess;

     /**
@@ -43,4 +43,4 @@ interface FormTypeGuesserInterface
      * @return Guess\ValueGuess|null
      */
-    public function guessPattern(string $class, string $property);
+    public function guessPattern(string $class, string $property): ?Guess\ValueGuess;
 }
diff --git a/src/Symfony/Component/Form/FormTypeInterface.php b/src/Symfony/Component/Form/FormTypeInterface.php
--- a/src/Symfony/Component/Form/FormTypeInterface.php
+++ b/src/Symfony/Component/Form/FormTypeInterface.php
@@ -27,5 +27,5 @@ interface FormTypeInterface
      * @return string|null
      */
-    public function getParent();
+    public function getParent(): ?string;

     /**
@@ -34,5 +34,5 @@ interface FormTypeInterface
      * @return void
      */
-    public function configureOptions(OptionsResolver $resolver);
+    public function configureOptions(OptionsResolver $resolver): void;

     /**
@@ -48,5 +48,5 @@ interface FormTypeInterface
      * @see FormTypeExtensionInterface::buildForm()
      */
-    public function buildForm(FormBuilderInterface $builder, array $options);
+    public function buildForm(FormBuilderInterface $builder, array $options): void;

     /**
@@ -66,5 +66,5 @@ interface FormTypeInterface
      * @see FormTypeExtensionInterface::buildView()
      */
-    public function buildView(FormView $view, FormInterface $form, array $options);
+    public function buildView(FormView $view, FormInterface $form, array $options): void;

     /**
@@ -85,5 +85,5 @@ interface FormTypeInterface
      * @see FormTypeExtensionInterface::finishView()
      */
-    public function finishView(FormView $view, FormInterface $form, array $options);
+    public function finishView(FormView $view, FormInterface $form, array $options): void;

     /**
@@ -95,4 +95,4 @@ interface FormTypeInterface
      * @return string
      */
-    public function getBlockPrefix();
+    public function getBlockPrefix(): string;
 }
diff --git a/src/Symfony/Component/HttpKernel/Bundle/Bundle.php b/src/Symfony/Component/HttpKernel/Bundle/Bundle.php
--- a/src/Symfony/Component/HttpKernel/Bundle/Bundle.php
+++ b/src/Symfony/Component/HttpKernel/Bundle/Bundle.php
@@ -35,5 +35,5 @@ abstract class Bundle implements BundleInterface
      * @return void
      */
-    public function boot()
+    public function boot(): void
     {
     }
@@ -42,5 +42,5 @@ abstract class Bundle implements BundleInterface
      * @return void
      */
-    public function shutdown()
+    public function shutdown(): void
     {
     }
@@ -52,5 +52,5 @@ abstract class Bundle implements BundleInterface
      * @return void
      */
-    public function build(ContainerBuilder $container)
+    public function build(ContainerBuilder $container): void
     {
     }
@@ -122,5 +122,5 @@ abstract class Bundle implements BundleInterface
      * @return void
      */
-    public function registerCommands(Application $application)
+    public function registerCommands(Application $application): void
     {
     }
diff --git a/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php b/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php
--- a/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php
+++ b/src/Symfony/Component/HttpKernel/Bundle/BundleInterface.php
@@ -28,5 +28,5 @@ interface BundleInterface
      * @return void
      */
-    public function boot();
+    public function boot(): void;

     /**
@@ -35,5 +35,5 @@ interface BundleInterface
      * @return void
      */
-    public function shutdown();
+    public function shutdown(): void;

     /**
@@ -44,5 +44,5 @@ interface BundleInterface
      * @return void
      */
-    public function build(ContainerBuilder $container);
+    public function build(ContainerBuilder $container): void;

     /**
diff --git a/src/Symfony/Component/HttpKernel/DataCollector/DataCollector.php b/src/Symfony/Component/HttpKernel/DataCollector/DataCollector.php
--- a/src/Symfony/Component/HttpKernel/DataCollector/DataCollector.php
+++ b/src/Symfony/Component/HttpKernel/DataCollector/DataCollector.php
@@ -101,5 +101,5 @@ abstract class DataCollector implements DataCollectorInterface
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->data = [];
diff --git a/src/Symfony/Component/HttpKernel/DataCollector/DataCollectorInterface.php b/src/Symfony/Component/HttpKernel/DataCollector/DataCollectorInterface.php
--- a/src/Symfony/Component/HttpKernel/DataCollector/DataCollectorInterface.php
+++ b/src/Symfony/Component/HttpKernel/DataCollector/DataCollectorInterface.php
@@ -28,5 +28,5 @@ interface DataCollectorInterface extends ResetInterface
      * @return void
      */
-    public function collect(Request $request, Response $response, \Throwable $exception = null);
+    public function collect(Request $request, Response $response, \Throwable $exception = null): void;

     /**
@@ -35,4 +35,4 @@ interface DataCollectorInterface extends ResetInterface
      * @return string
      */
-    public function getName();
+    public function getName(): string;
 }
diff --git a/src/Symfony/Component/HttpKernel/DataCollector/LateDataCollectorInterface.php b/src/Symfony/Component/HttpKernel/DataCollector/LateDataCollectorInterface.php
--- a/src/Symfony/Component/HttpKernel/DataCollector/LateDataCollectorInterface.php
+++ b/src/Symfony/Component/HttpKernel/DataCollector/LateDataCollectorInterface.php
@@ -24,4 +24,4 @@ interface LateDataCollectorInterface
      * @return void
      */
-    public function lateCollect();
+    public function lateCollect(): void;
 }
diff --git a/src/Symfony/Component/HttpKernel/DataCollector/RequestDataCollector.php b/src/Symfony/Component/HttpKernel/DataCollector/RequestDataCollector.php
--- a/src/Symfony/Component/HttpKernel/DataCollector/RequestDataCollector.php
+++ b/src/Symfony/Component/HttpKernel/DataCollector/RequestDataCollector.php
@@ -199,5 +199,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestRequest()
+    public function getRequestRequest(): ParameterBag
     {
         return new ParameterBag($this->data['request_request']->getValue());
@@ -207,5 +207,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestQuery()
+    public function getRequestQuery(): ParameterBag
     {
         return new ParameterBag($this->data['request_query']->getValue());
@@ -215,5 +215,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestFiles()
+    public function getRequestFiles(): ParameterBag
     {
         return new ParameterBag($this->data['request_files']->getValue());
@@ -223,5 +223,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestHeaders()
+    public function getRequestHeaders(): ParameterBag
     {
         return new ParameterBag($this->data['request_headers']->getValue());
@@ -231,5 +231,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestServer(bool $raw = false)
+    public function getRequestServer(bool $raw = false): ParameterBag
     {
         return new ParameterBag($this->data['request_server']->getValue($raw));
@@ -239,5 +239,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestCookies(bool $raw = false)
+    public function getRequestCookies(bool $raw = false): ParameterBag
     {
         return new ParameterBag($this->data['request_cookies']->getValue($raw));
@@ -247,5 +247,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getRequestAttributes()
+    public function getRequestAttributes(): ParameterBag
     {
         return new ParameterBag($this->data['request_attributes']->getValue());
@@ -255,5 +255,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getResponseHeaders()
+    public function getResponseHeaders(): ParameterBag
     {
         return new ParameterBag($this->data['response_headers']->getValue());
@@ -263,5 +263,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getResponseCookies()
+    public function getResponseCookies(): ParameterBag
     {
         return new ParameterBag($this->data['response_cookies']->getValue());
@@ -304,5 +304,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return bool
      */
-    public function isJsonRequest()
+    public function isJsonRequest(): bool
     {
         return 1 === preg_match('{^application/(?:\w+\++)*json$}i', $this->data['request_headers']['content-type']);
@@ -312,5 +312,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return string|null
      */
-    public function getPrettyJson()
+    public function getPrettyJson(): ?string
     {
         $decoded = json_decode($this->getContent());
@@ -347,5 +347,5 @@ class RequestDataCollector extends DataCollector implements EventSubscriberInter
      * @return ParameterBag
      */
-    public function getDotenvVars()
+    public function getDotenvVars(): ParameterBag
     {
         return new ParameterBag($this->data['dotenv_vars']->getValue());
diff --git a/src/Symfony/Component/HttpKernel/DataCollector/RouterDataCollector.php b/src/Symfony/Component/HttpKernel/DataCollector/RouterDataCollector.php
--- a/src/Symfony/Component/HttpKernel/DataCollector/RouterDataCollector.php
+++ b/src/Symfony/Component/HttpKernel/DataCollector/RouterDataCollector.php
@@ -52,5 +52,5 @@ class RouterDataCollector extends DataCollector
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->controllers = new \SplObjectStorage();
@@ -66,5 +66,5 @@ class RouterDataCollector extends DataCollector
      * @return string
      */
-    protected function guessRoute(Request $request, string|object|array $controller)
+    protected function guessRoute(Request $request, string|object|array $controller): string
     {
         return 'n/a';
@@ -76,5 +76,5 @@ class RouterDataCollector extends DataCollector
      * @return void
      */
-    public function onKernelController(ControllerEvent $event)
+    public function onKernelController(ControllerEvent $event): void
     {
         $this->controllers[$event->getRequest()] = $event->getController();
diff --git a/src/Symfony/Component/HttpKernel/Debug/FileLinkFormatter.php b/src/Symfony/Component/HttpKernel/Debug/FileLinkFormatter.php
--- a/src/Symfony/Component/HttpKernel/Debug/FileLinkFormatter.php
+++ b/src/Symfony/Component/HttpKernel/Debug/FileLinkFormatter.php
@@ -53,5 +53,5 @@ class FileLinkFormatter
      * @return string|false
      */
-    public function format(string $file, int $line): string|bool
+    public function format(string $file, int $line): string|false
     {
         if ($fmt = $this->getFileLinkFormat()) {
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/AddAnnotatedClassesToCachePass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/AddAnnotatedClassesToCachePass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/AddAnnotatedClassesToCachePass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/AddAnnotatedClassesToCachePass.php
@@ -35,5 +35,5 @@ class AddAnnotatedClassesToCachePass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         $annotatedClasses = [];
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/ConfigurableExtension.php b/src/Symfony/Component/HttpKernel/DependencyInjection/ConfigurableExtension.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/ConfigurableExtension.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/ConfigurableExtension.php
@@ -38,4 +38,4 @@ abstract class ConfigurableExtension extends Extension
      * @return void
      */
-    abstract protected function loadInternal(array $mergedConfig, ContainerBuilder $container);
+    abstract protected function loadInternal(array $mergedConfig, ContainerBuilder $container): void;
 }
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/ControllerArgumentValueResolverPass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/ControllerArgumentValueResolverPass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/ControllerArgumentValueResolverPass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/ControllerArgumentValueResolverPass.php
@@ -34,5 +34,5 @@ class ControllerArgumentValueResolverPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('argument_resolver')) {
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/Extension.php b/src/Symfony/Component/HttpKernel/DependencyInjection/Extension.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/Extension.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/Extension.php
@@ -38,5 +38,5 @@ abstract class Extension extends BaseExtension
      * @return void
      */
-    public function addAnnotatedClassesToCompile(array $annotatedClasses)
+    public function addAnnotatedClassesToCompile(array $annotatedClasses): void
     {
         $this->annotatedClasses = array_merge($this->annotatedClasses, $annotatedClasses);
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/FragmentRendererPass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/FragmentRendererPass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/FragmentRendererPass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/FragmentRendererPass.php
@@ -29,5 +29,5 @@ class FragmentRendererPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('fragment.handler')) {
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/LoggerPass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/LoggerPass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/LoggerPass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/LoggerPass.php
@@ -29,5 +29,5 @@ class LoggerPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         $container->setAlias(LoggerInterface::class, 'logger')
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php
@@ -38,5 +38,5 @@ class RegisterControllerArgumentLocatorsPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('argument_resolver.service') && !$container->hasDefinition('argument_resolver.not_tagged_controller')) {
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterLocaleAwareServicesPass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterLocaleAwareServicesPass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterLocaleAwareServicesPass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/RegisterLocaleAwareServicesPass.php
@@ -27,5 +27,5 @@ class RegisterLocaleAwareServicesPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('locale_aware_listener')) {
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/RemoveEmptyControllerArgumentLocatorsPass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/RemoveEmptyControllerArgumentLocatorsPass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/RemoveEmptyControllerArgumentLocatorsPass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/RemoveEmptyControllerArgumentLocatorsPass.php
@@ -25,5 +25,5 @@ class RemoveEmptyControllerArgumentLocatorsPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         $controllerLocator = $container->findDefinition('argument_resolver.controller_locator');
diff --git a/src/Symfony/Component/HttpKernel/DependencyInjection/ResettableServicePass.php b/src/Symfony/Component/HttpKernel/DependencyInjection/ResettableServicePass.php
--- a/src/Symfony/Component/HttpKernel/DependencyInjection/ResettableServicePass.php
+++ b/src/Symfony/Component/HttpKernel/DependencyInjection/ResettableServicePass.php
@@ -27,5 +27,5 @@ class ResettableServicePass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->has('services_resetter')) {
diff --git a/src/Symfony/Component/HttpKernel/Event/RequestEvent.php b/src/Symfony/Component/HttpKernel/Event/RequestEvent.php
--- a/src/Symfony/Component/HttpKernel/Event/RequestEvent.php
+++ b/src/Symfony/Component/HttpKernel/Event/RequestEvent.php
@@ -40,5 +40,5 @@ class RequestEvent extends KernelEvent
      * @return void
      */
-    public function setResponse(Response $response)
+    public function setResponse(Response $response): void
     {
         $this->response = $response;
diff --git a/src/Symfony/Component/HttpKernel/EventListener/CacheAttributeListener.php b/src/Symfony/Component/HttpKernel/EventListener/CacheAttributeListener.php
--- a/src/Symfony/Component/HttpKernel/EventListener/CacheAttributeListener.php
+++ b/src/Symfony/Component/HttpKernel/EventListener/CacheAttributeListener.php
@@ -50,5 +50,5 @@ class CacheAttributeListener implements EventSubscriberInterface
      * @return void
      */
-    public function onKernelControllerArguments(ControllerArgumentsEvent $event)
+    public function onKernelControllerArguments(ControllerArgumentsEvent $event): void
     {
         $request = $event->getRequest();
@@ -96,5 +96,5 @@ class CacheAttributeListener implements EventSubscriberInterface
      * @return void
      */
-    public function onKernelResponse(ResponseEvent $event)
+    public function onKernelResponse(ResponseEvent $event): void
     {
         $request = $event->getRequest();
diff --git a/src/Symfony/Component/HttpKernel/EventListener/DumpListener.php b/src/Symfony/Component/HttpKernel/EventListener/DumpListener.php
--- a/src/Symfony/Component/HttpKernel/EventListener/DumpListener.php
+++ b/src/Symfony/Component/HttpKernel/EventListener/DumpListener.php
@@ -40,5 +40,5 @@ class DumpListener implements EventSubscriberInterface
      * @return void
      */
-    public function configure()
+    public function configure(): void
     {
         $cloner = $this->cloner;
diff --git a/src/Symfony/Component/HttpKernel/EventListener/ErrorListener.php b/src/Symfony/Component/HttpKernel/EventListener/ErrorListener.php
--- a/src/Symfony/Component/HttpKernel/EventListener/ErrorListener.php
+++ b/src/Symfony/Component/HttpKernel/EventListener/ErrorListener.php
@@ -56,5 +56,5 @@ class ErrorListener implements EventSubscriberInterface
      * @return void
      */
-    public function logKernelException(ExceptionEvent $event)
+    public function logKernelException(ExceptionEvent $event): void
     {
         $throwable = $event->getThrowable();
@@ -97,5 +97,5 @@ class ErrorListener implements EventSubscriberInterface
      * @return void
      */
-    public function onKernelException(ExceptionEvent $event)
+    public function onKernelException(ExceptionEvent $event): void
     {
         if (null === $this->controller) {
@@ -151,5 +151,5 @@ class ErrorListener implements EventSubscriberInterface
      * @return void
      */
-    public function onControllerArguments(ControllerArgumentsEvent $event)
+    public function onControllerArguments(ControllerArgumentsEvent $event): void
     {
         $e = $event->getRequest()->attributes->get('exception');
diff --git a/src/Symfony/Component/HttpKernel/Exception/HttpException.php b/src/Symfony/Component/HttpKernel/Exception/HttpException.php
--- a/src/Symfony/Component/HttpKernel/Exception/HttpException.php
+++ b/src/Symfony/Component/HttpKernel/Exception/HttpException.php
@@ -43,5 +43,5 @@ class HttpException extends \RuntimeException implements HttpExceptionInterface
      * @return void
      */
-    public function setHeaders(array $headers)
+    public function setHeaders(array $headers): void
     {
         $this->headers = $headers;
diff --git a/src/Symfony/Component/HttpKernel/Fragment/FragmentHandler.php b/src/Symfony/Component/HttpKernel/Fragment/FragmentHandler.php
--- a/src/Symfony/Component/HttpKernel/Fragment/FragmentHandler.php
+++ b/src/Symfony/Component/HttpKernel/Fragment/FragmentHandler.php
@@ -52,5 +52,5 @@ class FragmentHandler
      * @return void
      */
-    public function addRenderer(FragmentRendererInterface $renderer)
+    public function addRenderer(FragmentRendererInterface $renderer): void
     {
         $this->renderers[$renderer->getName()] = $renderer;
diff --git a/src/Symfony/Component/HttpKernel/Fragment/InlineFragmentRenderer.php b/src/Symfony/Component/HttpKernel/Fragment/InlineFragmentRenderer.php
--- a/src/Symfony/Component/HttpKernel/Fragment/InlineFragmentRenderer.php
+++ b/src/Symfony/Component/HttpKernel/Fragment/InlineFragmentRenderer.php
@@ -107,5 +107,5 @@ class InlineFragmentRenderer extends RoutableFragmentRenderer
      * @return Request
      */
-    protected function createSubRequest(string $uri, Request $request)
+    protected function createSubRequest(string $uri, Request $request): Request
     {
         $cookies = $request->cookies->all();
diff --git a/src/Symfony/Component/HttpKernel/Fragment/RoutableFragmentRenderer.php b/src/Symfony/Component/HttpKernel/Fragment/RoutableFragmentRenderer.php
--- a/src/Symfony/Component/HttpKernel/Fragment/RoutableFragmentRenderer.php
+++ b/src/Symfony/Component/HttpKernel/Fragment/RoutableFragmentRenderer.php
@@ -35,5 +35,5 @@ abstract class RoutableFragmentRenderer implements FragmentRendererInterface
      * @return void
      */
-    public function setFragmentPath(string $path)
+    public function setFragmentPath(string $path): void
     {
         $this->fragmentPath = $path;
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/AbstractSurrogate.php b/src/Symfony/Component/HttpKernel/HttpCache/AbstractSurrogate.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/AbstractSurrogate.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/AbstractSurrogate.php
@@ -63,5 +63,5 @@ abstract class AbstractSurrogate implements SurrogateInterface
      * @return void
      */
-    public function addSurrogateCapability(Request $request)
+    public function addSurrogateCapability(Request $request): void
     {
         $current = $request->headers->get('Surrogate-Capability');
@@ -112,5 +112,5 @@ abstract class AbstractSurrogate implements SurrogateInterface
      * @return void
      */
-    protected function removeFromControl(Response $response)
+    protected function removeFromControl(Response $response): void
     {
         if (!$response->headers->has('Surrogate-Control')) {
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/Esi.php b/src/Symfony/Component/HttpKernel/HttpCache/Esi.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/Esi.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/Esi.php
@@ -36,5 +36,5 @@ class Esi extends AbstractSurrogate
      * @return void
      */
-    public function addSurrogateControl(Response $response)
+    public function addSurrogateControl(Response $response): void
     {
         if (str_contains($response->getContent(), '<esi:include')) {
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php b/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/HttpCache.php
@@ -246,5 +246,5 @@ class HttpCache implements HttpKernelInterface, TerminableInterface
      * @return void
      */
-    public function terminate(Request $request, Response $response)
+    public function terminate(Request $request, Response $response): void
     {
         // Do not call any listeners in case of a cache hit.
@@ -466,5 +466,5 @@ class HttpCache implements HttpKernelInterface, TerminableInterface
      * @return Response
      */
-    protected function forward(Request $request, bool $catch = false, Response $entry = null)
+    protected function forward(Request $request, bool $catch = false, Response $entry = null): Response
     {
         $this->surrogate?->addSurrogateCapability($request);
@@ -600,5 +600,5 @@ class HttpCache implements HttpKernelInterface, TerminableInterface
      * @throws \Exception
      */
-    protected function store(Request $request, Response $response)
+    protected function store(Request $request, Response $response): void
     {
         try {
@@ -678,5 +678,5 @@ class HttpCache implements HttpKernelInterface, TerminableInterface
      * @return void
      */
-    protected function processResponseBody(Request $request, Response $response)
+    protected function processResponseBody(Request $request, Response $response): void
     {
         if ($this->surrogate?->needsParsing($response)) {
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategy.php b/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategy.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategy.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategy.php
@@ -58,5 +58,5 @@ class ResponseCacheStrategy implements ResponseCacheStrategyInterface
      * @return void
      */
-    public function add(Response $response)
+    public function add(Response $response): void
     {
         ++$this->embeddedResponses;
@@ -102,5 +102,5 @@ class ResponseCacheStrategy implements ResponseCacheStrategyInterface
      * @return void
      */
-    public function update(Response $response)
+    public function update(Response $response): void
     {
         // if we have no embedded Response, do nothing
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategyInterface.php b/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategyInterface.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategyInterface.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/ResponseCacheStrategyInterface.php
@@ -31,5 +31,5 @@ interface ResponseCacheStrategyInterface
      * @return void
      */
-    public function add(Response $response);
+    public function add(Response $response): void;

     /**
@@ -38,4 +38,4 @@ interface ResponseCacheStrategyInterface
      * @return void
      */
-    public function update(Response $response);
+    public function update(Response $response): void;
 }
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/Ssi.php b/src/Symfony/Component/HttpKernel/HttpCache/Ssi.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/Ssi.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/Ssi.php
@@ -30,5 +30,5 @@ class Ssi extends AbstractSurrogate
      * @return void
      */
-    public function addSurrogateControl(Response $response)
+    public function addSurrogateControl(Response $response): void
     {
         if (str_contains($response->getContent(), '<!--#include')) {
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/Store.php b/src/Symfony/Component/HttpKernel/HttpCache/Store.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/Store.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/Store.php
@@ -59,5 +59,5 @@ class Store implements StoreInterface
      * @return void
      */
-    public function cleanup()
+    public function cleanup(): void
     {
         // unlock everything
@@ -254,5 +254,5 @@ class Store implements StoreInterface
      * @throws \RuntimeException
      */
-    public function invalidate(Request $request)
+    public function invalidate(Request $request): void
     {
         $modified = false;
@@ -421,5 +421,5 @@ class Store implements StoreInterface
      * @return string
      */
-    public function getPath(string $key)
+    public function getPath(string $key): string
     {
         return $this->root.\DIRECTORY_SEPARATOR.substr($key, 0, 2).\DIRECTORY_SEPARATOR.substr($key, 2, 2).\DIRECTORY_SEPARATOR.substr($key, 4, 2).\DIRECTORY_SEPARATOR.substr($key, 6);
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/StoreInterface.php b/src/Symfony/Component/HttpKernel/HttpCache/StoreInterface.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/StoreInterface.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/StoreInterface.php
@@ -45,5 +45,5 @@ interface StoreInterface
      * @return void
      */
-    public function invalidate(Request $request);
+    public function invalidate(Request $request): void;

     /**
@@ -80,4 +80,4 @@ interface StoreInterface
      * @return void
      */
-    public function cleanup();
+    public function cleanup(): void;
 }
diff --git a/src/Symfony/Component/HttpKernel/HttpCache/SurrogateInterface.php b/src/Symfony/Component/HttpKernel/HttpCache/SurrogateInterface.php
--- a/src/Symfony/Component/HttpKernel/HttpCache/SurrogateInterface.php
+++ b/src/Symfony/Component/HttpKernel/HttpCache/SurrogateInterface.php
@@ -37,5 +37,5 @@ interface SurrogateInterface
      * @return void
      */
-    public function addSurrogateCapability(Request $request);
+    public function addSurrogateCapability(Request $request): void;

     /**
@@ -46,5 +46,5 @@ interface SurrogateInterface
      * @return void
      */
-    public function addSurrogateControl(Response $response);
+    public function addSurrogateControl(Response $response): void;

     /**
diff --git a/src/Symfony/Component/HttpKernel/HttpKernel.php b/src/Symfony/Component/HttpKernel/HttpKernel.php
--- a/src/Symfony/Component/HttpKernel/HttpKernel.php
+++ b/src/Symfony/Component/HttpKernel/HttpKernel.php
@@ -96,5 +96,5 @@ class HttpKernel implements HttpKernelInterface, TerminableInterface
      * @return void
      */
-    public function terminate(Request $request, Response $response)
+    public function terminate(Request $request, Response $response): void
     {
         $this->dispatcher->dispatch(new TerminateEvent($this, $request, $response), KernelEvents::TERMINATE);
diff --git a/src/Symfony/Component/HttpKernel/HttpKernelBrowser.php b/src/Symfony/Component/HttpKernel/HttpKernelBrowser.php
--- a/src/Symfony/Component/HttpKernel/HttpKernelBrowser.php
+++ b/src/Symfony/Component/HttpKernel/HttpKernelBrowser.php
@@ -51,5 +51,5 @@ class HttpKernelBrowser extends AbstractBrowser
      * @return void
      */
-    public function catchExceptions(bool $catchExceptions)
+    public function catchExceptions(bool $catchExceptions): void
     {
         $this->catchExceptions = $catchExceptions;
@@ -61,5 +61,5 @@ class HttpKernelBrowser extends AbstractBrowser
      * @return Response
      */
-    protected function doRequest(object $request)
+    protected function doRequest(object $request): Response
     {
         $response = $this->kernel->handle($request, HttpKernelInterface::MAIN_REQUEST, $this->catchExceptions);
@@ -77,5 +77,5 @@ class HttpKernelBrowser extends AbstractBrowser
      * @return string
      */
-    protected function getScript(object $request)
+    protected function getScript(object $request): string
     {
         $kernel = var_export(serialize($this->kernel), true);
@@ -116,5 +116,5 @@ EOF;
      * @return string
      */
-    protected function getHandleScript()
+    protected function getHandleScript(): string
     {
         return <<<'EOF'
diff --git a/src/Symfony/Component/HttpKernel/Kernel.php b/src/Symfony/Component/HttpKernel/Kernel.php
--- a/src/Symfony/Component/HttpKernel/Kernel.php
+++ b/src/Symfony/Component/HttpKernel/Kernel.php
@@ -107,5 +107,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    public function boot()
+    public function boot(): void
     {
         if (true === $this->booted) {
@@ -138,5 +138,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    public function reboot(?string $warmupDir)
+    public function reboot(?string $warmupDir): void
     {
         $this->shutdown();
@@ -148,5 +148,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    public function terminate(Request $request, Response $response)
+    public function terminate(Request $request, Response $response): void
     {
         if (false === $this->booted) {
@@ -162,5 +162,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    public function shutdown()
+    public function shutdown(): void
     {
         if (false === $this->booted) {
@@ -340,5 +340,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @throws \LogicException if two bundles share a common name
      */
-    protected function initializeBundles()
+    protected function initializeBundles(): void
     {
         // init bundles
@@ -360,5 +360,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    protected function build(ContainerBuilder $container)
+    protected function build(ContainerBuilder $container): void
     {
     }
@@ -400,5 +400,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    protected function initializeContainer()
+    protected function initializeContainer(): void
     {
         $class = $this->getContainerClass();
@@ -614,5 +614,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    protected function prepareContainer(ContainerBuilder $container)
+    protected function prepareContainer(ContainerBuilder $container): void
     {
         $extensions = [];
@@ -667,5 +667,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    protected function dumpContainer(ConfigCache $cache, ContainerBuilder $container, string $class, string $baseClass)
+    protected function dumpContainer(ConfigCache $cache, ContainerBuilder $container, string $class, string $baseClass): void
     {
         // cache the container
@@ -839,5 +839,5 @@ abstract class Kernel implements KernelInterface, RebootableInterface, Terminabl
      * @return void
      */
-    public function __wakeup()
+    public function __wakeup(): void
     {
         if (\is_object($this->environment) || \is_object($this->debug)) {
diff --git a/src/Symfony/Component/HttpKernel/KernelInterface.php b/src/Symfony/Component/HttpKernel/KernelInterface.php
--- a/src/Symfony/Component/HttpKernel/KernelInterface.php
+++ b/src/Symfony/Component/HttpKernel/KernelInterface.php
@@ -37,5 +37,5 @@ interface KernelInterface extends HttpKernelInterface
      * @return void
      */
-    public function registerContainerConfiguration(LoaderInterface $loader);
+    public function registerContainerConfiguration(LoaderInterface $loader): void;

     /**
@@ -44,5 +44,5 @@ interface KernelInterface extends HttpKernelInterface
      * @return void
      */
-    public function boot();
+    public function boot(): void;

     /**
@@ -53,5 +53,5 @@ interface KernelInterface extends HttpKernelInterface
      * @return void
      */
-    public function shutdown();
+    public function shutdown(): void;

     /**
diff --git a/src/Symfony/Component/Routing/Loader/AnnotationClassLoader.php b/src/Symfony/Component/Routing/Loader/AnnotationClassLoader.php
--- a/src/Symfony/Component/Routing/Loader/AnnotationClassLoader.php
+++ b/src/Symfony/Component/Routing/Loader/AnnotationClassLoader.php
@@ -324,5 +324,5 @@ abstract class AnnotationClassLoader implements LoaderInterface
      * @return void
      */
-    abstract protected function configureRoute(Route $route, \ReflectionClass $class, \ReflectionMethod $method, object $annot);
+    abstract protected function configureRoute(Route $route, \ReflectionClass $class, \ReflectionMethod $method, object $annot): void;

     /**
diff --git a/src/Symfony/Component/Security/Core/Authentication/RememberMe/InMemoryTokenProvider.php b/src/Symfony/Component/Security/Core/Authentication/RememberMe/InMemoryTokenProvider.php
--- a/src/Symfony/Component/Security/Core/Authentication/RememberMe/InMemoryTokenProvider.php
+++ b/src/Symfony/Component/Security/Core/Authentication/RememberMe/InMemoryTokenProvider.php
@@ -32,5 +32,5 @@ final class InMemoryTokenProvider implements TokenProviderInterface
     }

-    public function updateToken(string $series, #[\SensitiveParameter] string $tokenValue, \DateTimeInterface $lastUsed)
+    public function updateToken(string $series, #[\SensitiveParameter] string $tokenValue, \DateTimeInterface $lastUsed): void
     {
         if (!isset($this->tokens[$series])) {
diff --git a/src/Symfony/Component/Security/Core/Authentication/RememberMe/TokenProviderInterface.php b/src/Symfony/Component/Security/Core/Authentication/RememberMe/TokenProviderInterface.php
--- a/src/Symfony/Component/Security/Core/Authentication/RememberMe/TokenProviderInterface.php
+++ b/src/Symfony/Component/Security/Core/Authentication/RememberMe/TokenProviderInterface.php
@@ -28,5 +28,5 @@ interface TokenProviderInterface
      * @throws TokenNotFoundException if the token is not found
      */
-    public function loadTokenBySeries(string $series);
+    public function loadTokenBySeries(string $series): PersistentTokenInterface;

     /**
@@ -35,5 +35,5 @@ interface TokenProviderInterface
      * @return void
      */
-    public function deleteTokenBySeries(string $series);
+    public function deleteTokenBySeries(string $series): void;

     /**
@@ -46,5 +46,5 @@ interface TokenProviderInterface
      * @throws TokenNotFoundException if the token is not found
      */
-    public function updateToken(string $series, #[\SensitiveParameter] string $tokenValue, \DateTime $lastUsed);
+    public function updateToken(string $series, #[\SensitiveParameter] string $tokenValue, \DateTime $lastUsed): void;

     /**
@@ -53,4 +53,4 @@ interface TokenProviderInterface
      * @return void
      */
-    public function createNewToken(PersistentTokenInterface $token);
+    public function createNewToken(PersistentTokenInterface $token): void;
 }
diff --git a/src/Symfony/Component/Security/Http/Firewall.php b/src/Symfony/Component/Security/Http/Firewall.php
--- a/src/Symfony/Component/Security/Http/Firewall.php
+++ b/src/Symfony/Component/Security/Http/Firewall.php
@@ -51,5 +51,5 @@ class Firewall implements EventSubscriberInterface
      * @return void
      */
-    public function onKernelRequest(RequestEvent $event)
+    public function onKernelRequest(RequestEvent $event): void
     {
         if (!$event->isMainRequest()) {
@@ -99,5 +99,5 @@ class Firewall implements EventSubscriberInterface
      * @return void
      */
-    public function onKernelFinishRequest(FinishRequestEvent $event)
+    public function onKernelFinishRequest(FinishRequestEvent $event): void
     {
         $request = $event->getRequest();
@@ -112,5 +112,5 @@ class Firewall implements EventSubscriberInterface
      * @return array
      */
-    public static function getSubscribedEvents()
+    public static function getSubscribedEvents(): array
     {
         return [
@@ -123,5 +123,5 @@ class Firewall implements EventSubscriberInterface
      * @return void
      */
-    protected function callListeners(RequestEvent $event, iterable $listeners)
+    protected function callListeners(RequestEvent $event, iterable $listeners): void
     {
         foreach ($listeners as $listener) {
diff --git a/src/Symfony/Component/Translation/Extractor/ExtractorInterface.php b/src/Symfony/Component/Translation/Extractor/ExtractorInterface.php
--- a/src/Symfony/Component/Translation/Extractor/ExtractorInterface.php
+++ b/src/Symfony/Component/Translation/Extractor/ExtractorInterface.php
@@ -29,5 +29,5 @@ interface ExtractorInterface
      * @return void
      */
-    public function extract(string|iterable $resource, MessageCatalogue $catalogue);
+    public function extract(string|iterable $resource, MessageCatalogue $catalogue): void;

     /**
@@ -36,4 +36,4 @@ interface ExtractorInterface
      * @return void
      */
-    public function setPrefix(string $prefix);
+    public function setPrefix(string $prefix): void;
 }
diff --git a/src/Symfony/Component/Validator/ConstraintValidatorInterface.php b/src/Symfony/Component/Validator/ConstraintValidatorInterface.php
--- a/src/Symfony/Component/Validator/ConstraintValidatorInterface.php
+++ b/src/Symfony/Component/Validator/ConstraintValidatorInterface.php
@@ -24,5 +24,5 @@ interface ConstraintValidatorInterface
      * @return void
      */
-    public function initialize(ExecutionContextInterface $context);
+    public function initialize(ExecutionContextInterface $context): void;

     /**
@@ -31,4 +31,4 @@ interface ConstraintValidatorInterface
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint);
+    public function validate(mixed $value, Constraint $constraint): void;
 }
diff --git a/src/Symfony/Component/Validator/ConstraintViolationList.php b/src/Symfony/Component/Validator/ConstraintViolationList.php
--- a/src/Symfony/Component/Validator/ConstraintViolationList.php
+++ b/src/Symfony/Component/Validator/ConstraintViolationList.php
@@ -62,5 +62,5 @@ class ConstraintViolationList implements \IteratorAggregate, ConstraintViolation
      * @return void
      */
-    public function add(ConstraintViolationInterface $violation)
+    public function add(ConstraintViolationInterface $violation): void
     {
         $this->violations[] = $violation;
@@ -70,5 +70,5 @@ class ConstraintViolationList implements \IteratorAggregate, ConstraintViolation
      * @return void
      */
-    public function addAll(ConstraintViolationListInterface $otherList)
+    public function addAll(ConstraintViolationListInterface $otherList): void
     {
         foreach ($otherList as $violation) {
@@ -94,5 +94,5 @@ class ConstraintViolationList implements \IteratorAggregate, ConstraintViolation
      * @return void
      */
-    public function set(int $offset, ConstraintViolationInterface $violation)
+    public function set(int $offset, ConstraintViolationInterface $violation): void
     {
         $this->violations[$offset] = $violation;
@@ -102,5 +102,5 @@ class ConstraintViolationList implements \IteratorAggregate, ConstraintViolation
      * @return void
      */
-    public function remove(int $offset)
+    public function remove(int $offset): void
     {
         unset($this->violations[$offset]);
diff --git a/src/Symfony/Component/Validator/ConstraintViolationListInterface.php b/src/Symfony/Component/Validator/ConstraintViolationListInterface.php
--- a/src/Symfony/Component/Validator/ConstraintViolationListInterface.php
+++ b/src/Symfony/Component/Validator/ConstraintViolationListInterface.php
@@ -31,5 +31,5 @@ interface ConstraintViolationListInterface extends \Traversable, \Countable, \Ar
      * @return void
      */
-    public function add(ConstraintViolationInterface $violation);
+    public function add(ConstraintViolationInterface $violation): void;

     /**
@@ -38,5 +38,5 @@ interface ConstraintViolationListInterface extends \Traversable, \Countable, \Ar
      * @return void
      */
-    public function addAll(self $otherList);
+    public function addAll(self $otherList): void;

     /**
@@ -63,5 +63,5 @@ interface ConstraintViolationListInterface extends \Traversable, \Countable, \Ar
      * @return void
      */
-    public function set(int $offset, ConstraintViolationInterface $violation);
+    public function set(int $offset, ConstraintViolationInterface $violation): void;

     /**
@@ -72,4 +72,4 @@ interface ConstraintViolationListInterface extends \Traversable, \Countable, \Ar
      * @return void
      */
-    public function remove(int $offset);
+    public function remove(int $offset): void;
 }
diff --git a/src/Symfony/Component/Validator/Constraints/AbstractComparisonValidator.php b/src/Symfony/Component/Validator/Constraints/AbstractComparisonValidator.php
--- a/src/Symfony/Component/Validator/Constraints/AbstractComparisonValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/AbstractComparisonValidator.php
@@ -38,5 +38,5 @@ abstract class AbstractComparisonValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof AbstractComparison) {
diff --git a/src/Symfony/Component/Validator/Constraints/AllValidator.php b/src/Symfony/Component/Validator/Constraints/AllValidator.php
--- a/src/Symfony/Component/Validator/Constraints/AllValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/AllValidator.php
@@ -25,5 +25,5 @@ class AllValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof All) {
diff --git a/src/Symfony/Component/Validator/Constraints/AtLeastOneOfValidator.php b/src/Symfony/Component/Validator/Constraints/AtLeastOneOfValidator.php
--- a/src/Symfony/Component/Validator/Constraints/AtLeastOneOfValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/AtLeastOneOfValidator.php
@@ -24,5 +24,5 @@ class AtLeastOneOfValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof AtLeastOneOf) {
diff --git a/src/Symfony/Component/Validator/Constraints/BicValidator.php b/src/Symfony/Component/Validator/Constraints/BicValidator.php
--- a/src/Symfony/Component/Validator/Constraints/BicValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/BicValidator.php
@@ -67,5 +67,5 @@ class BicValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Bic) {
diff --git a/src/Symfony/Component/Validator/Constraints/BlankValidator.php b/src/Symfony/Component/Validator/Constraints/BlankValidator.php
--- a/src/Symfony/Component/Validator/Constraints/BlankValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/BlankValidator.php
@@ -24,5 +24,5 @@ class BlankValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Blank) {
diff --git a/src/Symfony/Component/Validator/Constraints/CallbackValidator.php b/src/Symfony/Component/Validator/Constraints/CallbackValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CallbackValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CallbackValidator.php
@@ -27,5 +27,5 @@ class CallbackValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $object, Constraint $constraint)
+    public function validate(mixed $object, Constraint $constraint): void
     {
         if (!$constraint instanceof Callback) {
diff --git a/src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php b/src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CardSchemeValidator.php
@@ -97,5 +97,5 @@ class CardSchemeValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof CardScheme) {
diff --git a/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php b/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php
--- a/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/ChoiceValidator.php
@@ -31,5 +31,5 @@ class ChoiceValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Choice) {
diff --git a/src/Symfony/Component/Validator/Constraints/Collection.php b/src/Symfony/Component/Validator/Constraints/Collection.php
--- a/src/Symfony/Component/Validator/Constraints/Collection.php
+++ b/src/Symfony/Component/Validator/Constraints/Collection.php
@@ -61,5 +61,5 @@ class Collection extends Composite
      * @return void
      */
-    protected function initializeNestedConstraints()
+    protected function initializeNestedConstraints(): void
     {
         parent::initializeNestedConstraints();
diff --git a/src/Symfony/Component/Validator/Constraints/CollectionValidator.php b/src/Symfony/Component/Validator/Constraints/CollectionValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CollectionValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CollectionValidator.php
@@ -25,5 +25,5 @@ class CollectionValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Collection) {
diff --git a/src/Symfony/Component/Validator/Constraints/Composite.php b/src/Symfony/Component/Validator/Constraints/Composite.php
--- a/src/Symfony/Component/Validator/Constraints/Composite.php
+++ b/src/Symfony/Component/Validator/Constraints/Composite.php
@@ -114,5 +114,5 @@ abstract class Composite extends Constraint
      * @return void
      */
-    public function addImplicitGroupName(string $group)
+    public function addImplicitGroupName(string $group): void
     {
         parent::addImplicitGroupName($group);
@@ -152,5 +152,5 @@ abstract class Composite extends Constraint
      * @return void
      */
-    protected function initializeNestedConstraints()
+    protected function initializeNestedConstraints(): void
     {
     }
diff --git a/src/Symfony/Component/Validator/Constraints/CompoundValidator.php b/src/Symfony/Component/Validator/Constraints/CompoundValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CompoundValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CompoundValidator.php
@@ -24,5 +24,5 @@ class CompoundValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Compound) {
diff --git a/src/Symfony/Component/Validator/Constraints/CountValidator.php b/src/Symfony/Component/Validator/Constraints/CountValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CountValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CountValidator.php
@@ -25,5 +25,5 @@ class CountValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Count) {
diff --git a/src/Symfony/Component/Validator/Constraints/CountryValidator.php b/src/Symfony/Component/Validator/Constraints/CountryValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CountryValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CountryValidator.php
@@ -28,5 +28,5 @@ class CountryValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Country) {
diff --git a/src/Symfony/Component/Validator/Constraints/CurrencyValidator.php b/src/Symfony/Component/Validator/Constraints/CurrencyValidator.php
--- a/src/Symfony/Component/Validator/Constraints/CurrencyValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/CurrencyValidator.php
@@ -29,5 +29,5 @@ class CurrencyValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Currency) {
diff --git a/src/Symfony/Component/Validator/Constraints/DateTimeValidator.php b/src/Symfony/Component/Validator/Constraints/DateTimeValidator.php
--- a/src/Symfony/Component/Validator/Constraints/DateTimeValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/DateTimeValidator.php
@@ -25,5 +25,5 @@ class DateTimeValidator extends DateValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof DateTime) {
diff --git a/src/Symfony/Component/Validator/Constraints/DateValidator.php b/src/Symfony/Component/Validator/Constraints/DateValidator.php
--- a/src/Symfony/Component/Validator/Constraints/DateValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/DateValidator.php
@@ -37,5 +37,5 @@ class DateValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Date) {
diff --git a/src/Symfony/Component/Validator/Constraints/EmailValidator.php b/src/Symfony/Component/Validator/Constraints/EmailValidator.php
--- a/src/Symfony/Component/Validator/Constraints/EmailValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/EmailValidator.php
@@ -55,5 +55,5 @@ class EmailValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Email) {
diff --git a/src/Symfony/Component/Validator/Constraints/ExpressionValidator.php b/src/Symfony/Component/Validator/Constraints/ExpressionValidator.php
--- a/src/Symfony/Component/Validator/Constraints/ExpressionValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/ExpressionValidator.php
@@ -33,5 +33,5 @@ class ExpressionValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Expression) {
diff --git a/src/Symfony/Component/Validator/Constraints/File.php b/src/Symfony/Component/Validator/Constraints/File.php
--- a/src/Symfony/Component/Validator/Constraints/File.php
+++ b/src/Symfony/Component/Validator/Constraints/File.php
@@ -134,5 +134,5 @@ class File extends Constraint
      * @return void
      */
-    public function __set(string $option, mixed $value)
+    public function __set(string $option, mixed $value): void
     {
         if ('maxSize' === $option) {
diff --git a/src/Symfony/Component/Validator/Constraints/FileValidator.php b/src/Symfony/Component/Validator/Constraints/FileValidator.php
--- a/src/Symfony/Component/Validator/Constraints/FileValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/FileValidator.php
@@ -42,5 +42,5 @@ class FileValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof File) {
diff --git a/src/Symfony/Component/Validator/Constraints/HostnameValidator.php b/src/Symfony/Component/Validator/Constraints/HostnameValidator.php
--- a/src/Symfony/Component/Validator/Constraints/HostnameValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/HostnameValidator.php
@@ -35,5 +35,5 @@ class HostnameValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Hostname) {
diff --git a/src/Symfony/Component/Validator/Constraints/IbanValidator.php b/src/Symfony/Component/Validator/Constraints/IbanValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IbanValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IbanValidator.php
@@ -167,5 +167,5 @@ class IbanValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Iban) {
diff --git a/src/Symfony/Component/Validator/Constraints/ImageValidator.php b/src/Symfony/Component/Validator/Constraints/ImageValidator.php
--- a/src/Symfony/Component/Validator/Constraints/ImageValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/ImageValidator.php
@@ -29,5 +29,5 @@ class ImageValidator extends FileValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Image) {
diff --git a/src/Symfony/Component/Validator/Constraints/IpValidator.php b/src/Symfony/Component/Validator/Constraints/IpValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IpValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IpValidator.php
@@ -28,5 +28,5 @@ class IpValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Ip) {
diff --git a/src/Symfony/Component/Validator/Constraints/IsFalseValidator.php b/src/Symfony/Component/Validator/Constraints/IsFalseValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IsFalseValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IsFalseValidator.php
@@ -24,5 +24,5 @@ class IsFalseValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof IsFalse) {
diff --git a/src/Symfony/Component/Validator/Constraints/IsNullValidator.php b/src/Symfony/Component/Validator/Constraints/IsNullValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IsNullValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IsNullValidator.php
@@ -24,5 +24,5 @@ class IsNullValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof IsNull) {
diff --git a/src/Symfony/Component/Validator/Constraints/IsTrueValidator.php b/src/Symfony/Component/Validator/Constraints/IsTrueValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IsTrueValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IsTrueValidator.php
@@ -24,5 +24,5 @@ class IsTrueValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof IsTrue) {
diff --git a/src/Symfony/Component/Validator/Constraints/IsbnValidator.php b/src/Symfony/Component/Validator/Constraints/IsbnValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IsbnValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IsbnValidator.php
@@ -31,5 +31,5 @@ class IsbnValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Isbn) {
@@ -99,5 +99,5 @@ class IsbnValidator extends ConstraintValidator
      * @return string|bool
      */
-    protected function validateIsbn10(string $isbn)
+    protected function validateIsbn10(string $isbn): string|bool
     {
         // Choose an algorithm so that ERROR_INVALID_CHARACTERS is preferred
@@ -142,5 +142,5 @@ class IsbnValidator extends ConstraintValidator
      * @return string|bool
      */
-    protected function validateIsbn13(string $isbn)
+    protected function validateIsbn13(string $isbn): string|bool
     {
         // Error priority:
@@ -179,5 +179,5 @@ class IsbnValidator extends ConstraintValidator
      * @return string
      */
-    protected function getMessage(Isbn $constraint, string $type = null)
+    protected function getMessage(Isbn $constraint, string $type = null): string
     {
         if (null !== $constraint->message) {
diff --git a/src/Symfony/Component/Validator/Constraints/IsinValidator.php b/src/Symfony/Component/Validator/Constraints/IsinValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IsinValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IsinValidator.php
@@ -27,5 +27,5 @@ class IsinValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Isin) {
diff --git a/src/Symfony/Component/Validator/Constraints/IssnValidator.php b/src/Symfony/Component/Validator/Constraints/IssnValidator.php
--- a/src/Symfony/Component/Validator/Constraints/IssnValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/IssnValidator.php
@@ -30,5 +30,5 @@ class IssnValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Issn) {
diff --git a/src/Symfony/Component/Validator/Constraints/JsonValidator.php b/src/Symfony/Component/Validator/Constraints/JsonValidator.php
--- a/src/Symfony/Component/Validator/Constraints/JsonValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/JsonValidator.php
@@ -24,5 +24,5 @@ class JsonValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Json) {
diff --git a/src/Symfony/Component/Validator/Constraints/LanguageValidator.php b/src/Symfony/Component/Validator/Constraints/LanguageValidator.php
--- a/src/Symfony/Component/Validator/Constraints/LanguageValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/LanguageValidator.php
@@ -28,5 +28,5 @@ class LanguageValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Language) {
diff --git a/src/Symfony/Component/Validator/Constraints/LengthValidator.php b/src/Symfony/Component/Validator/Constraints/LengthValidator.php
--- a/src/Symfony/Component/Validator/Constraints/LengthValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/LengthValidator.php
@@ -25,5 +25,5 @@ class LengthValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Length) {
diff --git a/src/Symfony/Component/Validator/Constraints/LocaleValidator.php b/src/Symfony/Component/Validator/Constraints/LocaleValidator.php
--- a/src/Symfony/Component/Validator/Constraints/LocaleValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/LocaleValidator.php
@@ -28,5 +28,5 @@ class LocaleValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Locale) {
diff --git a/src/Symfony/Component/Validator/Constraints/LuhnValidator.php b/src/Symfony/Component/Validator/Constraints/LuhnValidator.php
--- a/src/Symfony/Component/Validator/Constraints/LuhnValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/LuhnValidator.php
@@ -34,5 +34,5 @@ class LuhnValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Luhn) {
diff --git a/src/Symfony/Component/Validator/Constraints/NoSuspiciousCharactersValidator.php b/src/Symfony/Component/Validator/Constraints/NoSuspiciousCharactersValidator.php
--- a/src/Symfony/Component/Validator/Constraints/NoSuspiciousCharactersValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/NoSuspiciousCharactersValidator.php
@@ -60,5 +60,5 @@ class NoSuspiciousCharactersValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof NoSuspiciousCharacters) {
diff --git a/src/Symfony/Component/Validator/Constraints/NotBlankValidator.php b/src/Symfony/Component/Validator/Constraints/NotBlankValidator.php
--- a/src/Symfony/Component/Validator/Constraints/NotBlankValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/NotBlankValidator.php
@@ -25,5 +25,5 @@ class NotBlankValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof NotBlank) {
diff --git a/src/Symfony/Component/Validator/Constraints/NotCompromisedPasswordValidator.php b/src/Symfony/Component/Validator/Constraints/NotCompromisedPasswordValidator.php
--- a/src/Symfony/Component/Validator/Constraints/NotCompromisedPasswordValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/NotCompromisedPasswordValidator.php
@@ -55,5 +55,5 @@ class NotCompromisedPasswordValidator extends ConstraintValidator
      * @throws ExceptionInterface
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof NotCompromisedPassword) {
diff --git a/src/Symfony/Component/Validator/Constraints/NotNullValidator.php b/src/Symfony/Component/Validator/Constraints/NotNullValidator.php
--- a/src/Symfony/Component/Validator/Constraints/NotNullValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/NotNullValidator.php
@@ -24,5 +24,5 @@ class NotNullValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof NotNull) {
diff --git a/src/Symfony/Component/Validator/Constraints/RangeValidator.php b/src/Symfony/Component/Validator/Constraints/RangeValidator.php
--- a/src/Symfony/Component/Validator/Constraints/RangeValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/RangeValidator.php
@@ -35,5 +35,5 @@ class RangeValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Range) {
diff --git a/src/Symfony/Component/Validator/Constraints/RegexValidator.php b/src/Symfony/Component/Validator/Constraints/RegexValidator.php
--- a/src/Symfony/Component/Validator/Constraints/RegexValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/RegexValidator.php
@@ -28,5 +28,5 @@ class RegexValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Regex) {
diff --git a/src/Symfony/Component/Validator/Constraints/SequentiallyValidator.php b/src/Symfony/Component/Validator/Constraints/SequentiallyValidator.php
--- a/src/Symfony/Component/Validator/Constraints/SequentiallyValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/SequentiallyValidator.php
@@ -24,5 +24,5 @@ class SequentiallyValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Sequentially) {
diff --git a/src/Symfony/Component/Validator/Constraints/TimeValidator.php b/src/Symfony/Component/Validator/Constraints/TimeValidator.php
--- a/src/Symfony/Component/Validator/Constraints/TimeValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/TimeValidator.php
@@ -38,5 +38,5 @@ class TimeValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Time) {
diff --git a/src/Symfony/Component/Validator/Constraints/TimezoneValidator.php b/src/Symfony/Component/Validator/Constraints/TimezoneValidator.php
--- a/src/Symfony/Component/Validator/Constraints/TimezoneValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/TimezoneValidator.php
@@ -30,5 +30,5 @@ class TimezoneValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Timezone) {
diff --git a/src/Symfony/Component/Validator/Constraints/TypeValidator.php b/src/Symfony/Component/Validator/Constraints/TypeValidator.php
--- a/src/Symfony/Component/Validator/Constraints/TypeValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/TypeValidator.php
@@ -59,5 +59,5 @@ class TypeValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Type) {
diff --git a/src/Symfony/Component/Validator/Constraints/UlidValidator.php b/src/Symfony/Component/Validator/Constraints/UlidValidator.php
--- a/src/Symfony/Component/Validator/Constraints/UlidValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/UlidValidator.php
@@ -28,5 +28,5 @@ class UlidValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Ulid) {
diff --git a/src/Symfony/Component/Validator/Constraints/UniqueValidator.php b/src/Symfony/Component/Validator/Constraints/UniqueValidator.php
--- a/src/Symfony/Component/Validator/Constraints/UniqueValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/UniqueValidator.php
@@ -25,5 +25,5 @@ class UniqueValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Unique) {
diff --git a/src/Symfony/Component/Validator/Constraints/UrlValidator.php b/src/Symfony/Component/Validator/Constraints/UrlValidator.php
--- a/src/Symfony/Component/Validator/Constraints/UrlValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/UrlValidator.php
@@ -49,5 +49,5 @@ class UrlValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Url) {
diff --git a/src/Symfony/Component/Validator/Constraints/UuidValidator.php b/src/Symfony/Component/Validator/Constraints/UuidValidator.php
--- a/src/Symfony/Component/Validator/Constraints/UuidValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/UuidValidator.php
@@ -63,5 +63,5 @@ class UuidValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Uuid) {
diff --git a/src/Symfony/Component/Validator/Constraints/Valid.php b/src/Symfony/Component/Validator/Constraints/Valid.php
--- a/src/Symfony/Component/Validator/Constraints/Valid.php
+++ b/src/Symfony/Component/Validator/Constraints/Valid.php
@@ -45,5 +45,5 @@ class Valid extends Constraint
      * @return void
      */
-    public function addImplicitGroupName(string $group)
+    public function addImplicitGroupName(string $group): void
     {
         if (null !== $this->groups) {
diff --git a/src/Symfony/Component/Validator/Constraints/ValidValidator.php b/src/Symfony/Component/Validator/Constraints/ValidValidator.php
--- a/src/Symfony/Component/Validator/Constraints/ValidValidator.php
+++ b/src/Symfony/Component/Validator/Constraints/ValidValidator.php
@@ -24,5 +24,5 @@ class ValidValidator extends ConstraintValidator
      * @return void
      */
-    public function validate(mixed $value, Constraint $constraint)
+    public function validate(mixed $value, Constraint $constraint): void
     {
         if (!$constraint instanceof Valid) {
diff --git a/src/Symfony/Component/Validator/Context/ExecutionContextInterface.php b/src/Symfony/Component/Validator/Context/ExecutionContextInterface.php
--- a/src/Symfony/Component/Validator/Context/ExecutionContextInterface.php
+++ b/src/Symfony/Component/Validator/Context/ExecutionContextInterface.php
@@ -70,5 +70,5 @@ interface ExecutionContextInterface
      * @return void
      */
-    public function addViolation(string $message, array $params = []);
+    public function addViolation(string $message, array $params = []): void;

     /**
@@ -127,5 +127,5 @@ interface ExecutionContextInterface
      * @return void
      */
-    public function setNode(mixed $value, ?object $object, MetadataInterface $metadata = null, string $propertyPath);
+    public function setNode(mixed $value, ?object $object, MetadataInterface $metadata = null, string $propertyPath): void;

     /**
@@ -136,5 +136,5 @@ interface ExecutionContextInterface
      * @return void
      */
-    public function setGroup(?string $group);
+    public function setGroup(?string $group): void;

     /**
@@ -143,5 +143,5 @@ interface ExecutionContextInterface
      * @return void
      */
-    public function setConstraint(Constraint $constraint);
+    public function setConstraint(Constraint $constraint): void;

     /**
@@ -154,5 +154,5 @@ interface ExecutionContextInterface
      * @return void
      */
-    public function markGroupAsValidated(string $cacheKey, string $groupHash);
+    public function markGroupAsValidated(string $cacheKey, string $groupHash): void;

     /**
@@ -173,5 +173,5 @@ interface ExecutionContextInterface
      * @return void
      */
-    public function markConstraintAsValidated(string $cacheKey, string $constraintHash);
+    public function markConstraintAsValidated(string $cacheKey, string $constraintHash): void;

     /**
diff --git a/src/Symfony/Component/Validator/DependencyInjection/AddAutoMappingConfigurationPass.php b/src/Symfony/Component/Validator/DependencyInjection/AddAutoMappingConfigurationPass.php
--- a/src/Symfony/Component/Validator/DependencyInjection/AddAutoMappingConfigurationPass.php
+++ b/src/Symfony/Component/Validator/DependencyInjection/AddAutoMappingConfigurationPass.php
@@ -26,5 +26,5 @@ class AddAutoMappingConfigurationPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasParameter('validator.auto_mapping') || !$container->hasDefinition('validator.builder')) {
diff --git a/src/Symfony/Component/Validator/DependencyInjection/AddConstraintValidatorsPass.php b/src/Symfony/Component/Validator/DependencyInjection/AddConstraintValidatorsPass.php
--- a/src/Symfony/Component/Validator/DependencyInjection/AddConstraintValidatorsPass.php
+++ b/src/Symfony/Component/Validator/DependencyInjection/AddConstraintValidatorsPass.php
@@ -26,5 +26,5 @@ class AddConstraintValidatorsPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('validator.validator_factory')) {
diff --git a/src/Symfony/Component/Validator/DependencyInjection/AddValidatorInitializersPass.php b/src/Symfony/Component/Validator/DependencyInjection/AddValidatorInitializersPass.php
--- a/src/Symfony/Component/Validator/DependencyInjection/AddValidatorInitializersPass.php
+++ b/src/Symfony/Component/Validator/DependencyInjection/AddValidatorInitializersPass.php
@@ -25,5 +25,5 @@ class AddValidatorInitializersPass implements CompilerPassInterface
      * @return void
      */
-    public function process(ContainerBuilder $container)
+    public function process(ContainerBuilder $container): void
     {
         if (!$container->hasDefinition('validator.builder')) {
diff --git a/src/Symfony/Component/Validator/Exception/InvalidOptionsException.php b/src/Symfony/Component/Validator/Exception/InvalidOptionsException.php
--- a/src/Symfony/Component/Validator/Exception/InvalidOptionsException.php
+++ b/src/Symfony/Component/Validator/Exception/InvalidOptionsException.php
@@ -26,5 +26,5 @@ class InvalidOptionsException extends ValidatorException
      * @return array
      */
-    public function getOptions()
+    public function getOptions(): array
     {
         return $this->options;
diff --git a/src/Symfony/Component/Validator/Exception/MissingOptionsException.php b/src/Symfony/Component/Validator/Exception/MissingOptionsException.php
--- a/src/Symfony/Component/Validator/Exception/MissingOptionsException.php
+++ b/src/Symfony/Component/Validator/Exception/MissingOptionsException.php
@@ -26,5 +26,5 @@ class MissingOptionsException extends ValidatorException
      * @return array
      */
-    public function getOptions()
+    public function getOptions(): array
     {
         return $this->options;
diff --git a/src/Symfony/Component/Validator/Exception/ValidationFailedException.php b/src/Symfony/Component/Validator/Exception/ValidationFailedException.php
--- a/src/Symfony/Component/Validator/Exception/ValidationFailedException.php
+++ b/src/Symfony/Component/Validator/Exception/ValidationFailedException.php
@@ -32,5 +32,5 @@ class ValidationFailedException extends RuntimeException
      * @return mixed
      */
-    public function getValue()
+    public function getValue(): mixed
     {
         return $this->value;
diff --git a/src/Symfony/Component/Validator/Mapping/ClassMetadata.php b/src/Symfony/Component/Validator/Mapping/ClassMetadata.php
--- a/src/Symfony/Component/Validator/Mapping/ClassMetadata.php
+++ b/src/Symfony/Component/Validator/Mapping/ClassMetadata.php
@@ -317,5 +317,5 @@ class ClassMetadata extends GenericMetadata implements ClassMetadataInterface
      * @return void
      */
-    public function mergeConstraints(self $source)
+    public function mergeConstraints(self $source): void
     {
         if ($source->isGroupSequenceProvider()) {
@@ -427,5 +427,5 @@ class ClassMetadata extends GenericMetadata implements ClassMetadataInterface
      * @throws GroupDefinitionException
      */
-    public function setGroupSequenceProvider(bool $active)
+    public function setGroupSequenceProvider(bool $active): void
     {
         if ($this->hasGroupSequence()) {
diff --git a/src/Symfony/Component/Validator/Mapping/Loader/AbstractLoader.php b/src/Symfony/Component/Validator/Mapping/Loader/AbstractLoader.php
--- a/src/Symfony/Component/Validator/Mapping/Loader/AbstractLoader.php
+++ b/src/Symfony/Component/Validator/Mapping/Loader/AbstractLoader.php
@@ -53,5 +53,5 @@ abstract class AbstractLoader implements LoaderInterface
      * @return void
      */
-    protected function addNamespaceAlias(string $alias, string $namespace)
+    protected function addNamespaceAlias(string $alias, string $namespace): void
     {
         $this->namespaces[$alias] = $namespace;
diff --git a/src/Symfony/Component/Validator/Mapping/MemberMetadata.php b/src/Symfony/Component/Validator/Mapping/MemberMetadata.php
--- a/src/Symfony/Component/Validator/Mapping/MemberMetadata.php
+++ b/src/Symfony/Component/Validator/Mapping/MemberMetadata.php
@@ -97,5 +97,5 @@ abstract class MemberMetadata extends GenericMetadata implements PropertyMetadat
      * @return string
      */
-    public function getClassName()
+    public function getClassName(): string
     {
         return $this->class;
diff --git a/src/Symfony/Component/Validator/ObjectInitializerInterface.php b/src/Symfony/Component/Validator/ObjectInitializerInterface.php
--- a/src/Symfony/Component/Validator/ObjectInitializerInterface.php
+++ b/src/Symfony/Component/Validator/ObjectInitializerInterface.php
@@ -26,4 +26,4 @@ interface ObjectInitializerInterface
      * @return void
      */
-    public function initialize(object $object);
+    public function initialize(object $object): void;
 }
diff --git a/src/Symfony/Component/Validator/Test/ConstraintValidatorTestCase.php b/src/Symfony/Component/Validator/Test/ConstraintValidatorTestCase.php
--- a/src/Symfony/Component/Validator/Test/ConstraintValidatorTestCase.php
+++ b/src/Symfony/Component/Validator/Test/ConstraintValidatorTestCase.php
@@ -291,5 +291,5 @@ abstract class ConstraintValidatorTestCase extends TestCase
      * @psalm-return T
      */
-    abstract protected function createValidator();
+    abstract protected function createValidator(): ConstraintValidatorInterface;
 }

diff --git a/src/Symfony/Component/Validator/Validator/TraceableValidator.php b/src/Symfony/Component/Validator/Validator/TraceableValidator.php
--- a/src/Symfony/Component/Validator/Validator/TraceableValidator.php
+++ b/src/Symfony/Component/Validator/Validator/TraceableValidator.php
@@ -42,5 +42,5 @@ class TraceableValidator implements ValidatorInterface, ResetInterface
      * @return void
      */
-    public function reset()
+    public function reset(): void
     {
         $this->collectedData = [];
diff --git a/src/Symfony/Component/Validator/Violation/ConstraintViolationBuilderInterface.php b/src/Symfony/Component/Validator/Violation/ConstraintViolationBuilderInterface.php
--- a/src/Symfony/Component/Validator/Violation/ConstraintViolationBuilderInterface.php
+++ b/src/Symfony/Component/Validator/Violation/ConstraintViolationBuilderInterface.php
@@ -113,4 +113,4 @@ interface ConstraintViolationBuilderInterface
      * @return void
      */
-    public function addViolation();
+    public function addViolation(): void;
 }
diff --git a/src/Symfony/Component/VarDumper/Caster/AmqpCaster.php b/src/Symfony/Component/VarDumper/Caster/AmqpCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/AmqpCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/AmqpCaster.php
@@ -50,5 +50,5 @@ class AmqpCaster
      * @return array
      */
-    public static function castConnection(\AMQPConnection $c, array $a, Stub $stub, bool $isNested)
+    public static function castConnection(\AMQPConnection $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -86,5 +86,5 @@ class AmqpCaster
      * @return array
      */
-    public static function castChannel(\AMQPChannel $c, array $a, Stub $stub, bool $isNested)
+    public static function castChannel(\AMQPChannel $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -112,5 +112,5 @@ class AmqpCaster
      * @return array
      */
-    public static function castQueue(\AMQPQueue $c, array $a, Stub $stub, bool $isNested)
+    public static function castQueue(\AMQPQueue $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -138,5 +138,5 @@ class AmqpCaster
      * @return array
      */
-    public static function castExchange(\AMQPExchange $c, array $a, Stub $stub, bool $isNested)
+    public static function castExchange(\AMQPExchange $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -169,5 +169,5 @@ class AmqpCaster
      * @return array
      */
-    public static function castEnvelope(\AMQPEnvelope $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castEnvelope(\AMQPEnvelope $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
diff --git a/src/Symfony/Component/VarDumper/Caster/ClassStub.php b/src/Symfony/Component/VarDumper/Caster/ClassStub.php
--- a/src/Symfony/Component/VarDumper/Caster/ClassStub.php
+++ b/src/Symfony/Component/VarDumper/Caster/ClassStub.php
@@ -89,5 +89,5 @@ class ClassStub extends ConstStub
      * @return mixed
      */
-    public static function wrapCallable(mixed $callable)
+    public static function wrapCallable(mixed $callable): mixed
     {
         if (\is_object($callable) || !\is_callable($callable)) {
diff --git a/src/Symfony/Component/VarDumper/Caster/DOMCaster.php b/src/Symfony/Component/VarDumper/Caster/DOMCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/DOMCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/DOMCaster.php
@@ -67,5 +67,5 @@ class DOMCaster
      * @return array
      */
-    public static function castException(\DOMException $e, array $a, Stub $stub, bool $isNested)
+    public static function castException(\DOMException $e, array $a, Stub $stub, bool $isNested): array
     {
         $k = Caster::PREFIX_PROTECTED.'code';
@@ -80,5 +80,5 @@ class DOMCaster
      * @return array
      */
-    public static function castLength($dom, array $a, Stub $stub, bool $isNested)
+    public static function castLength($dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -92,5 +92,5 @@ class DOMCaster
      * @return array
      */
-    public static function castImplementation(\DOMImplementation $dom, array $a, Stub $stub, bool $isNested)
+    public static function castImplementation(\DOMImplementation $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -105,5 +105,5 @@ class DOMCaster
      * @return array
      */
-    public static function castNode(\DOMNode $dom, array $a, Stub $stub, bool $isNested)
+    public static function castNode(\DOMNode $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -132,5 +132,5 @@ class DOMCaster
      * @return array
      */
-    public static function castNameSpaceNode(\DOMNameSpaceNode $dom, array $a, Stub $stub, bool $isNested)
+    public static function castNameSpaceNode(\DOMNameSpaceNode $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -151,5 +151,5 @@ class DOMCaster
      * @return array
      */
-    public static function castDocument(\DOMDocument $dom, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castDocument(\DOMDocument $dom, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $a += [
@@ -188,5 +188,5 @@ class DOMCaster
      * @return array
      */
-    public static function castCharacterData(\DOMCharacterData $dom, array $a, Stub $stub, bool $isNested)
+    public static function castCharacterData(\DOMCharacterData $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -201,5 +201,5 @@ class DOMCaster
      * @return array
      */
-    public static function castAttr(\DOMAttr $dom, array $a, Stub $stub, bool $isNested)
+    public static function castAttr(\DOMAttr $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -217,5 +217,5 @@ class DOMCaster
      * @return array
      */
-    public static function castElement(\DOMElement $dom, array $a, Stub $stub, bool $isNested)
+    public static function castElement(\DOMElement $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -230,5 +230,5 @@ class DOMCaster
      * @return array
      */
-    public static function castText(\DOMText $dom, array $a, Stub $stub, bool $isNested)
+    public static function castText(\DOMText $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -242,5 +242,5 @@ class DOMCaster
      * @return array
      */
-    public static function castDocumentType(\DOMDocumentType $dom, array $a, Stub $stub, bool $isNested)
+    public static function castDocumentType(\DOMDocumentType $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -259,5 +259,5 @@ class DOMCaster
      * @return array
      */
-    public static function castNotation(\DOMNotation $dom, array $a, Stub $stub, bool $isNested)
+    public static function castNotation(\DOMNotation $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -272,5 +272,5 @@ class DOMCaster
      * @return array
      */
-    public static function castEntity(\DOMEntity $dom, array $a, Stub $stub, bool $isNested)
+    public static function castEntity(\DOMEntity $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -289,5 +289,5 @@ class DOMCaster
      * @return array
      */
-    public static function castProcessingInstruction(\DOMProcessingInstruction $dom, array $a, Stub $stub, bool $isNested)
+    public static function castProcessingInstruction(\DOMProcessingInstruction $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -302,5 +302,5 @@ class DOMCaster
      * @return array
      */
-    public static function castXPath(\DOMXPath $dom, array $a, Stub $stub, bool $isNested)
+    public static function castXPath(\DOMXPath $dom, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
diff --git a/src/Symfony/Component/VarDumper/Caster/DateCaster.php b/src/Symfony/Component/VarDumper/Caster/DateCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/DateCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/DateCaster.php
@@ -28,5 +28,5 @@ class DateCaster
      * @return array
      */
-    public static function castDateTime(\DateTimeInterface $d, array $a, Stub $stub, bool $isNested, int $filter)
+    public static function castDateTime(\DateTimeInterface $d, array $a, Stub $stub, bool $isNested, int $filter): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -54,5 +54,5 @@ class DateCaster
      * @return array
      */
-    public static function castInterval(\DateInterval $interval, array $a, Stub $stub, bool $isNested, int $filter)
+    public static function castInterval(\DateInterval $interval, array $a, Stub $stub, bool $isNested, int $filter): array
     {
         $now = new \DateTimeImmutable('@0', new \DateTimeZone('UTC'));
@@ -86,5 +86,5 @@ class DateCaster
      * @return array
      */
-    public static function castTimeZone(\DateTimeZone $timeZone, array $a, Stub $stub, bool $isNested, int $filter)
+    public static function castTimeZone(\DateTimeZone $timeZone, array $a, Stub $stub, bool $isNested, int $filter): array
     {
         $location = $timeZone->getLocation();
@@ -100,5 +100,5 @@ class DateCaster
      * @return array
      */
-    public static function castPeriod(\DatePeriod $p, array $a, Stub $stub, bool $isNested, int $filter)
+    public static function castPeriod(\DatePeriod $p, array $a, Stub $stub, bool $isNested, int $filter): array
     {
         $dates = [];
diff --git a/src/Symfony/Component/VarDumper/Caster/DoctrineCaster.php b/src/Symfony/Component/VarDumper/Caster/DoctrineCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/DoctrineCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/DoctrineCaster.php
@@ -29,5 +29,5 @@ class DoctrineCaster
      * @return array
      */
-    public static function castCommonProxy(CommonProxy $proxy, array $a, Stub $stub, bool $isNested)
+    public static function castCommonProxy(CommonProxy $proxy, array $a, Stub $stub, bool $isNested): array
     {
         foreach (['__cloner__', '__initializer__'] as $k) {
@@ -44,5 +44,5 @@ class DoctrineCaster
      * @return array
      */
-    public static function castOrmProxy(OrmProxy $proxy, array $a, Stub $stub, bool $isNested)
+    public static function castOrmProxy(OrmProxy $proxy, array $a, Stub $stub, bool $isNested): array
     {
         foreach (['_entityPersister', '_identifier'] as $k) {
@@ -59,5 +59,5 @@ class DoctrineCaster
      * @return array
      */
-    public static function castPersistentCollection(PersistentCollection $coll, array $a, Stub $stub, bool $isNested)
+    public static function castPersistentCollection(PersistentCollection $coll, array $a, Stub $stub, bool $isNested): array
     {
         foreach (['snapshot', 'association', 'typeClass'] as $k) {
diff --git a/src/Symfony/Component/VarDumper/Caster/ExceptionCaster.php b/src/Symfony/Component/VarDumper/Caster/ExceptionCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/ExceptionCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/ExceptionCaster.php
@@ -51,5 +51,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castError(\Error $e, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castError(\Error $e, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         return self::filterExceptionArray($stub->class, $a, "\0Error\0", $filter);
@@ -59,5 +59,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castException(\Exception $e, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castException(\Exception $e, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         return self::filterExceptionArray($stub->class, $a, "\0Exception\0", $filter);
@@ -67,5 +67,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castErrorException(\ErrorException $e, array $a, Stub $stub, bool $isNested)
+    public static function castErrorException(\ErrorException $e, array $a, Stub $stub, bool $isNested): array
     {
         if (isset($a[$s = Caster::PREFIX_PROTECTED.'severity'], self::$errorTypes[$a[$s]])) {
@@ -79,5 +79,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castThrowingCasterException(ThrowingCasterException $e, array $a, Stub $stub, bool $isNested)
+    public static function castThrowingCasterException(ThrowingCasterException $e, array $a, Stub $stub, bool $isNested): array
     {
         $trace = Caster::PREFIX_VIRTUAL.'trace';
@@ -100,5 +100,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castSilencedErrorContext(SilencedErrorContext $e, array $a, Stub $stub, bool $isNested)
+    public static function castSilencedErrorContext(SilencedErrorContext $e, array $a, Stub $stub, bool $isNested): array
     {
         $sPrefix = "\0".SilencedErrorContext::class."\0";
@@ -130,5 +130,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castTraceStub(TraceStub $trace, array $a, Stub $stub, bool $isNested)
+    public static function castTraceStub(TraceStub $trace, array $a, Stub $stub, bool $isNested): array
     {
         if (!$isNested) {
@@ -207,5 +207,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castFrameStub(FrameStub $frame, array $a, Stub $stub, bool $isNested)
+    public static function castFrameStub(FrameStub $frame, array $a, Stub $stub, bool $isNested): array
     {
         if (!$isNested) {
@@ -293,5 +293,5 @@ class ExceptionCaster
      * @return array
      */
-    public static function castFlattenException(FlattenException $e, array $a, Stub $stub, bool $isNested)
+    public static function castFlattenException(FlattenException $e, array $a, Stub $stub, bool $isNested): array
     {
         if ($isNested) {
diff --git a/src/Symfony/Component/VarDumper/Caster/FiberCaster.php b/src/Symfony/Component/VarDumper/Caster/FiberCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/FiberCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/FiberCaster.php
@@ -24,5 +24,5 @@ final class FiberCaster
      * @return array
      */
-    public static function castFiber(\Fiber $fiber, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castFiber(\Fiber $fiber, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
diff --git a/src/Symfony/Component/VarDumper/Caster/IntlCaster.php b/src/Symfony/Component/VarDumper/Caster/IntlCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/IntlCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/IntlCaster.php
@@ -25,5 +25,5 @@ class IntlCaster
      * @return array
      */
-    public static function castMessageFormatter(\MessageFormatter $c, array $a, Stub $stub, bool $isNested)
+    public static function castMessageFormatter(\MessageFormatter $c, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -38,5 +38,5 @@ class IntlCaster
      * @return array
      */
-    public static function castNumberFormatter(\NumberFormatter $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castNumberFormatter(\NumberFormatter $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $a += [
@@ -118,5 +118,5 @@ class IntlCaster
      * @return array
      */
-    public static function castIntlTimeZone(\IntlTimeZone $c, array $a, Stub $stub, bool $isNested)
+    public static function castIntlTimeZone(\IntlTimeZone $c, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -138,5 +138,5 @@ class IntlCaster
      * @return array
      */
-    public static function castIntlCalendar(\IntlCalendar $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castIntlCalendar(\IntlCalendar $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $a += [
@@ -158,5 +158,5 @@ class IntlCaster
      * @return array
      */
-    public static function castIntlDateFormatter(\IntlDateFormatter $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castIntlDateFormatter(\IntlDateFormatter $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $a += [
diff --git a/src/Symfony/Component/VarDumper/Caster/MemcachedCaster.php b/src/Symfony/Component/VarDumper/Caster/MemcachedCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/MemcachedCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/MemcachedCaster.php
@@ -27,5 +27,5 @@ class MemcachedCaster
      * @return array
      */
-    public static function castMemcached(\Memcached $c, array $a, Stub $stub, bool $isNested)
+    public static function castMemcached(\Memcached $c, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
diff --git a/src/Symfony/Component/VarDumper/Caster/PdoCaster.php b/src/Symfony/Component/VarDumper/Caster/PdoCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/PdoCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/PdoCaster.php
@@ -63,5 +63,5 @@ class PdoCaster
      * @return array
      */
-    public static function castPdo(\PDO $c, array $a, Stub $stub, bool $isNested)
+    public static function castPdo(\PDO $c, array $a, Stub $stub, bool $isNested): array
     {
         $attr = [];
@@ -115,5 +115,5 @@ class PdoCaster
      * @return array
      */
-    public static function castPdoStatement(\PDOStatement $c, array $a, Stub $stub, bool $isNested)
+    public static function castPdoStatement(\PDOStatement $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
diff --git a/src/Symfony/Component/VarDumper/Caster/PgSqlCaster.php b/src/Symfony/Component/VarDumper/Caster/PgSqlCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/PgSqlCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/PgSqlCaster.php
@@ -73,5 +73,5 @@ class PgSqlCaster
      * @return array
      */
-    public static function castLargeObject($lo, array $a, Stub $stub, bool $isNested)
+    public static function castLargeObject($lo, array $a, Stub $stub, bool $isNested): array
     {
         $a['seek position'] = pg_lo_tell($lo);
@@ -83,5 +83,5 @@ class PgSqlCaster
      * @return array
      */
-    public static function castLink($link, array $a, Stub $stub, bool $isNested)
+    public static function castLink($link, array $a, Stub $stub, bool $isNested): array
     {
         $a['status'] = pg_connection_status($link);
@@ -118,5 +118,5 @@ class PgSqlCaster
      * @return array
      */
-    public static function castResult($result, array $a, Stub $stub, bool $isNested)
+    public static function castResult($result, array $a, Stub $stub, bool $isNested): array
     {
         $a['num rows'] = pg_num_rows($result);
diff --git a/src/Symfony/Component/VarDumper/Caster/ProxyManagerCaster.php b/src/Symfony/Component/VarDumper/Caster/ProxyManagerCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/ProxyManagerCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/ProxyManagerCaster.php
@@ -25,5 +25,5 @@ class ProxyManagerCaster
      * @return array
      */
-    public static function castProxy(ProxyInterface $c, array $a, Stub $stub, bool $isNested)
+    public static function castProxy(ProxyInterface $c, array $a, Stub $stub, bool $isNested): array
     {
         if ($parent = get_parent_class($c)) {
diff --git a/src/Symfony/Component/VarDumper/Caster/RdKafkaCaster.php b/src/Symfony/Component/VarDumper/Caster/RdKafkaCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/RdKafkaCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/RdKafkaCaster.php
@@ -35,5 +35,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castKafkaConsumer(KafkaConsumer $c, array $a, Stub $stub, bool $isNested)
+    public static function castKafkaConsumer(KafkaConsumer $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -58,5 +58,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castTopic(Topic $c, array $a, Stub $stub, bool $isNested)
+    public static function castTopic(Topic $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -72,5 +72,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castTopicPartition(TopicPartition $c, array $a)
+    public static function castTopicPartition(TopicPartition $c, array $a): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -88,5 +88,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castMessage(Message $c, array $a, Stub $stub, bool $isNested)
+    public static function castMessage(Message $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -102,5 +102,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castConf(Conf $c, array $a, Stub $stub, bool $isNested)
+    public static function castConf(Conf $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -116,5 +116,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castTopicConf(TopicConf $c, array $a, Stub $stub, bool $isNested)
+    public static function castTopicConf(TopicConf $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -130,5 +130,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castRdKafka(\RdKafka $c, array $a, Stub $stub, bool $isNested)
+    public static function castRdKafka(\RdKafka $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -146,5 +146,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castCollectionMetadata(CollectionMetadata $c, array $a, Stub $stub, bool $isNested)
+    public static function castCollectionMetadata(CollectionMetadata $c, array $a, Stub $stub, bool $isNested): array
     {
         $a += iterator_to_array($c);
@@ -156,5 +156,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castTopicMetadata(TopicMetadata $c, array $a, Stub $stub, bool $isNested)
+    public static function castTopicMetadata(TopicMetadata $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -171,5 +171,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castPartitionMetadata(PartitionMetadata $c, array $a, Stub $stub, bool $isNested)
+    public static function castPartitionMetadata(PartitionMetadata $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -187,5 +187,5 @@ class RdKafkaCaster
      * @return array
      */
-    public static function castBrokerMetadata(BrokerMetadata $c, array $a, Stub $stub, bool $isNested)
+    public static function castBrokerMetadata(BrokerMetadata $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -203,5 +203,5 @@ class RdKafkaCaster
      * @return array
      */
-    private static function extractMetadata(KafkaConsumer|\RdKafka $c)
+    private static function extractMetadata(KafkaConsumer|\RdKafka $c): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
diff --git a/src/Symfony/Component/VarDumper/Caster/RedisCaster.php b/src/Symfony/Component/VarDumper/Caster/RedisCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/RedisCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/RedisCaster.php
@@ -51,5 +51,5 @@ class RedisCaster
      * @return array
      */
-    public static function castRedis(\Redis|Relay $c, array $a, Stub $stub, bool $isNested)
+    public static function castRedis(\Redis|Relay $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -80,5 +80,5 @@ class RedisCaster
      * @return array
      */
-    public static function castRedisArray(\RedisArray $c, array $a, Stub $stub, bool $isNested)
+    public static function castRedisArray(\RedisArray $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -95,5 +95,5 @@ class RedisCaster
      * @return array
      */
-    public static function castRedisCluster(\RedisCluster $c, array $a, Stub $stub, bool $isNested)
+    public static function castRedisCluster(\RedisCluster $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
diff --git a/src/Symfony/Component/VarDumper/Caster/ReflectionCaster.php b/src/Symfony/Component/VarDumper/Caster/ReflectionCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/ReflectionCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/ReflectionCaster.php
@@ -39,5 +39,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castClosure(\Closure $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castClosure(\Closure $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -78,5 +78,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function unsetClosureFileInfo(\Closure $c, array $a)
+    public static function unsetClosureFileInfo(\Closure $c, array $a): array
     {
         unset($a[Caster::PREFIX_VIRTUAL.'file'], $a[Caster::PREFIX_VIRTUAL.'line']);
@@ -102,5 +102,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castType(\ReflectionType $c, array $a, Stub $stub, bool $isNested)
+    public static function castType(\ReflectionType $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -127,5 +127,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castAttribute(\ReflectionAttribute $c, array $a, Stub $stub, bool $isNested)
+    public static function castAttribute(\ReflectionAttribute $c, array $a, Stub $stub, bool $isNested): array
     {
         self::addMap($a, $c, [
@@ -140,5 +140,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castReflectionGenerator(\ReflectionGenerator $c, array $a, Stub $stub, bool $isNested)
+    public static function castReflectionGenerator(\ReflectionGenerator $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -178,5 +178,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castClass(\ReflectionClass $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castClass(\ReflectionClass $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -212,5 +212,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castFunctionAbstract(\ReflectionFunctionAbstract $c, array $a, Stub $stub, bool $isNested, int $filter = 0)
+    public static function castFunctionAbstract(\ReflectionFunctionAbstract $c, array $a, Stub $stub, bool $isNested, int $filter = 0): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -273,5 +273,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castClassConstant(\ReflectionClassConstant $c, array $a, Stub $stub, bool $isNested)
+    public static function castClassConstant(\ReflectionClassConstant $c, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'modifiers'] = implode(' ', \Reflection::getModifierNames($c->getModifiers()));
@@ -286,5 +286,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castMethod(\ReflectionMethod $c, array $a, Stub $stub, bool $isNested)
+    public static function castMethod(\ReflectionMethod $c, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'modifiers'] = implode(' ', \Reflection::getModifierNames($c->getModifiers()));
@@ -296,5 +296,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castParameter(\ReflectionParameter $c, array $a, Stub $stub, bool $isNested)
+    public static function castParameter(\ReflectionParameter $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -339,5 +339,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castProperty(\ReflectionProperty $c, array $a, Stub $stub, bool $isNested)
+    public static function castProperty(\ReflectionProperty $c, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'modifiers'] = implode(' ', \Reflection::getModifierNames($c->getModifiers()));
@@ -352,5 +352,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castReference(\ReflectionReference $c, array $a, Stub $stub, bool $isNested)
+    public static function castReference(\ReflectionReference $c, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'id'] = $c->getId();
@@ -362,5 +362,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castExtension(\ReflectionExtension $c, array $a, Stub $stub, bool $isNested)
+    public static function castExtension(\ReflectionExtension $c, array $a, Stub $stub, bool $isNested): array
     {
         self::addMap($a, $c, [
@@ -381,5 +381,5 @@ class ReflectionCaster
      * @return array
      */
-    public static function castZendExtension(\ReflectionZendExtension $c, array $a, Stub $stub, bool $isNested)
+    public static function castZendExtension(\ReflectionZendExtension $c, array $a, Stub $stub, bool $isNested): array
     {
         self::addMap($a, $c, [
@@ -396,5 +396,5 @@ class ReflectionCaster
      * @return string
      */
-    public static function getSignature(array $a)
+    public static function getSignature(array $a): string
     {
         $prefix = Caster::PREFIX_VIRTUAL;
diff --git a/src/Symfony/Component/VarDumper/Caster/ResourceCaster.php b/src/Symfony/Component/VarDumper/Caster/ResourceCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/ResourceCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/ResourceCaster.php
@@ -31,5 +31,5 @@ class ResourceCaster
      * @return array
      */
-    public static function castDba($dba, array $a, Stub $stub, bool $isNested)
+    public static function castDba($dba, array $a, Stub $stub, bool $isNested): array
     {
         $list = dba_list();
@@ -42,5 +42,5 @@ class ResourceCaster
      * @return array
      */
-    public static function castProcess($process, array $a, Stub $stub, bool $isNested)
+    public static function castProcess($process, array $a, Stub $stub, bool $isNested): array
     {
         return proc_get_status($process);
@@ -60,5 +60,5 @@ class ResourceCaster
      * @return array
      */
-    public static function castStreamContext($stream, array $a, Stub $stub, bool $isNested)
+    public static function castStreamContext($stream, array $a, Stub $stub, bool $isNested): array
     {
         return @stream_context_get_params($stream) ?: $a;
@@ -68,5 +68,5 @@ class ResourceCaster
      * @return array
      */
-    public static function castGd($gd, array $a, Stub $stub, bool $isNested)
+    public static function castGd($gd, array $a, Stub $stub, bool $isNested): array
     {
         $a['size'] = imagesx($gd).'x'.imagesy($gd);
@@ -79,5 +79,5 @@ class ResourceCaster
      * @return array
      */
-    public static function castOpensslX509($h, array $a, Stub $stub, bool $isNested)
+    public static function castOpensslX509($h, array $a, Stub $stub, bool $isNested): array
     {
         $stub->cut = -1;
diff --git a/src/Symfony/Component/VarDumper/Caster/SplCaster.php b/src/Symfony/Component/VarDumper/Caster/SplCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/SplCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/SplCaster.php
@@ -33,5 +33,5 @@ class SplCaster
      * @return array
      */
-    public static function castArrayObject(\ArrayObject $c, array $a, Stub $stub, bool $isNested)
+    public static function castArrayObject(\ArrayObject $c, array $a, Stub $stub, bool $isNested): array
     {
         return self::castSplArray($c, $a, $stub, $isNested);
@@ -41,5 +41,5 @@ class SplCaster
      * @return array
      */
-    public static function castArrayIterator(\ArrayIterator $c, array $a, Stub $stub, bool $isNested)
+    public static function castArrayIterator(\ArrayIterator $c, array $a, Stub $stub, bool $isNested): array
     {
         return self::castSplArray($c, $a, $stub, $isNested);
@@ -49,5 +49,5 @@ class SplCaster
      * @return array
      */
-    public static function castHeap(\Iterator $c, array $a, Stub $stub, bool $isNested)
+    public static function castHeap(\Iterator $c, array $a, Stub $stub, bool $isNested): array
     {
         $a += [
@@ -61,5 +61,5 @@ class SplCaster
      * @return array
      */
-    public static function castDoublyLinkedList(\SplDoublyLinkedList $c, array $a, Stub $stub, bool $isNested)
+    public static function castDoublyLinkedList(\SplDoublyLinkedList $c, array $a, Stub $stub, bool $isNested): array
     {
         $prefix = Caster::PREFIX_VIRTUAL;
@@ -79,5 +79,5 @@ class SplCaster
      * @return array
      */
-    public static function castFileInfo(\SplFileInfo $c, array $a, Stub $stub, bool $isNested)
+    public static function castFileInfo(\SplFileInfo $c, array $a, Stub $stub, bool $isNested): array
     {
         static $map = [
@@ -158,5 +158,5 @@ class SplCaster
      * @return array
      */
-    public static function castFileObject(\SplFileObject $c, array $a, Stub $stub, bool $isNested)
+    public static function castFileObject(\SplFileObject $c, array $a, Stub $stub, bool $isNested): array
     {
         static $map = [
@@ -198,5 +198,5 @@ class SplCaster
      * @return array
      */
-    public static function castObjectStorage(\SplObjectStorage $c, array $a, Stub $stub, bool $isNested)
+    public static function castObjectStorage(\SplObjectStorage $c, array $a, Stub $stub, bool $isNested): array
     {
         $storage = [];
@@ -222,5 +222,5 @@ class SplCaster
      * @return array
      */
-    public static function castOuterIterator(\OuterIterator $c, array $a, Stub $stub, bool $isNested)
+    public static function castOuterIterator(\OuterIterator $c, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'innerIterator'] = $c->getInnerIterator();
@@ -232,5 +232,5 @@ class SplCaster
      * @return array
      */
-    public static function castWeakReference(\WeakReference $c, array $a, Stub $stub, bool $isNested)
+    public static function castWeakReference(\WeakReference $c, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'object'] = $c->get();
@@ -242,5 +242,5 @@ class SplCaster
      * @return array
      */
-    public static function castWeakMap(\WeakMap $c, array $a, Stub $stub, bool $isNested)
+    public static function castWeakMap(\WeakMap $c, array $a, Stub $stub, bool $isNested): array
     {
         $map = [];
diff --git a/src/Symfony/Component/VarDumper/Caster/StubCaster.php b/src/Symfony/Component/VarDumper/Caster/StubCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/StubCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/StubCaster.php
@@ -26,5 +26,5 @@ class StubCaster
      * @return array
      */
-    public static function castStub(Stub $c, array $a, Stub $stub, bool $isNested)
+    public static function castStub(Stub $c, array $a, Stub $stub, bool $isNested): array
     {
         if ($isNested) {
@@ -50,5 +50,5 @@ class StubCaster
      * @return array
      */
-    public static function castCutArray(CutArrayStub $c, array $a, Stub $stub, bool $isNested)
+    public static function castCutArray(CutArrayStub $c, array $a, Stub $stub, bool $isNested): array
     {
         return $isNested ? $c->preservedSubset : $a;
@@ -58,5 +58,5 @@ class StubCaster
      * @return array
      */
-    public static function cutInternals($obj, array $a, Stub $stub, bool $isNested)
+    public static function cutInternals($obj, array $a, Stub $stub, bool $isNested): array
     {
         if ($isNested) {
@@ -72,5 +72,5 @@ class StubCaster
      * @return array
      */
-    public static function castEnum(EnumStub $c, array $a, Stub $stub, bool $isNested)
+    public static function castEnum(EnumStub $c, array $a, Stub $stub, bool $isNested): array
     {
         if ($isNested) {
@@ -98,5 +98,5 @@ class StubCaster
      * @return array
      */
-    public static function castScalar(ScalarStub $scalarStub, array $a, Stub $stub)
+    public static function castScalar(ScalarStub $scalarStub, array $a, Stub $stub): array
     {
         $stub->type = Stub::TYPE_SCALAR;
diff --git a/src/Symfony/Component/VarDumper/Caster/SymfonyCaster.php b/src/Symfony/Component/VarDumper/Caster/SymfonyCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/SymfonyCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/SymfonyCaster.php
@@ -35,5 +35,5 @@ class SymfonyCaster
      * @return array
      */
-    public static function castRequest(Request $request, array $a, Stub $stub, bool $isNested)
+    public static function castRequest(Request $request, array $a, Stub $stub, bool $isNested): array
     {
         $clone = null;
@@ -53,5 +53,5 @@ class SymfonyCaster
      * @return array
      */
-    public static function castHttpClient($client, array $a, Stub $stub, bool $isNested)
+    public static function castHttpClient($client, array $a, Stub $stub, bool $isNested): array
     {
         $multiKey = sprintf("\0%s\0multi", $client::class);
@@ -66,5 +66,5 @@ class SymfonyCaster
      * @return array
      */
-    public static function castHttpClientResponse($response, array $a, Stub $stub, bool $isNested)
+    public static function castHttpClientResponse($response, array $a, Stub $stub, bool $isNested): array
     {
         $stub->cut += \count($a);
@@ -81,5 +81,5 @@ class SymfonyCaster
      * @return array
      */
-    public static function castLazyObjectState($state, array $a, Stub $stub, bool $isNested)
+    public static function castLazyObjectState($state, array $a, Stub $stub, bool $isNested): array
     {
         if (!$isNested) {
@@ -109,5 +109,5 @@ class SymfonyCaster
      * @return array
      */
-    public static function castUuid(Uuid $uuid, array $a, Stub $stub, bool $isNested)
+    public static function castUuid(Uuid $uuid, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'toBase58'] = $uuid->toBase58();
@@ -125,5 +125,5 @@ class SymfonyCaster
      * @return array
      */
-    public static function castUlid(Ulid $ulid, array $a, Stub $stub, bool $isNested)
+    public static function castUlid(Ulid $ulid, array $a, Stub $stub, bool $isNested): array
     {
         $a[Caster::PREFIX_VIRTUAL.'toBase58'] = $ulid->toBase58();
diff --git a/src/Symfony/Component/VarDumper/Caster/XmlReaderCaster.php b/src/Symfony/Component/VarDumper/Caster/XmlReaderCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/XmlReaderCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/XmlReaderCaster.php
@@ -47,5 +47,5 @@ class XmlReaderCaster
      * @return array
      */
-    public static function castXmlReader(\XMLReader $reader, array $a, Stub $stub, bool $isNested)
+    public static function castXmlReader(\XMLReader $reader, array $a, Stub $stub, bool $isNested): array
     {
         try {
diff --git a/src/Symfony/Component/VarDumper/Caster/XmlResourceCaster.php b/src/Symfony/Component/VarDumper/Caster/XmlResourceCaster.php
--- a/src/Symfony/Component/VarDumper/Caster/XmlResourceCaster.php
+++ b/src/Symfony/Component/VarDumper/Caster/XmlResourceCaster.php
@@ -51,5 +51,5 @@ class XmlResourceCaster
      * @return array
      */
-    public static function castXml($h, array $a, Stub $stub, bool $isNested)
+    public static function castXml($h, array $a, Stub $stub, bool $isNested): array
     {
         $a['current_byte_index'] = xml_get_current_byte_index($h);
diff --git a/src/Symfony/Component/VarDumper/Cloner/AbstractCloner.php b/src/Symfony/Component/VarDumper/Cloner/AbstractCloner.php
--- a/src/Symfony/Component/VarDumper/Cloner/AbstractCloner.php
+++ b/src/Symfony/Component/VarDumper/Cloner/AbstractCloner.php
@@ -237,5 +237,5 @@ abstract class AbstractCloner implements ClonerInterface
      * @return void
      */
-    public function addCasters(array $casters)
+    public function addCasters(array $casters): void
     {
         foreach ($casters as $type => $callback) {
@@ -249,5 +249,5 @@ abstract class AbstractCloner implements ClonerInterface
      * @return void
      */
-    public function setMaxItems(int $maxItems)
+    public function setMaxItems(int $maxItems): void
     {
         $this->maxItems = $maxItems;
@@ -259,5 +259,5 @@ abstract class AbstractCloner implements ClonerInterface
      * @return void
      */
-    public function setMaxString(int $maxString)
+    public function setMaxString(int $maxString): void
     {
         $this->maxString = $maxString;
@@ -270,5 +270,5 @@ abstract class AbstractCloner implements ClonerInterface
      * @return void
      */
-    public function setMinDepth(int $minDepth)
+    public function setMinDepth(int $minDepth): void
     {
         $this->minDepth = $minDepth;
diff --git a/src/Symfony/Component/VarDumper/Cloner/Data.php b/src/Symfony/Component/VarDumper/Cloner/Data.php
--- a/src/Symfony/Component/VarDumper/Cloner/Data.php
+++ b/src/Symfony/Component/VarDumper/Cloner/Data.php
@@ -125,5 +125,5 @@ class Data implements \ArrayAccess, \Countable, \IteratorAggregate, \Stringable
      * @return mixed
      */
-    public function __get(string $key)
+    public function __get(string $key): mixed
     {
         if (null !== $data = $this->seek($key)) {
@@ -269,5 +269,5 @@ class Data implements \ArrayAccess, \Countable, \IteratorAggregate, \Stringable
      * @return void
      */
-    public function dump(DumperInterface $dumper)
+    public function dump(DumperInterface $dumper): void
     {
         $refs = [0];
diff --git a/src/Symfony/Component/VarDumper/Cloner/DumperInterface.php b/src/Symfony/Component/VarDumper/Cloner/DumperInterface.php
--- a/src/Symfony/Component/VarDumper/Cloner/DumperInterface.php
+++ b/src/Symfony/Component/VarDumper/Cloner/DumperInterface.php
@@ -24,5 +24,5 @@ interface DumperInterface
      * @return void
      */
-    public function dumpScalar(Cursor $cursor, string $type, string|int|float|bool|null $value);
+    public function dumpScalar(Cursor $cursor, string $type, string|int|float|bool|null $value): void;

     /**
@@ -35,5 +35,5 @@ interface DumperInterface
      * @return void
      */
-    public function dumpString(Cursor $cursor, string $str, bool $bin, int $cut);
+    public function dumpString(Cursor $cursor, string $str, bool $bin, int $cut): void;

     /**
@@ -46,5 +46,5 @@ interface DumperInterface
      * @return void
      */
-    public function enterHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild);
+    public function enterHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild): void;

     /**
@@ -58,4 +58,4 @@ interface DumperInterface
      * @return void
      */
-    public function leaveHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild, int $cut);
+    public function leaveHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild, int $cut): void;
 }
diff --git a/src/Symfony/Component/VarDumper/Dumper/AbstractDumper.php b/src/Symfony/Component/VarDumper/Dumper/AbstractDumper.php
--- a/src/Symfony/Component/VarDumper/Dumper/AbstractDumper.php
+++ b/src/Symfony/Component/VarDumper/Dumper/AbstractDumper.php
@@ -162,5 +162,5 @@ abstract class AbstractDumper implements DataDumperInterface, DumperInterface
      * @return void
      */
-    protected function dumpLine(int $depth)
+    protected function dumpLine(int $depth): void
     {
         ($this->lineDumper)($this->line, $depth, $this->indentPad);
@@ -173,5 +173,5 @@ abstract class AbstractDumper implements DataDumperInterface, DumperInterface
      * @return void
      */
-    protected function echoLine(string $line, int $depth, string $indentPad)
+    protected function echoLine(string $line, int $depth, string $indentPad): void
     {
         if (-1 !== $depth) {
diff --git a/src/Symfony/Component/VarDumper/Dumper/CliDumper.php b/src/Symfony/Component/VarDumper/Dumper/CliDumper.php
--- a/src/Symfony/Component/VarDumper/Dumper/CliDumper.php
+++ b/src/Symfony/Component/VarDumper/Dumper/CliDumper.php
@@ -91,5 +91,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function setColors(bool $colors)
+    public function setColors(bool $colors): void
     {
         $this->colors = $colors;
@@ -101,5 +101,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function setMaxStringWidth(int $maxStringWidth)
+    public function setMaxStringWidth(int $maxStringWidth): void
     {
         $this->maxStringWidth = $maxStringWidth;
@@ -113,5 +113,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function setStyles(array $styles)
+    public function setStyles(array $styles): void
     {
         $this->styles = $styles + $this->styles;
@@ -125,5 +125,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function setDisplayOptions(array $displayOptions)
+    public function setDisplayOptions(array $displayOptions): void
     {
         $this->displayOptions = $displayOptions + $this->displayOptions;
@@ -133,5 +133,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function dumpScalar(Cursor $cursor, string $type, string|int|float|bool|null $value)
+    public function dumpScalar(Cursor $cursor, string $type, string|int|float|bool|null $value): void
     {
         $this->dumpKey($cursor);
@@ -196,5 +196,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function dumpString(Cursor $cursor, string $str, bool $bin, int $cut)
+    public function dumpString(Cursor $cursor, string $str, bool $bin, int $cut): void
     {
         $this->dumpKey($cursor);
@@ -287,5 +287,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function enterHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild)
+    public function enterHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild): void
     {
         $this->colors ??= $this->supportsColors();
@@ -326,5 +326,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    public function leaveHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild, int $cut)
+    public function leaveHash(Cursor $cursor, int $type, string|int|null $class, bool $hasChild, int $cut): void
     {
         if (empty($cursor->attr['cut_hash'])) {
@@ -344,5 +344,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    protected function dumpEllipsis(Cursor $cursor, bool $hasChild, int $cut)
+    protected function dumpEllipsis(Cursor $cursor, bool $hasChild, int $cut): void
     {
         if ($cut) {
@@ -362,5 +362,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    protected function dumpKey(Cursor $cursor)
+    protected function dumpKey(Cursor $cursor): void
     {
         if (null !== $key = $cursor->hashKey) {
@@ -573,5 +573,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    protected function dumpLine(int $depth, bool $endOfValue = false)
+    protected function dumpLine(int $depth, bool $endOfValue = false): void
     {
         if ($this->colors) {
@@ -584,5 +584,5 @@ class CliDumper extends AbstractDumper
      * @return void
      */
-    protected function endValue(Cursor $cursor)
+    protected function endValue(Cursor $cursor): void
     {
         if (-1 === $cursor->hashType) {
diff --git a/src/Symfony/Component/VarDumper/Dumper/ContextualizedDumper.php b/src/Symfony/Component/VarDumper/Dumper/ContextualizedDumper.php
--- a/src/Symfony/Component/VarDumper/Dumper/ContextualizedDumper.php
+++ b/src/Symfony/Component/VarDumper/Dumper/ContextualizedDumper.php
@@ -35,5 +35,5 @@ class ContextualizedDumper implements DataDumperInterface
      * @return string|null
      */
-    public function dump(Data $data)
+    public function dump(Data $data): ?string
     {
         $context = $data->getContext();
diff --git a/src/Symfony/Component/VarDumper/Dumper/DataDumperInterface.php b/src/Symfony/Component/VarDumper/Dumper/DataDumperInterface.php
--- a/src/Symfony/Component/VarDumper/Dumper/DataDumperInterface.php
+++ b/src/Symfony/Component/VarDumper/Dumper/DataDumperInterface.php
@@ -24,4 +24,4 @@ interface DataDumperInterface
      * @return string|null
      */
-    public function dump(Data $data);
+    public function dump(Data $data): ?string;
 }
diff --git a/src/Symfony/Contracts/Translation/LocaleAwareInterface.php b/src/Symfony/Contracts/Translation/LocaleAwareInterface.php
--- a/src/Symfony/Contracts/Translation/LocaleAwareInterface.php
+++ b/src/Symfony/Contracts/Translation/LocaleAwareInterface.php
@@ -21,5 +21,5 @@ interface LocaleAwareInterface
      * @throws \InvalidArgumentException If the locale contains invalid characters
      */
-    public function setLocale(string $locale);
+    public function setLocale(string $locale): void;

     /**
diff --git a/src/Symfony/Contracts/Translation/TranslatorTrait.php b/src/Symfony/Contracts/Translation/TranslatorTrait.php
--- a/src/Symfony/Contracts/Translation/TranslatorTrait.php
+++ b/src/Symfony/Contracts/Translation/TranslatorTrait.php
@@ -26,5 +26,5 @@ trait TranslatorTrait
      * @return void
      */
-    public function setLocale(string $locale)
+    public function setLocale(string $locale): void
     {
         $this->locale = $locale;
